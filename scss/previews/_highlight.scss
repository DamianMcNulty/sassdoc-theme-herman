// Syntax Highlighting
// ===================
// Orginal Style from ethanschoonover.com/solarized
// (c) Jeremy Hull <sourdrums@gmail.com>
// sass-lint:disable force-element-nesting, class-name-format, indentation


// hljs colors
// -----------
/// A map of colors for code-highlighting
/// @group code
/// @access private
/// @type map
$hljs-colors: (
  'hljs-background': 'slight',
  'hljs-text': 'code',
  'hljs-comment': #93a1a1,
  'hljs-green': #859900,
  'hljs-cyan': #2aa198,
  'hljs-blue': #268bd2,
  'hljs-yellow': #b58900,
  'hljs-orange': #cb4b16,
  'hljs-red': #dc322f,
  'hljs-formula': #eee8d5,
  'hljs-shadow': 'code-shadow',
);

@include herman-add-colors('hljs-colors', $hljs-colors);


// hljs-gradient
// -------------
/// Creates a faux-background gradient
/// to overlay the edges of a code-block,
/// so code-overflow is more obvious.
/// @group code
/// @access private
/// @see {css} Code Blocks
/// @parameter {string} $direction -
///   Any valid gradient direction, e.g. `to top`
/// @parameter {string} $small [false] -
///   Use a smaller gradient for vertical/left overflow
/// @return {background-image} -
///   A linear-gradient with the appropriate color-stops
@function hljs-gradient(
  $direction,
  $small: false
) {
  $color: color('hljs-background');
  $dir: unquote($direction);
  $first: if($small, size('quarter-shim'), size('half-shim'));
  $second: if($small, size('shim'), size('gutter') + size('shim'));

  @return linear-gradient($dir, $color $first, rgba($color, 0) $second);
}


// Code Blocks
/// @name Code Blocks
/// @group code
/// @access private
/// @require {function} hljs-gradient
[data-sassdoc='hljs'],
[data-sassdoc-page='index'] pre {
  align-items: stretch;
  background-color: color('hljs-background');
  color: color('hljs-text');
  display: flex;
  position: relative;

  code {
    flex: 0 0 100%;
    overflow-x: auto;
    padding: size('shim');
    padding-right: size('gutter');
  }

  @include before(' ') {
    @include stretch(0, 0, 0, 0);
    background:
      hljs-gradient('to top', 'small'),
      hljs-gradient('to right', 'small'),
      hljs-gradient('to bottom', 'small'),
      hljs-gradient('to left') no-repeat scroll;
    box-shadow: 0 0 size('half-shim') color('hljs-shadow') inset;
    pointer-events: none;
  }
}

[data-sassdoc-page='index'] pre {
  margin-bottom: size('gutter');
}

.hljs-comment,
.hljs-quote {
  color: color('hljs-comment');
}

// Solarized Green
.hljs-keyword,
.hljs-selector-tag,
.hljs-addition {
  color: color('hljs-green');
}

// Solarized Cyan
.hljs-number,
.hljs-string,
.hljs-meta .hljs-meta-string,
.hljs-literal,
.hljs-doctag,
.hljs-regexp {
  color: color('hljs-cyan');
}

// Solarized Blue
.hljs-title,
.hljs-section,
.hljs-name,
.hljs-selector-id,
.hljs-selector-class {
  color: color('hljs-blue');
}

// Solarized Yellow
.hljs-attribute,
.hljs-attr,
.hljs-variable,
.hljs-template-variable,
.hljs-class .hljs-title,
.hljs-type {
  color: color('hljs-yellow');
}

// Solarized Orange
.hljs-symbol,
.hljs-bullet,
.hljs-subst,
.hljs-meta,
.hljs-meta .hljs-keyword,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-link {
  color: color('hljs-orange');
}

// Solarized Red
.hljs-built_in,
.hljs-deletion {
  color: color('hljs-red');
}

.hljs-formula {
  background: color('hljs-formula');
}

.hljs-emphasis {
  font-style: italic;
}

.hljs-strong {
  font-weight: bold;
}
