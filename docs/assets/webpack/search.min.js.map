{"version":3,"sources":["webpack:///./search.js","webpack:////Users/miriam/Sites/herman/node_modules/jquery-deparam/jquery-deparam.js","webpack:////Users/miriam/Sites/herman/node_modules/lunr/lunr.js","webpack:////Users/miriam/Sites/herman/node_modules/mark.js/dist/mark.js","webpack:////Users/miriam/Sites/herman/node_modules/nunjucks/browser/nunjucks-slim.js","webpack:////Users/miriam/Sites/herman/templates/client/search_result.njk","webpack:////Users/miriam/Sites/herman/templates/client/search_results.njk"],"names":[],"mappings":"uLAGA,KAEA,EAAQ,KACR,EAAQ,KAER,IAKA,qBACA,GAaA,GAbM,EAAoB,IAAS,OAAO,OACxC,WAAW,kBACT,KACE,MACA,WAAK,OAEP,wBAAM,OAGV,IAAM,EAAc,GAAI,KAAS,YAEjC,SAEM,EAAe,iBAAM,KAAQ,OAAO,SAAS,OAAO,OAAO,GAEjE,EAAM,EAA0B,WAC9B,IAAM,GACJ,CACA,SAEF,aAcD,cAda,QAAS,QAAQ,WAC3B,QAAO,KAAa,MAAO,QAAQ,WAEjC,IAAM,GAAoB,QAAW,SAAS,IAAI,kBAChD,OAAO,EACP,UAAQ,EAAE,GAIZ,GAAM,EAAsB,OAAd,KAAwB,QACtC,WAAQ,KAAiB,KAC1B,SACF,EACD,IAGF,EAAM,EAA6B,aACjC,IAAI,EAAQ,MAAM,OAEhB,IAAM,GAAU,EAAG,KAAK,iCAA+B,IACvD,MAAI,GAAK,KAAS,WAAW,EAC9B,MACD,IAAI,EAAQ,SAAS,OACnB,IAAM,GAAS,EAAG,KAAK,oCAAkC,IACzD,KAAQ,SAAS,KAAS,aAAJ,OAAU,GAAE,MAAQ,EAAE,KAE5C,MAAI,GAAK,KAAQ,WAAW,EAAQ,SAAS,MAAM,EAAG,GACpD,MAAM,UAEJ,GAAO,WAAW,QAAQ,WACxB,IAAM,GACN,IADgB,KAAK,gBACf,EACN,IADgB,KAAK,YACf,EACN,OADe,KAAK,SAChB,KACF,IAAM,GAAO,EAAK,UAAU,MAC5B,KACE,KACE,EADE,GAAK,UACF,OAAO,GAAI,EAAK,OAAS,GAGhC,YACE,EADE,GAAK,UACF,OAAO,EAAG,EAAK,OAAS,GAG/B,aACE,EADE,GAAK,UACF,OAAO,GAAI,EAAK,OAAS,GAGlC,YAAK,UAAY,EAAK,KACvB,IACF,CACF,EAEJ,GACF,CAED,EAAM,EAAwB,aAC5B,IAAI,GACJ,OAAI,GAAW,EAAQ,OAAQ,oBAC7B,aAAoB,iDAAS,SAC3B,MAAM,EAAM,EAAY,EACxB,KAAM,EAAS,EAAwB,EAAM,UAC7C,aAAI,EAAE,EAAO,MAAM,QAAU,EAAO,SAClC,QAEF,UAAM,GACJ,gBAAS,EACT,WAAO,EACP,eAAU,EAAO,SAAS,OAAS,EAAI,SAGzC,IAAM,EAAK,EAAE,EAAY,OAEzB,wBAEA,SAAU,EACX,MAlB4B,mFAmB9B,CACD,IAAM,GAAa,EACjB,EAAY,OAAO,qBACjB,CACA,aAAO,EAGX,YAAW,OAAO,sBAClB,UAAE,uBACH,OAED,EAAM,EAAkB,aAEtB,GAAc,GAAQ,EAEtB,SAAM,GAAM,IAAK,MAAM,KAAK,EAC5B,KAAM,EAAU,EAChB,UACD,MAED,EAAM,EAAgB,UACpB,IAAM,GAEN,OAAI,GAAU,EAAO,EACnB,IAAM,GAAU,GAChB,kBAAQ,KAAK,MAEb,0BAAQ,OAAkB,UACxB,IACA,MAAmB,GAAf,OAAK,QACP,GADwB,MAAK,UAE3B,GAAO,KAAK,MAAM,KACnB,aAFD,CAES,QAER,CAEH,CAAS,IAAM,EAChB,EAED,IAAQ,QAAmB,UACzB,CAAS,SAAW,EACrB,EAED,IACD,MACF,CAzBD,EA2BA,EAAE,UACA,CACD,GAFD,uCC9JA,YAEA,IACA,SACA,GAAS,SACT,CACA,WAcA,IAAC,cACD,oBACA,IACA,MAQA,4FACA,IAGA,aAFA,4BACA,IAEA,MAIA,YACA,iBAIA,iCAEA,+BAIA,2BAEA,qBAGA,KAIA,EACA,sBAkDA,SAEA,QAhCA,2BAhBA,kCACA,GACA,uCAIA,QAU2B,KAAgB,KAC3C,yBACA,YACA,6BAQA,iBAEA,6DAEqB,QAAa,kBAGlC,gBAIA,QAMA,MAOA,OAEA,EAGA,iCADA,YACC,uBCzHD,sBAMA;;;;GAAC,WAgCD,CACA,iBACA,aAEA,0BACA,MACA,UACA,iBAGA,0BACA,MAGA,WACA,YACA,SAEA,UAQA,QACA,EAOA,SACA,wBAEA,mBACA,oBACA,cAEA,OAEA,CAAC,EAYD,MACA,4BACA,oBACA,SAEA,KAEA,YACA,0BACA,MACA,cACA,iBACA,gBAEA,sBAEA,iCACA,4BAEA,YACA,WAGA,2CACA,iBAEA,gBACA,iBAEA,wCACA,qBACA,uEAGA,aACA,YAQA,EACA,mBACA,OAEA,SACA,QACA,mCAGA,2BAEA,4BACA,OASA,EACA,qBACA,aACA,iBACA,KAMA,EACA,qCACA,aACA,GAqBA,EACA,oCACA,iCACA,UACA,IAQA,EACA,mCACA,wBAA2B,SAC3B,6CACA,SAkBA,EACA,uBACA,aACA,UAGA,kBACA,mCACA,wCACA,cAGA,iCACA,kBACA,OAEA,WAAwC,EAAiB,SACzD,SACA,YAEA,qCAEA,QACA,OACA,8BACA,UACA,cAKA,cAGA,EAEA,CACA,QAQA,EACA,sBAkCA,UACA,qBACA,MACA,WAEA,6CAkCA,MACA,yCACA,WACA,kCAGA,kDACA,yCACA,QAOA,EACA,kDACA,gCAGA,oCAEA,oGAWA,EACA,2BACA,aAEA,SAWA,4BAVA,kBAEA,uBACA,OAEA,4BAEA,wCAEA,IASA,EACA,mCACA,kCAEA,gCACA,YACA,2CACA,OAAG,EACH,KAUA,EACA,wCACA,YAEA,iDACA,eACA,qBAIA,mDACA,IAUA,EACA,yCACA,YAEA,iDACA,eACA,qBAGA,+CACA,IAMA,EACA,uCACA,mBACA,YAIA,2BACA,EAQA,EACA,oCACA,yBAEA,SAAiB,EAAiB,IAClC,WAEA,oCACA,OAEA,4BAEA,WACA,SAGA,MACA,QASA,EACA,0CACA,aAEA,6CACA,UACA,UACA,EAKA,EACA,qCACA,MACA,SAQA,EACA,sCACA,mCACA,mBAEA,iCACA,KACA,EAqBA,EACA,oBACA,iBACA,gBACA,KAYA,EACA,+CAEA,IACA,8BAGA,aACA,yBACA,IACA,UACA,mBAEA,KACA,MACA,MAGA,KACA,MAGA,KAIA,SACA,YACA,mBAGA,WACA,MAGA,IACA,IAGA,IACA,IAEA,cAUA,EACA,uCACA,2BACA,MACA,iBACA,EASA,EACA,yCACA,iBACA,aAEA,yBACA,oDAEA,6BAEA,MAMA,EACA,uCACA,gCAEA,uBACA,kBAEA,SAAiB,EAAoB,OACrC,SACA,eAGA,gCACA,OAOA,EACA,kCACA,WACA,sBACA,wBACA,aACA,QAEA,OACA,cACA,KACA,OACK,EACL,OACK,EACL,qBACA,MACA,KAIA,GACA,QASA,EACA,yCACA,wCACA,YAMA,EACA,qCACA,sCAEA,SAAwB,kBAA0B,YAClD,cAGA,YACA,QAMA,EACA,oCACA,aACA,QAiBA,EACA,oBACA,IAwBA,iQAUA,yEAEA,aADA,WAEA,iBAOA,WACA,6DACA,+FACA,iFAEA,qCACA,oBACA,mBACA,eACA,oBACA,OACA,cACA,sBAEA,8CACA,qBAEA,6IAEA,mDACA,wFAEA,sBACA,aACA,MAEA,yDACA,IACA,GACA,EACA,EACA,EACA,EACA,EAEA,KAAuB,WAEvB,yBACA,GACA,oCAIA,IACA,IAEA,MAAqB,sBACrB,UAA2B,wBAG3B,SACA,IACA,cACA,SACA,QACA,aACA,MACA,kBAEA,IAAK,mBACL,SACA,YACA,GACA,MACA,UACA,IACA,IACA,IACA,MAA0B,WAC1B,MAA+B,SAAc,kBAC7C,OAA+B,aAE/B,KAGA,IACA,cACA,SACA,YACA,OACA,GAGA,IACA,cACA,SACA,YACA,OACA,GACA,MACA,cAEA,KAGA,IACA,cACA,SACA,YACA,OACA,GACA,MACA,cAEA,KAGA,IACA,IACA,cACA,SACA,YACA,GACA,MACA,UAEA,IAAK,mBACL,SACA,iBACA,GACA,MACA,UAEA,IAGA,IACA,cACA,SACA,YACA,GACA,IACA,IACA,8BACA,WAEA,IAEA,CAcA,MAbA,KACA,iBACA,UACA,kBAKA,KACA,oCAGA,KAGA,oBACA,UACA,SACA,CAAC,IAED,sCAiBA,WACA,oCACA,6BACA,CAEA,MADA,SAGA,wBACA,sCACA,QACA,CAaA,EACA,mBAwHA,gzBAEA,6CAoBA,kBACA,qBACA,4BACA,4CACA,GACA,IAEA,sCA0BA,WACA,qBACA,MACA,cACA,4BACA,4BACA,CASA,EACA,mBAQA,EACA,gCACA,0BAEA,gBAAmC,OAAS,IAC5C,aAGA,eACA,WACA,IAUA,EACA,iCACA,OACA,uDAEA,sCAEA,KAgBA,EACA,wCACA,mBAEA,YACA,CACA,OACA,iBAGA,kBACA,QAGA,qBACA,IAGA,kBAFA,eAGA,eAEA,kBACA,gBAGA,YACA,kBAEA,gBACA,CACA,wBACA,+BAGA,IAKA,uCACA,IAGA,kBAFA,eAGA,eAEA,kBACA,gBAGA,YACA,kBAEA,gBACA,CACA,uCACA,kBAGA,IAIA,wBACA,yBAMA,8CACA,iBACA,yBACO,SACP,aACA,sBACA,MAEA,CACA,kBAEA,gBACA,CACA,uCACA,kBAGA,IAIA,uBACA,iBACA,yBACO,SACP,aACA,sBACA,MAEA,CACA,kBAEA,gBACA,CACA,uCACA,QAGA,KAKA,uCACA,IAIA,kBAHA,kBACA,eAGA,eAEA,kBACA,gBAGA,YACA,kBAEA,gBACA,CACA,uCACA,oBAGA,IACA,CAEA,CACA,QAWA,EACA,iCACA,iBACA,SACA,IAUA,aAAmC,OAAS,QAC5C,OACA,YAEA,KACA,OACA,OACA,aAEK,YACL,aACA,WAEA,UACA,WAIA,gBAEA,OACA,CAEA,CACA,QAOA,EACA,uCACA,QAEA,SACA,QACA,QAGA,iBACA,SACA,2BACA,WAEA,cACA,gBAGA,oBAAmB,EAAS,IAC5B,MAEA,YACA,iBACA,sBAGA,UAEA,CACA,QAWA,EACA,wCASA,SACA,iBAGA,8BACA,8BACA,WAEA,SAAiB,EAAS,QAC1B,OACA,YAEA,iBACA,EAEA,CACA,QAWA,EACA,0CACA,QAGA,WAFA,YAGA,CACA,QACA,cAGA,iBACA,KAMA,sCACA,WACA,4BACA,WAEA,SAAmB,EAAU,QAC7B,GAEA,iBAAqB,EAAU,IAC/B,SAEA,kBACA,cACA,mBACA,sBACA,MAEA,uBAIA,kBACA,mBAMA,mBACA,WACA,iBAGA,mBACA,CACA,QACA,SAEA,QAEA,CACA,CAEA,CACA,UACA,6BACA,mBACA,mBACA,cACA,uBACA,mBAEA,+CACA,IACA,KAEA,YACA,6BAGA,yCAAiB,kCAAiD,qBAElE,iBADA,IAIA,SAEA,cACA,mCAEA,uDAGA,aAA4B,SAAiB,WAC7C,aACA,WAEA,OAEA,oCACA,CACA,SACA,OAGA,UACA,GAEA,GACA,cACA,gBAEA,8CACA,eACA,IAEA,iDACA,sCAA8C,EAAa,SAC3D,YACA,4BAEA,qBACA,2CAIA,2BAEA,gCAGA,2BACA,KACA,CAqBA,EACA,mBACA,sBACA,kCACA,6BACA,uBACA,uBACA,QA+DA,EACA,oCACA,8BACA,aACA,mBACA,OACA,EA0BA,EACA,mCAQA,wBACA,wBACA,sBACA,sBAEA,QAEA,oBAAiB,cAA0B,WAS3C,SACA,aAEA,SACA,sCAEA,SAGA,kBAAmB,MAAkB,WACrC,GAQA,OAOA,4BACA,2CAEA,YAAqB,MAA0B,OAK/C,cACA,YACA,qBAEA,SAAuB,aAA0B,WASjD,SACA,YACA,cACA,YAUA,SACA,2BAQA,6CAAmF,WAMnF,IAIA,gBAAyB,MAAiC,WAO1D,IAKA,KAJA,aACA,gBACA,iBAGA,iBAEA,mBAGA,UAEA,CACA,QAEA,CACA,CAEA,kBACA,QACA,qBAEA,QAAiB,MAA8B,WAS/C,IAMA,2BALA,UACA,cACA,iCACA,oBAGA,iBACA,6BACK,UACL,OACA,CACA,MACA,kBAEA,MACA,SACA,OACA,CAKA,4BACA,kBACA,KACA,EASA,EACA,mCACA,wBACA,eACA,sBACA,eACA,iBAAK,EAEL,yBACA,6BACA,+BACA,SAAK,EAEL,YACA,WACA,oBACA,OACA,eACA,uCAEA,SAOA,EACA,wBACA,IACA,MACA,SACA,aACA,SACA,+BACA,4BAEA,uBACA,4JAGA,eAAiB,MAA8B,WAC/C,OACA,SACA,OAEA,cACA,SAEA,WAAiB,MAAoC,WACrD,OACA,SACA,OAEA,KACA,UACA,MAEA,UAEA,oBAEA,SACA,iBACA,6BACA,OAEA,iBACA,QA6BA,EACA,oBACA,WACA,UACA,4CACA,WACA,6BACA,iCACA,8BACA,mCACA,4BACA,UACA,cACA,mBACA,OACA,oBAaA,EACA,mCACA,MACA,MAWA,EACA,qCACA,cACA,OASA,EACA,iCACA,SACA,IACG,EACH,IAIA,GAQA,EACA,kCACA,MACA,KAaA,EACA,mCACA,cAEA,0BAEA,YAAiB,iBAAyB,WAC1C,YACA,aACA,YACA,6BACA,eACA,8BAEA,WACA,+CAGA,0BAGA,mBAAmB,MAAkB,WACrC,MAEA,KACA,oBAGA,SAIA,gCACA,qBACA,oBACA,0BAEA,YAAuB,iBAAyB,OAChD,qCAGA,WACA,kBAGA,cACA,mEAKA,iBAAqB,2BAAmC,WACxD,YACA,yBAEA,yBACA,iCAGA,6DACA,OACA,CAEA,CACA,CAMA,EACA,2DAEA,4BACA,kBACA,OACA,KAEA,OAAiB,EAAoB,QACrC,6BACA,UAEA,sBACA,SAEA,cACA,cACA,eAEA,aAAiB,iBAAyB,OAC1C,WACA,iBAGA,UACA,oBAMA,EACA,iDACA,QACA,yBACA,0BACA,uBAEA,QAAiB,EAAqB,QACtC,iCACA,UACA,iBACA,wBACA,cACA,iCACA,YAEA,SAAmB,EAAiB,QACpC,SAKA,IAJA,OACA,6BACA,OAGA,kDACA,eAEA,UAGA,+DACA,wCAQA,aACA,WAEA,CACA,MAEA,MACA,cAMA,EACA,6CACA,0BACA,0CAEA,OASA,EACA,oCACA,aACA,oCACA,0BAEA,6BACA,oBACA,gCACA,2BACA,qBACA,sBAEA,gBAeA,EACA,mCACA,4CACA,aACA,cACA,OAYA,EACA,2BACA,2BACA,eAOA,UAAiB,MAAyB,OAC1C,MACA,eAGA,oCACA,qCACA,WACA,gBAUA,EACA,yCACA,yBAEA,YAAiB,MAAkB,WACnC,OACA,qBAEA,kBACA,qDAGA,iBAAmB,MAAmB,WACtC,OACA,qBAEA,qBACA,2DAGA,mBAAqB,MAAiB,OACtC,MAEA,yCACA,oBAEA,kDAIA,kBACA,CACA,CAQA,EACA,yCACA,gBACA,UAKA,sCAJA,gBACA,iCAIA,aAIA,iBAHA,qCAKA,UAAiB,MAAyB,OAC1C,MAEA,sCACA,6CAEA,MAGA,IAWA,EACA,mBACA,MACA,gBACA,WAwBA,EACA,iCACA,wBACA,2BACA,0BAuBA,EACA,oCACA,OACA,6BAGA,WACA,sBAGA,GACA,sBAGA,gBACA,6CAGA,qEACA,wBAGA,sEACA,4BAGA,kBAEA,QACA,IAmBA,EACA,oCACA,OACA,eAEA,YAEA,UACA,MACA,iCACA,WACA,uBACA,eACA,aACA,OAEA,sCACA,wBACA,MACA,gBACA,oBACA,gBACA,aACA,OACA,wBAEA,qCACA,wBAGA,eAEA,OAEA,6CACA,QACA,aACA,aAEA,MAAiB,6BAAqC,OACtD,WACA,uCACA,gBAGA,sCACA,sCAEA,SACA,KAEA,uCACA,mBACA,CACA,gBACA,yBACA,eAGA,sBACA,KAEA,iDACA,wCACA,aACA,GAEA,sCACA,mBACA,2BAGA,+BACA,KAEA,iBADA,KAGA,uCACA,sBACA,OAEA,wCACA,kBACA,gBAGA,mBACA,KAEA,wCACA,WACA,GAEA,gDACA,OAEA,EACA,UACA,sBACG,eAEH,sBACA,UAEA,UAEA,sCACA,sBACA,QAEA,uBACA,2BACA,yBACA,2CACA,2BAEA,iCACA,UACA,6BACA,SACA,sBACA,SAEA,gCACA,IACA,gBACA,6BAGA,SAEA,WACA,2BAEA,SAEA,wCACA,UACA,WACA,qCACA,4BACA,SAEA,iCACA,UACA,WACA,qCACA,oBACA,SAEA,+BACA,CACA,iCAEA,KAYA,EACA,iDAEA,gCACA,QACA,SAEA,0BACA,wBAIA,8BACA,GACA,kBACA,QAEA,IACA,2BAGA,YACA,gBACA,SACA,iCAEA,mBAGA,mBACA,gBACA,SACA,iCAEA,mBAGA,iCACA,mCAEA,OACA,GAEA,2BACA,kBACA,mBACA,aACA,gCACA,GAEA,wCACA,YACA,8BAEA,gCAGA,wBAGA,kBACA,OAEA,6CACA,0BACA,YAEA,gDACA,YACA,aAEA,uBADA,KAGA,6CACA,YACA,yBACA,eACA,kBAEA,0CACA,SAEA,gBAIA,mBACA,wBACA,2BACA,6BACA,0BACA,UACA,4DAEA,UACA,4CAGA,uCAEA,QAEA,oCACA,SAEA,mBAIA,mDACA,wCAAkE,gBAAuB,QACzF,qCAEA,iEACA,IAEA,2BAEA,aAEA,0BACA,OACA,wEACA,IAEA,UACA,wBACA,0BACA,UACA,+CACA,4CAEA,SAEA,mCACA,SAEA,mBAIA,sCAEA,eACA,wCAGA,wBAEA,gBACA,UAIA,cAHA,sBAIA,wBACA,cACA,2BACA,4BACA,eACA,2BACA,6BACA,mCACA,oCACA,2BACA,WACA,gDACA,4CAEA,SAEA,2CACA,SAEA,mBAIA,gCAEA,gBACA,OACA,wEACA,IAEA,iBAEA,uBAEA,gBACA,UAIA,cAHA,sBAIA,wBACA,cACA,2BACA,4BACA,eACA,2BACA,6BACA,mCACA,oCACA,2BACA,WACA,gDACA,4CAEA,SAEA,oCACA,SAEA,mBAIA,gCAEA,gBACA,OACA,gEACA,IAEA,iBAEA,gBAEA,gBACA,UAIA,cAHA,sBAIA,wBACA,cACA,2BACA,4BACA,eACA,2BACA,6BACA,mCACA,oCACA,2BACA,WACA,gDACA,4CAEA,OAMG,eAGH,+DAYA,WAAG,iBAMH,CACA,QACA,EAAC,qCCj5FD,eAAiD,MAA0C,oCAA4D,qCAfvJ,oCASmD,aAAgB,cAAsB,OAAO,WAAqD,QAA1B,+CAAmF,iBAAiC,MAAe,QAE9P,cAAgC,gBAA2C,aAAgB,MAAkB,OAAO,MAA2B,oBAAwD,iBAAgC,gCAAuD,uCAA6D,MAAE,uBAAyD,CAAsJ,cAAjF,gBAA6D,QAAuB,CAE/iB,6EAAoG,OAAmB,SAAE,aAAmB,4FAA8H,UAJ1Q;;;;;uDAQA,gBAEA,kBACA,OACA,OAAS,8BAMT,WAAC,gBACD,iBACA,cACA,GAEA,aAEA,WACA,wBACA,kCACA,+BAEA,MAEA,CAqnBA,YApnBA,KACA,uBACA,8DAEA,mBACA,aAGA,6DACA,8BAEA,eACS,GACT,KACA,6BACA,kBAAiD,sCACjD,OACS,GACT,KACA,gCACA,CAsBA,MArBA,yCAEA,gCACA,4CACA,gBAEA,6EACA,iBAEA,sCACA,oBAEA,kCACA,gFACA,iBAEA,wBACA,yCAEA,iCACA,yBAES,GACT,KACA,wCACA,gBACA,qCACA,qEACA,UACA,+BACA,OACA,4CACA,iFACA,kDACA,qHAEA,QAEA,CACA,QACS,GACT,KACA,mCACA,CAIA,0DAHA,iBAEA,8BAES,GACT,KACA,wCACA,4CACA,8BACA,MAEA,qCACA,8BACA,MACA,EACS,GACT,KACA,yCACA,OACA,oHACA,OACS,GACT,KACA,4CACA,6CACA,kBACA,6BAGA,WAEA,IACA,EACS,GACT,KACA,uCACA,IACA,iBACA,6CACA,qCAEA,eACA,sBAEA,gFACA,OACS,GACT,KACA,0CACA,iCACA,eACA,o8EACA,KAcA,sCAbA,oBACA,sBACA,KACA,eAGA,wDACA,OACA,OACA,CACA,QACA,EACA,IAES,GACT,KACA,4CACA,6BACA,SACS,GACT,KACA,wCACA,OAEA,gBAEA,kCACA,gCACA,WACA,+BACA,UACA,YAIA,GAEA,uCACA,UAbA,uEAcA,OACA,8CAEA,YANA,GAOS,GACT,KACA,wCACA,OAEA,KACA,iCACA,OACA,mDAKA,YACA,oBAEA,OAEA,cATA,oBAGA,OAOA,GACA,8BACA,mBACA,MACA,YAEA,OACS,GACT,KACA,6BACA,QACA,gBACS,GACT,KACA,+BACA,OAEA,2BACA,yDAIA,gBAHA,8DACA,iBAGA,QACA,EAgBA,2BAfA,kBACA,KAAiB,sBACjB,SACA,oCACA,UACA,QAGA,YACA,iBACA,MACA,QAEA,IACA,IAES,GACT,KACA,gDACA,IACA,GACA,EACA,eACA,gDACA,0BAEA,8DACA,MAEA,8DACA,uBAGA,uDACA,uBAEA,YACA,CACA,QACA,MAEA,QACS,GACT,KACA,6CACA,IACA,GACA,SACA,0BAGA,KAFA,cAGA,8BACA,IACA,MACA,aAEA,wEACA,KACA,qCACA,uBACiB,YACjB,2CAEA,sDACA,uBAEA,YACA,CACA,QACA,MAEA,QACS,GACT,KACA,gCACA,OAEA,OACA,GACA,+DACA,QACA,SACA,8BACA,OAEA,QAAiB,aACjB,2BACA,uBAEA,yBAEA,aAAiB,YACjB,GACA,CACA,QAEA,SACA,EACS,GACT,KACA,kCACA,qCACA,iDACS,GACT,KACA,2CACA,iCACA,mBACA,2BACA,SACA,iBAOA,oCANA,iBACA,2CAEA,2BACA,yBACA,mBAES,GACT,KACA,qDACA,OAEA,gCACA,iBACA,uCACA,SACA,MAGA,mBACA,4BACA,2BACA,4BACA,yCAEA,kBACA,iCACA,CACA,2BACA,mBAEA,qBAEA,OACA,GACA,gCACA,WACA,QAEA,QAEA,SACA,CACA,QACA,EACS,GACT,KACA,uCACA,OAEA,iBACA,+BACA,4BACA,KACA,YACA,qCACA,gBAGA,iBACA,SACA,eAA+C,EAAc,IAC7D,YAGA,0CACA,YAEA,6BAEA,EACA,GACA,GACA,EACS,GACT,KACA,qDACA,OAEA,iBACA,+BACA,QACA,4CACA,QACA,MACA,eAA2C,EAAc,IACzD,YAGA,oBAEA,oDACA,UACA,OAAyB,eACzB,GACA,YACA,IACA,EACA,CACA,GACA,EACS,GACT,KACA,4CACA,OAEA,kCACA,eACA,8BACA,qCACA,WACA,UACA,QAGA,sDACA,sBACA,iBAA6B,aAC7B,CACA,MAEA,EACA,GACA,GACA,EACS,GACT,KACA,iCACA,aACA,eACA,2BACA,0CAEA,eACA,uBACA,QAIA,uBAFA,WAGS,GACT,KACA,qCACA,CAGA,SACA,mCACA,uDACA,qCAGA,2CAEA,qCACA,aACS,GACT,KACA,gCACA,OAEA,UACA,gDACA,YACA,IACA,uBAKA,mBAEA,0EACA,cACA,aAAiB,aARjB,CACA,UACA,OACA,YAMA,CACA,YAEA,iBACA,OACA,EACS,GACT,KACA,0BACA,OAEA,UACA,YACA,IAEA,6DACA,WACA,aACA,mCACA,aAuBA,mBAEA,6BACA,eAEA,qBA3BA,oCACA,UACA,yCACA,4BACA,cACA,eAAqB,aACrB,CACA,IACA,UACA,OAAqB,YACrB,CACA,YAEA,eACA,aAEA,yBAEA,GACA,EAEA,IAQA,GACS,GACT,KACA,gCACA,OAEA,UACA,YACA,SACA,oBACA,qEACA,yDACA,cACA,eAAqB,eACrB,CACA,UACA,SAAqB,YACrB,OACA,OAEA,aAEA,OACS,GACT,KACA,0BACA,OAEA,UACA,8CACA,OACA,yBACA,4BAEA,4CACA,mEACA,GACA,gBAAiB,aACjB,SACA,iBACA,wBACA,iBAEA,yBAEA,aAAiB,WACjB,KACS,GACT,KACA,qBACA,WAAuC,KACvC,SACA,aACA,GACA,WACA,WACA,mBACA,sBACA,cACA,qBACA,YACA,kBACA,iBACA,8BACA,EACA,+BACA,2BACA,qBACA,mBACA,CACA,QACA,kBACA,EACA,eAEA,WACA,gBACA,aACA,IACS,GACT,KACA,yBACA,kEACA,eAGA,MAGA,gBACA,cACA,2DACA,4DACA,4DAEA,SAEA,aAEA,WAEA,eAEA,eACA,gBAEA,CAqUA,YApUA,KACA,8BACA,IACA,GACA,KAqBA,4CAnBiB,0CACjB,qCACiB,wBACjB,UACiB,IACjB,6EAEA,YAGA,6BACA,OAGA,sBAFA,UACA,WAAqB,WAErB,uBAEA,OACA,IAES,GACT,KACA,uCACA,IAGA,uEADA,KAEA,SACA,qBACA,aACA,mBAEA,sBAAiB,SACjB,CACA,GAEA,IAEA,IACS,GACT,KACA,iCACA,OACA,sCACA,kCACA,mBACA,QACS,GACT,KACA,yCACA,OAEA,KACA,OACA,mBACA,CAGA,OACA,KACA,mBACA,GACA,yCACA,YAEA,yBAAqB,SACrB,CACA,GACA,EACA,qBACA,8BACA,eACS,GACT,KACA,qCACA,IACA,CACA,sDACA,sBAEA,8BAGA,8BAEA,wBAAiB,SACjB,CACA,GACA,CACS,GACT,KACA,oCACA,OAEA,OACA,iCACA,CACA,QAAiB,aACjB,CACA,uDACA,CACA,KAEA,GACA,EAAiB,aAEjB,IAEA,GACA,EACS,GACT,KACA,qCACA,OAEA,yEAEA,uBACA,cACA,SACA,0BACA,wBACA,CACA,QAEA,IAEA,KAEA,yBACA,eACA,SAEA,iCACA,CACA,OACA,IAEA,MACA,GAEA,IACA,EACS,GACT,KACA,sCACA,UACA,4BACS,GACT,KACA,0CACA,2CACA,QACS,GACT,KACA,yCACA,SACA,kCACA,+BACA,gBACA,SACA,kCACA,+BACA,IAEA,QACA,KAGA,UACA,QACS,GACT,KACA,mCACA,IAEA,OADA,wBAEA,WAEA,2BAEA,WACA,CACA,WAEA,OACS,GACT,KACA,2CACA,IACA,MACA,mCACA,GACA,UACA,QAEA,QACA,QACA,2BACA,kBAKA,UAIA,mBARA,CACA,MAEqB,kBAMrB,eACA,CACA,MAIA,gBACS,GACT,KACA,2CACA,OAEA,0BACA,GACA,8CACA,6BACA,kBAEA,EACA,EACS,GACT,KACA,+CACA,QAMA,GACA,IALA,YACA,sBACA,KACA,iBAGA,SAEA,mBAIA,WAHA,aAEA,MAEA,EACA,UACA,yCACA,UACA,0BAAyB,aACzB,sDACA,UACA,OACA,IAGA,KAEA,6BACA,CACA,IACA,QACA,cAEA,2BACA,GACS,GACT,KACA,mCACA,OAEA,yEAEA,SACA,kBAEA,UAEA,yBACA,iBACA,yCACA,CACA,QAEA,GACA,EAEA,IACA,UAEA,oBAEA,GACA,EACS,KACT,KACA,6BACA,0BACA,uGACA,2BACA,IACA,MAQA,0BAPA,UACA,YAIA,QACA,IAEA,CAEA,QAGA,MAGA,6BACA,OAEA,OACA,uCACA,CAEA,SADA,WAEA,+BACA,CAEA,SADA,iBAEA,+BACA,CAEA,SADA,iBAEA,yBACA,CAEA,SADA,WAEA,EACA,IAEA,IACA,IAAC,qCChhCD,6BACA,cAEA,WAOA,GAAC,mBACD,kBAEA,cAMA,IACA,iBAGA,mBACA,CACA,WACA,KAIA,0CAGA,aAGA,YACA,OAIA,IAzBA,eA4BA,MAGA,QAGA,KACA,EAEA,EAEA,gBAEA,CAEA,qBACA,OACA,OACA,QACA,OAEA,KACA,mCACA,iCAEA,mBACA,sCACA,+CACA,wCAEA,+BACA,sBACA,qBACA,uBACA,aACA,wBAEA,kCAIA,OACA,oCACA,GACA,QACA,cACA,MAGA,SACA,GAoBA,SAnBA,4CACA,SACA,gBAGA,YACA,gCACA,uBACA,4BAIA,iBAEA,sBACA,qBAGA,UAGA,qCAEA,qBAEA,0BACA,iBAEA,kCAEA,qBAGA,cACA,aAEA,wCAEA,qBAGA,cACA,mBAGA,6BACA,wCAIA,iBAEA,eAEA,CAEA,yBACA,mBAEA,UAQA,iEAEA,wBACA,OACA,KAEA,MAEA,0CAGA,MAEA,iBAEA,oBAGA,aACA,IACA,mBACA,kBACA,IAEA,CACA,QAEA,iCACA,OAEA,2BACA,CACA,oBAEA,WACA,QACA,EACA,SAGA,GACA,IACA,CACA,YACA,yBAIA,qBA+BA,cA9BA,0BACA,YACA,WACA,UAEA,mCACA,+BAIA,gBACA,gCACA,sDAEA,SACA,kCAIA,SACA,WACA,iBAGA,mCACA,SACA,eACA,IAEA,GAGA,kCAEA,8BACA,UACA,YAEA,0BACA,OACA,wCAEA,sCACA,OACA,qCAEA,wBACA,OACA,sCAEA,wBACA,OACA,sCAEA,yBACA,QACA,qCAAmE,OAAiB,KACpF,IAAiB,MAAc,WAC/B,OACA,OACA,yBACA,OACA,CACA,QAEA,uBACA,8BACA,OAEA,uBACA,IACA,SACA,GAEA,oBACA,MACA,oCAEA,GACA,QACA,8BAGA,MACA,QAEA,wBACA,QACA,aAEA,KACA,QAEA,wBACA,WACA,KAAiB,EAAK,IACtB,IAEA,KACA,QAEA,wBACA,IAIA,8BACA,OAEA,mCACA,uBAAmC,OAAK,IACxC,aAGA,SAEA,qBACA,IACA,SACA,QAGA,6BACA,aAGA,iBAAiB,MAAc,OAC/B,kBAGA,QAKA,qBAJA,oBAGA,SAGA,6BACA,aAGA,CAEA,QACA,SAGA,YAEA,GAEA,QAXA,EAYA,GAEA,4BACA,aAKA,CACA,UAEA,KACA,QAGA,YAEA,GAEA,SAfA,YACA,UAEA,EAaA,GAGA,4BACA,uBACA,gCACA,WACA,iBACA,qBAEA,YAEA,SACA,aAGA,GACA,MACA,KACA,QAIA,IAAiC,IACjC,OACA,SAIA,gBACA,CAEA,kBACA,oCACA,iBACA,0CAGA,qBACA,qBACA,cAGA,UACA,aACA,UACA,qBAGA,QAEA,QAEA,4BACA,MACA,kBACM,wBACN,kBACM,aACN,mBAEA,iCACA,gDAEA,0BAGA,CAEA,iBAEA,CAEA,8BAmBA,aAAsB,CAAc,MACpC,EAEA,IARA,OAbA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,4BAQA,mBAKA,mBAOA,QAgDA,kBA/CA,wBAMA,+CAIA,0CACA,0CACA,sCAEA,kBAIA,yCAcA,MAbA,sDAEA,YACA,0CAIA,mBAOA,kCACA,uCAIA,2BAEA,yBACA,SACA,gBACA,qBACA,mBAEA,qCAGA,KAEA,sBAEA,gCACA,GAEA,SACA,kDACA,YACA,IAEA,EACA,EAEA,4BACA,UACA,aACA,oCACA,QACA,IAEA,6BACA,YAGA,uDACA,8BACA,cAEA,0BACA,aACA,aAEA,0BACA,cACA,aAEA,yBACA,aACA,aACA,IAEA,uBACA,IACA,oDAEA,oCACA,UAEA,2BAIA,6BAEA,aACA,aACA,IAEA,uBACA,UACA,2BAEA,oCACA,UAEA,iCACA,0BACA,oCACA,cAEA,iCACA,OACA,OACA,aAEA,UAGA,OACA,gBACA,MACA,OAGA,SACA,gBACA,IAGA,MACA,eAEA,YACA,mCAGA,wDAA4B,iBAAyB,qCAErD,kCAKA,aANA,KAQA,MAUA,IACA,KAEA,oBACA,CAOA,GALA,sBAIA,8BASA,IAEA,gBACA,QAEA,WACA,mBAIA,qBACA,KAIA,UAGA,QAEA,GACA,KA5BA,MAGA,SAGA,QAwBA,EA0BA,iDAzBA,gBAEA,GAGA,UACA,WAGA,SAEA,GAGA,KAEA,yBACA,QAGA,wBAEA,aAEA,MAEA,aA3EA,oBAKU,SAwEV,qBACA,gBAGA,SACA,YACA,4BACA,yBACA,0DACA,2IACA,cAEA,OATA,4CAUA,eACA,SAEA,QACA,8BACA,MACA,IAEA,wBACA,GACA,gBACA,MAOA,YAEA,KAaA,uCAZA,IACA,KAEA,WACA,MAGA,iBAEA,WAEA,IAGA,gCACA,GACA,gBACA,IAEA,QAEA,2BACA,eACA,WAGA,eACA,qBAEA,QAKA,kBAFA,WACA,WAEA,gCAIA,aAIA,WAHA,eAEA,8BAGA,KAEA,oBAGA,2CACA,cAGA,gBAEA,MAEA,2BACA,MACA,QAEA,yBACA,aACA,GAEA,wBACA,4BACA,6BACA,QACA,IAEA,sBACA,UACA,+CAGA,4BACA,EAEA,gCACA,sBACA,oCACA,KAEA,gBACA,uDAGA,MACA,YAEA,uBACA,eACA,OAEA,wBACA,WACA,OAAqB,kBAAwB,OAC7C,WACA,sBAEA,OACA,QAGA,eACA,uBACA,gBAEA,QACA,qBACA,kCAAmD,IACnD,kCAGA,eACA,iBAGA,wBAIA,0EAEA,SACA,OACA,QACA,GACA,UACA,SACA,+CACA,MACA,CAEA,WAEA,WAEA,wBACA,CACA,sBACA,IAEA,MACA,uBACA,MAGA,SAMA,UAGA,YAEA,QACA,GACA,SAAU,SACV,+CACA,kBACA,QACA,OAEA,aAA4C,iBAC5C,oBACA,QACA,kBAEA,KA0BA,SAzBA,iBAEA,SAEA,qBAEA,CAKA,2CAFA,YAKA,SAGA,WACA,CAA8B,KAC9B,QACA,GACA,CAGA,IAIA,6BACA,CACA,uBACA,IAGA,MACA,uBACA,MAIA,SACA,MACA,SAAU,SACV,YACA,MACA,OAEA,kBACA,QAGA,wBAA4C,uBAC5C,8BAIA,qBAEA,OAEA,eAEA,cACA,EAEA,oBACA,MACA,eAEA,UAEA,qBACA,IAEA,WACA,iBAEA,cACA,sBACA,iBACA,sBACA,oBACA,cAGA,WACA,eACA,GAEA,kBACA,oCACA,UACA,WAEA,wBACA,IAEA,aACA,QACA,oCAIA,MACA,QAGA,cACA,CACA,cAIA,WAEA,YAIA,CAEA,iBAEA,CAGA,0BAwBA,IACA,OACA,SAEA,MAEA,QACA,OACA,IAIA,aACA,WACA,IAIA,SAxCA,GAGA,KACA,SAEA,mCACA,MACA,eAEA,OAUA,KACA,qCAoBA,IACA,WACA,MAAM,SACN,GAIA,UAKA,cACA,QAEA,IAAM,QACN,WACA,iBACA,IACA,CAGA,CAEA,eAEA,cAYA,0BAEA,GACA,SACA,IAGA,UACA,SAEA,aAwBA,kBACA,IAIA,iBAMA,WAGA,iBAAiE,SAAkB,IACnF,WAEA,OACA,YACA,CACA,CACA,UACA,IACA,EACA,IAUA,cA4GA,kBAKA,aASA,CACA,gBACA,iBACA,GACA,oBATA,mBAEA,GAQA,CAKA,GAvMA,aAoBA,GARA,KAIA,OAQA,IAQA,6BAgDA,yBACA,gCA2CA,OACA,IACA,mCACA,wBACA,6BACA,GACA,KACA,MACA,CA0CA,CA/DA,IAQA,OAIA,iBAqFA,0BAA6B,oBAA4B,OAAa,KAEtE,IAEA,aAEA,CAIA,8BAEA,kBACA,gBACA,gBAGA,6BAAwC,CAAK,GAAE,gBAC/C,oBAEA,QACA,OACA,OAEA,UACA,sBACA,wBAEA,qBACA,kBAEA,YAGA,YACA,4BACA,WAGA,YADA,UAEA,CAKA,QAEA,GAEA,2BACA,GACA,wBAEA,UAEA,EAYA,SAXA,wBAEA,oCACA,OACA,qBACA,MAEA,aACA,QAEA,GAGA,oBAGA,YAEA,iBAEA,CAEA,4BAIA,8BAIA,UAEA,SATA,OAEA,KAQA,gBACA,OACA,KAEA,uBACA,IACA,GACA,KAEA,WAAmB,MAAgB,OACnC,cACA,WACA,QAGA,aAGA,kBACA,CACA,aAAoC,OAAe,IACnD,MAIA,UACA,OAEA,CACA,QAEA,wBACA,OACA,YACA,wEACA,GAEA,sBACA,UACA,SAEA,KACA,UAGA,mBACA,4BACA,oBACA,2BACA,MAEA,yBAEA,UAGA,MAEA,cAEA,0BACA,OACA,sCAGA,6CACA,aAEA,kBAGA,UACA,kBACA,YACU,UACV,cAEA,mBACA,cAGA,6DAiBA,2BAhBA,OACA,OAGA,kBACA,kBAEA,iBACA,kBAIA,+BACA,CAEA,IAGA,kBACA,aACA,YAEA,oBACA,uBAGA,qCACA,2BACA,aAEA,kBACA,uBAGA,qCACA,kBACA,YAEA,mBACA,UACA,EAEA,uBACA,UACA,YAEA,wBACA,UAEA,iBAEA,QACA,YACA,aACA,iBAEA,SAAqB,MAAgB,OACrC,OACA,gBAOA,UAJA,cAKA,iBAEA,sBACA,aAGA,4BACA,OACA,KAGA,MACA,OAEA,kBACA,mBACA,EAEA,oBACA,WAEA,UAEA,YAaA,sCAZA,0CAGA,OAEA,qCAEA,2BAEA,SAEA,MAGA,kBACA,MACA,2BAEA,qBACA,IAEA,gBACA,cAGA,oBACA,UAIA,kCACA,OAAyB,CACzB,YACA,KACA,EACA,MACA,WAGA,mCAEA,iCAEA,mBACA,cACA,MACA,aAEA,oBACA,4BACA,QAEA,0BACA,4BACA,QACA,IACA,EAEA,0BACA,4BACA,SACA,IACA,EAEA,2BACA,IAEA,oBACA,iBAGA,aACA,2BAGA,SAGA,MACA,sBAEA,WAGA,mBAIA,YACA,wBAIA,yCACA,YAIA,YAGA,8BACA,YAGA,0BAGA,sBACA,MAGA,mBACA,IAEA,iBAGA,WAEA,uBACA,OAEA,QAKA,wBACA,cAGA,gBACA,iBAEA,qBACA,IACA,cACA,cAIA,2BAA6C,CAAU,QAGvD,KAEA,YACA,oCAGA,MAEA,uBACA,MACA,KAGA,cAFA,eAGA,gBAEA,KAIA,mBAGA,QACA,MAEA,uBACA,iBACA,cACA,WACA,EAEA,OAAqB,EAAU,QAC/B,KACA,IACA,KAEA,eAEA,SACA,cACA,QAEA,UACA,OAEA,CACA,QAEA,qBACA,OAEA,EACA,qBAIA,+BACA,OACA,KAGA,cAAuB,MAAgB,OACvC,OAGA,KACA,QAEA,wFAEA,CA+BA,4BA/ByC,CAAU,QAEnD,uBACA,OAGA,cACA,OAGA,OACA,IAGA,0BACA,kBACA,kBAGA,eACA,SAEA,EACA,SAGA,EAEA,CAEA,IAGA,qBACA,UACA,iBAEA,yBACA,OACA,MACA,YACA,sEACA,OAEA,cACA,sBACA,kBACA,uBACA,yBAEA,0BAEA,OACA,iBAEA,mBACA,OACA,sBACA,OAAuB,MAAkB,OACzC,sBAEA,qCACA,KAEA,kBACA,gDACA,IAEA,4BACA,IACA,cACA,SAEA,MACA,UAEA,SACA,mBACU,SACV,qBACA,QACA,QAGA,mBACA,IAEA,kCACA,QACA,iBAEA,mBACA,cACA,MACA,aAEA,uBACA,OACA,wBACA,kBAEA,SACA,QACA,8BACA,wBACA,GAEA,eAEA,KADA,UAEA,qCAIA,qBAEA,IAEA,wBACA,cAEA,2CAIA,KAEA,8CACA,6DACA,oBACA,WAEA,oEAGA,aACA,MAAU,kBACV,SACA,gBAGA,eACA,gDAGA,SACA,uDAGA,SACA,sCAGA,SACA,uDAIA,QAEA,iBACA,GAEA,uBACA,OACA,4BACA,uBACA,IAEA,qBACA,OACA,oBACA,aAEA,mBACA,kBACA,UACA,aAIA,SACA,iBAEA,SAGA,SAEA,iBAEA,CAEA,0BA+HA,SACA,YACA,WACA,0BACA,cAEA,QACA,CACA,QAEA,cACA,SACA,UACA,YAGA,aACA,8BACA,gBAKA,GAKA,cACA,OAIA,6BACA,oBACA,SAEA,SAnKA,OAKA,cACA,mBACA,MACA,kBACA,cAGA,iBACA,eAEA,qBAGA,eACA,YACA,YAEA,KACA,wBACA,QAKA,cAJA,qBAIqB,aAAoB,EACzC,MAEA,KACA,OAEA,WAGA,kBACA,KAEA,iBACA,YACA,gCAGA,WACA,IAEA,oBACA,YACA,cACA,gCAGA,gBACA,SAEA,uBACA,yCACA,cACA,gCACA,SAEA,UACA,UAEA,kBACA,cACA,OAEA,gBACA,aACA,MAGA,+CAwFA,QAAc,mCAEd,mCACA,aACA,GACA,iCACA,aACA,GAEA,YAuKA,CACA,QACA,yBAzQA,kBACA,IAEA,GAGA,MAJA,eAEA,yBAGA,4CAIA,qDACA,gBAAuB,MAAiB,OACxC,QACA,iBAIA,QACA,OACA,oBACA,4CAEA,KAA8B,QAAqB,WACnD,OAKA,YACA,YACA,KAEA,GACA,OAEA,QAGA,yBACA,OACA,CAEA,EA+NA,2BA9NA,CAEA,SADA,eAGA,EA2NA,UACA,2BA9IA,CAOA,gCALA,QACA,+BAGA,cAGA,EAsIA,6BArIA,cACA,uBACA,cACA,gDACA,IAGA,GACA,QAEA,EA4HA,0BA3HA,UAEA,MACA,kCACA,qBACA,UAGA,EACA,IAEA,EAiHA,oCApGA,SACA,6BAEA,aACA,SAEA,EA+FA,0BAjHA,IACA,wCAEA,2CACA,0DAIA,uCACA,UAEA,EAuGA,2BA/FA,UAIA,eAEA,oBAEA,YAwFA,eACA,KACA,aACA,0BApLA,OACA,gBAEA,WACA,UAEA,EA+KA,oBA9KA,OAEA,eACA,YAEA,SAIA,wBACA,oBAEA,iBACA,mBAIA,UAEA,GAEA,EA0JA,2BA5FA,iBACA,SAEA,oCAEA,OACA,0BACA,8BAEA,aACA,kBAEA,QACA,IAEA,sCACA,CACA,YAEA,IAEA,EAwEA,0BAvEA,gBAKA,CACA,IAEA,OACA,qBAEA,IAEA,OAXA,EAEA,IAHA,QAaA,WAuBA,SACA,eACA,SAEA,SACA,aAGA,eAAuB,MAAiB,WACxC,OACA,SACA,WAEA,CACA,aApCA,SAEA,SACA,aAGA,eAAuB,MAAgB,WACvC,OAGA,WACA,0BACA,8BAEA,aAEA,kBAEA,QAGA,CAiBA,eAsBA,WAEA,aAEA,CAEA,0BACA,QAEA,QACA,SACA,qBACA,IACA,eACA,IAEA,iBACA,OACA,UACA,WAGA,gBACA,UACA,OAGA,EAEA,cACA,MACA,OAEA,uBACA,SACA,KAEA,MADA,OAEA,CAKA,GA0CA,kBAzCA,OACA,sBACA,CACA,uBACA,MACA,IAEA,GACA,OAGA,MAEA,GADA,QAEA,QAA8B,IAAQ,IACtC,OAGA,iBAA8B,IAAQ,IACtC,OAGA,QACA,QAKA,mBACA,qCACA,WAEA,oBACA,OACA,KAEA,EAEA,CAKA,iBAEA,CAEA,qBAEA,eACA,iBACA,kBACA,KAEA,uBACA,aACA,eACA,KAAuB,MACvB,gBACA,gBAGA,QACA,IAGA,MAGA,SAEA,iBAEA,CAEA,qBACA,OACA,OAEA,cACA,iBACA,qBACA,qCACA,mCACA,OAEA,kBACA,4CAEA,wBACA,kDACA,SACA,OAEA,EAEA,uBACA,oBACA,aAEA,wBACA,6BACA,oBAGA,MAGA,SAEA,aAEA,GA8JA,kBA7JA,CAIA,wBACA,eAEA,QACA,2DACA,oBACA,cACA,WACA,cACA,OACA,aACA,QACA,aACA,aAIA,OACA,QAEA,UACA,eACA,gBACA,IACA,uBAEA,yBACA,oBAEA,iCACA,EACA,oBACA,WAAsB,SAAiB,OACvC,OACA,iCAGA,mBACA,aACA,mBACA,WACA,IAAsB,SAAiB,OACvC,IACA,aAGA,IACA,QACA,mBACA,IACA,OACA,wCAEA,cACA,QACA,kBACA,aACA,UACA,sBACA,sBACA,IAEA,KACA,iBACA,IACA,kBACA,gBAEA,UACA,QACA,mBACA,IACA,kBACA,aAEA,SACA,QACA,iBACA,IACA,kBACA,QAEA,QACA,QACA,mBACA,OACA,QAIA,MAHA,cAEA,MAEA,qBACA,aACA,iBACA,mBACA,OACA,uBACA,WACQ,YACR,2BAEA,uBAEA,SACA,QACA,oBACA,mBAEA,OACA,qBACA,SACA,KACA,iBACA,WACA,0BACA,YACA,MAEA,SACA,eAEA,MACA,UACA,oBACA,QACA,gBAEA,WACA,KAEA,iBACA,qBACA,oBACA,iCACA,UAIA,sBACA,6BAA0B,8BAG1B,mBACA,6BAA0B,8BAG1B,eACA,UACA,CAEA,CAKA,GACA,mBC1oFA,YAAa,mCAA8D,yDAwB3E,OAIA,KA3BA,oBACA,SAGA,IACA,WACA,+DACA,wEACA,qCACA,0EACA,uDACA,6EACA,GAGC,kBACD,EAGA,OAAC,SACD,KACA,cAnBA,KACA,MAmBA,GAMA,GAAC,qBC7BD,YAAa,mCAA8D,0DA2B3E,OAIA,KA9BA,oBACA,SAGA,IACA,WACA,mEACA,yEACA,kBACA,gFACA,GACA,4DACA,GAEA,8DACA,GAGC,KACD,EAGA,OAAC,SACD,KACA,cAtBA,KACA,MAsBA,GAMA,GAAC","file":"search.min.js","sourcesContent":["import deparam from 'jquery-deparam';\nimport lunr from 'lunr';\nimport Mark from 'mark.js';\nimport nunjucks from 'nunjucks';\n\nrequire('search_result.njk');\nrequire('search_results.njk');\n\nnunjucks.installJinjaCompat();\n// The default WebLoader requires the precompiled templates to be available\n// before nunjucks is initialized. Because we load some templates\n// asynchronously, some templates might be added to the `window` global after\n// that. To avoid this issue, we need a loader that checks the `window` object\n// every time.\nconst PrecompiledLoader = nunjucks.Loader.extend({\n  getSource: name => ({\n    src: {\n      type: 'code',\n      obj: window.nunjucksPrecompiled[name],\n    },\n    path: name,\n  }),\n});\nconst nunjucksEnv = new nunjucks.Environment(new PrecompiledLoader());\n\nlet searchStore;\n\nconst getUrlParams = () => deparam(window.location.search.substr(1));\n\nconst getSearchResultsByField = matches => {\n  const results = {\n    title: [],\n    contents: [],\n  };\n  Object.keys(matches).forEach(term => {\n    Object.keys(matches[term]).forEach(fieldName => {\n      // For each term found in each field, store position of matches\n      const pos = matches[term][fieldName].position.map(p => ({\n        start: p[0],\n        length: p[1],\n      }));\n      // @@@ Temporary solution until fieldname bug is fixed:\n      // https://github.com/olivernn/lunr.js/issues/320\n      const field = fieldName === 'title' ? 'title' : 'contents';\n      results[field] = results[field].concat(pos);\n    });\n  });\n  return results;\n};\n\nconst highlightSearchResult = (el, results) => {\n  if (results.title.length) {\n    // Highlight matches in `title` field\n    const titleEl = el.find('[data-result-field=\"title\"]').get(0);\n    new Mark(titleEl).markRanges(results.title);\n  }\n  if (results.contents.length) {\n    const textEl = el.find('[data-result-field=\"contents\"]').get(0);\n    results.contents.sort((a, b) => a.start - b.start);\n    // Highlight first 5 matches in `contents` field\n    new Mark(textEl).markRanges(results.contents.slice(0, 5), {\n      done: () => {\n        // Truncate text not within 15 words of a match\n        textEl.childNodes.forEach(node => {\n          const hasPrev = node.previousSibling !== null;\n          const hasNext = node.nextSibling !== null;\n          const isText = node.nodeName === '#text';\n          if (isText) {\n            const text = node.nodeValue.split(' ');\n            if (hasPrev && hasNext) {\n              if (text.length > 30) {\n                text.splice(15, text.length - 30, '…');\n              }\n            } else if (hasNext) {\n              if (text.length > 15) {\n                text.splice(0, text.length - 15, '…');\n              }\n            } else if (hasPrev) {\n              if (text.length > 15) {\n                text.splice(15, text.length - 15, '…');\n              }\n            }\n            node.nodeValue = text.join(' ');\n          }\n        });\n      },\n    });\n  }\n};\n\nconst showResults = (matches, val) => {\n  let results = $();\n  if (matches && matches.length) {\n    for (const match of matches) {\n      const doc = searchStore[match.ref];\n      const toMark = getSearchResultsByField(match.matchData.metadata);\n      if (!(toMark.title.length || toMark.contents.length)) {\n        return;\n      }\n      const tplCtx = {\n        url: `/${match.ref}`,\n        title: doc.title,\n        contents: toMark.contents.length ? doc.contents : '',\n      };\n      // Render search result template\n      const el = $(nunjucksEnv.render('search_result.njk', tplCtx));\n      // Highlight matches in search result text\n      highlightSearchResult(el, toMark);\n      // Add search result template to set of results\n      results = results.add(el);\n    }\n  }\n  const resultsTpl = $(\n    nunjucksEnv.render('search_results.njk', {\n      term: val,\n      count: results.length,\n    })\n  );\n  resultsTpl.filter('.js-search-results').html(results);\n  $('[data-sassdoc-page]').html(resultsTpl);\n};\n\nconst doSearch = (data, val) => {\n  // Grab doc store from data\n  searchStore = data && data.store;\n  // Initialize Lunr index from precompiled data\n  const idx = lunr.Index.load(data.idx);\n  const matches = idx.search(val);\n  showResults(matches, val);\n};\n\nconst getSearchData = () => {\n  const params = getUrlParams();\n  // Only fetch search data if on search results page with query term\n  if (params && params.q) {\n    const request = new XMLHttpRequest();\n    request.open('GET', '/search-data.json', true);\n\n    request.onload = function onload() {\n      let data;\n      if (this.status >= 200 && this.status < 400) {\n        try {\n          data = JSON.parse(this.responseText);\n        } catch (e) {\n          // swallow error\n        }\n      }\n      doSearch(data, params.q);\n    };\n\n    request.onerror = function onerror() {\n      doSearch(undefined, params.q);\n    };\n\n    request.send();\n  }\n};\n\n$(() => {\n  getSearchData();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./search.js","(function(deparam){\n    if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n        try {\n            var jquery = require('jquery');\n        } catch (e) {\n        }\n        module.exports = deparam(jquery);\n    } else if (typeof define === 'function' && define.amd){\n        define(['jquery'], function(jquery){\n            return deparam(jquery);\n        });\n    } else {\n        var global;\n        try {\n          global = (false || eval)('this'); // best cross-browser way to determine global for < ES5\n        } catch (e) {\n          global = window; // fails only if browser (https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives)\n        }\n        global.deparam = deparam(global.jQuery); // assume jQuery is in global namespace\n    }\n})(function ($) {\n    var deparam = function( params, coerce ) {\n        var obj = {},\n        coerce_types = { 'true': !0, 'false': !1, 'null': null };\n\n        // If params is an empty string or otherwise falsy, return obj.\n        if (!params) {\n            return obj;\n        }\n\n        // Iterate over all name=value pairs.\n        params.replace(/\\+/g, ' ').split('&').forEach(function(v){\n            var param = v.split( '=' ),\n            key = decodeURIComponent( param[0] ),\n            val,\n            cur = obj,\n            i = 0,\n\n            // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\n            // into its component parts.\n            keys = key.split( '][' ),\n            keys_last = keys.length - 1;\n\n            // If the first keys part contains [ and the last ends with ], then []\n            // are correctly balanced.\n            if ( /\\[/.test( keys[0] ) && /\\]$/.test( keys[ keys_last ] ) ) {\n                // Remove the trailing ] from the last keys part.\n                keys[ keys_last ] = keys[ keys_last ].replace( /\\]$/, '' );\n\n                // Split first keys part into two parts on the [ and add them back onto\n                // the beginning of the keys array.\n                keys = keys.shift().split('[').concat( keys );\n\n                keys_last = keys.length - 1;\n            } else {\n                // Basic 'foo' style key.\n                keys_last = 0;\n            }\n\n            // Are we dealing with a name=value pair, or just a name?\n            if ( param.length === 2 ) {\n                val = decodeURIComponent( param[1] );\n\n                // Coerce values.\n                if ( coerce ) {\n                    val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\n                    : val === 'undefined'                       ? undefined         // undefined\n                    : coerce_types[val] !== undefined           ? coerce_types[val] // true, false, null\n                    : val;                                                          // string\n                }\n\n                if ( keys_last ) {\n                    // Complex key, build deep object structure based on a few rules:\n                    // * The 'cur' pointer starts at the object top-level.\n                    // * [] = array push (n is set to array length), [n] = array if n is\n                    //   numeric, otherwise object.\n                    // * If at the last keys part, set the value.\n                    // * For each keys part, if the current level is undefined create an\n                    //   object or array based on the type of the next keys part.\n                    // * Move the 'cur' pointer to the next level.\n                    // * Rinse & repeat.\n                    for ( ; i <= keys_last; i++ ) {\n                        key = keys[i] === '' ? cur.length : keys[i];\n                        cur = cur[key] = i < keys_last\n                        ? cur[key] || ( keys[i+1] && isNaN( keys[i+1] ) ? {} : [] )\n                        : val;\n                    }\n\n                } else {\n                    // Simple key, even simpler rules, since only scalars and shallow\n                    // arrays are allowed.\n\n                    if ( Object.prototype.toString.call( obj[key] ) === '[object Array]' ) {\n                        // val is already an array, so push on the next value.\n                        obj[key].push( val );\n\n                    } else if ( {}.hasOwnProperty.call(obj, key) ) {\n                        // val isn't an array, but since a second value has been specified,\n                        // convert val into an array.\n                        obj[key] = [ obj[key], val ];\n\n                    } else {\n                        // val is a scalar.\n                        obj[key] = val;\n                    }\n                }\n\n            } else if ( key ) {\n                // No value was defined, so set something meaningful.\n                obj[key] = coerce\n                ? undefined\n                : '';\n            }\n        });\n\n        return obj;\n    };\n    if ($) {\n      $.prototype.deparam = $.deparam = deparam;\n    }\n    return deparam;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/miriam/Sites/herman/node_modules/jquery-deparam/jquery-deparam.js\n// module id = 213\n// module chunks = 1","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.1.4\n * Copyright (C) 2017 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.1.4\"\n/*!\n * lunr.utils\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf Utils\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf Utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @returns {lunr.Token[]}\n */\nlunr.tokenizer = function (obj) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(lunr.utils.asString(t).toLowerCase())\n    })\n  }\n\n  var str = obj.toString().trim().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        tokens.push(\n          new lunr.Token (str.slice(sliceStart, sliceEnd), {\n            position: [sliceStart, sliceLength],\n            index: tokens.length\n          })\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null. This token will not be passed to any downstream pipeline functions and will not be\n * added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n\n    tokens = tokens.reduce(function (memo, token, j) {\n      var result = fn(token, j, tokens)\n\n      if (result === void 0 || result === '') return memo\n\n      return memo.concat(result)\n    }, [])\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str) {\n  var token = new lunr.Token (str)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the cosine similarity between this vector and another\n * vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / (this.magnitude() * otherVector.magnitude())\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2017 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      } else {\n        stack.push({\n          node: noEditNode,\n          editsRemaining: frame.editsRemaining,\n          str: frame.str.slice(1)\n        })\n      }\n    }\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.editsRemaining > 0 && frame.str.length > 1) {\n      var char = frame.str.charAt(1),\n          deletionNode\n\n      if (char in frame.node.edges) {\n        deletionNode = frame.node.edges[char]\n      } else {\n        deletionNode = new lunr.TokenSet\n        frame.node.edges[char] = deletionNode\n      }\n\n      if (frame.str.length <= 2) {\n        deletionNode.final = true\n      } else {\n        stack.push({\n          node: deletionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(2)\n        })\n      }\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.editsRemaining > 0 && frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.editsRemaining > 0 && frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      } else {\n        stack.push({\n          node: substitutionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        })\n      }\n    }\n\n    // insertion\n    // can only do insertion if there are edits remaining\n    if (frame.editsRemaining > 0) {\n      if (\"*\" in frame.node.edges) {\n        var insertionNode = frame.node.edges[\"*\"]\n      } else {\n        var insertionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = insertionNode\n      }\n\n      if (frame.str.length == 0) {\n        insertionNode.final = true\n      } else {\n        stack.push({\n          node: insertionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str\n        })\n      }\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.editsRemaining > 0 && frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      } else {\n        stack.push({\n          node: transposeNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: charA + frame.str.slice(2)\n        })\n      }\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node,\n      wildcardFound = false\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * As soon as a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      wildcardFound = true\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n\n      // TODO: is this needed anymore?\n      if (wildcardFound) {\n        node.edges[\"*\"] = root\n      }\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.documentVectors - Document vectors keyed by document reference.\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null)\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term)\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field\n\n          /*\n           * To support field level boosts a query vector is created per\n           * field. This vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           *\n           * If the query vector for this field does not exist yet it needs\n           * to be created.\n           */\n          if (queryVectors[field] === undefined) {\n            queryVectors[field] = new lunr.Vector\n          }\n\n          /*\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, 1 * clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, term, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef,\n        fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = {},\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = []\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * @param {string} field - The name of a field to index in all documents.\n */\nlunr.Builder.prototype.field = function (field) {\n  this._fields.push(field)\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * @param {object} doc - The document to add to the index.\n */\nlunr.Builder.prototype.add = function (doc) {\n  var docRef = doc[this._ref]\n\n  this.documentCount += 1\n\n  for (var i = 0; i < this._fields.length; i++) {\n    var fieldName = this._fields[i],\n        field = doc[fieldName],\n        tokens = this.tokenizer(field),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < this._fields.length; k++) {\n          posting[this._fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  for (var i = 0; i < this._fields.length; i++) {\n    var field = this._fields[i]\n    accumulator[field] = accumulator[field] / documentsWithField[field]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[field])) + tf)\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: this._fields,\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata)\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n  this.metadata[term] = Object.create(null)\n  this.metadata[term][field] = clonedMetadata\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=0] - Whether the term should have wildcards appended or prepended.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * @param {string} term - The term to add to the query.\n * @param {Object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n */\nlunr.Query.prototype.term = function (term, options) {\n  var clause = options || {}\n  clause.term = term\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseFieldOrTerm\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseFieldOrTerm = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/miriam/Sites/herman/node_modules/lunr/lunr.js\n// module id = 214\n// module chunks = 1","/*!***************************************************\r\n * mark.js v8.11.0\r\n * https://github.com/julmot/mark.js\r\n * Copyright (c) 2014–2017, Julian Motz\r\n * Released under the MIT license https://git.io/vwTVl\r\n *****************************************************/\r\n\n\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function (factory, window, document) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], function () {\n            return factory(window, document);\n        });\n    } else if ((typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === \"object\" && module.exports) {\n        module.exports = factory(window, document);\n    } else {\n        factory(window, document);\n    }\n})(function (window, document) {\n    var Mark = function () {\n        function Mark(ctx) {\n            _classCallCheck(this, Mark);\n\n            this.ctx = ctx;\n\n            this.ie = false;\n            var ua = window.navigator.userAgent;\n            if (ua.indexOf(\"MSIE\") > -1 || ua.indexOf(\"Trident\") > -1) {\n                this.ie = true;\n            }\n        }\n\n        _createClass(Mark, [{\n            key: \"log\",\n            value: function log(msg) {\n                var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"debug\";\n\n                var log = this.opt.log;\n                if (!this.opt.debug) {\n                    return;\n                }\n                if ((typeof log === \"undefined\" ? \"undefined\" : _typeof(log)) === \"object\" && typeof log[level] === \"function\") {\n                    log[level](\"mark.js: \" + msg);\n                }\n            }\n        }, {\n            key: \"escapeStr\",\n            value: function escapeStr(str) {\n                return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n            }\n        }, {\n            key: \"createRegExp\",\n            value: function createRegExp(str) {\n                if (this.opt.wildcards !== \"disabled\") {\n                    str = this.setupWildcardsRegExp(str);\n                }\n                str = this.escapeStr(str);\n                if (Object.keys(this.opt.synonyms).length) {\n                    str = this.createSynonymsRegExp(str);\n                }\n                if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n                    str = this.setupIgnoreJoinersRegExp(str);\n                }\n                if (this.opt.diacritics) {\n                    str = this.createDiacriticsRegExp(str);\n                }\n                str = this.createMergedBlanksRegExp(str);\n                if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n                    str = this.createJoinersRegExp(str);\n                }\n                if (this.opt.wildcards !== \"disabled\") {\n                    str = this.createWildcardsRegExp(str);\n                }\n                str = this.createAccuracyRegExp(str);\n                return str;\n            }\n        }, {\n            key: \"createSynonymsRegExp\",\n            value: function createSynonymsRegExp(str) {\n                var syn = this.opt.synonyms,\n                    sens = this.opt.caseSensitive ? \"\" : \"i\",\n                    joinerPlaceholder = this.opt.ignoreJoiners || this.opt.ignorePunctuation.length ? \"\\0\" : \"\";\n                for (var index in syn) {\n                    if (syn.hasOwnProperty(index)) {\n                        var value = syn[index],\n                            k1 = this.opt.wildcards !== \"disabled\" ? this.setupWildcardsRegExp(index) : this.escapeStr(index),\n                            k2 = this.opt.wildcards !== \"disabled\" ? this.setupWildcardsRegExp(value) : this.escapeStr(value);\n                        if (k1 !== \"\" && k2 !== \"\") {\n                            str = str.replace(new RegExp(\"(\" + k1 + \"|\" + k2 + \")\", \"gm\" + sens), joinerPlaceholder + (\"(\" + this.processSynomyms(k1) + \"|\") + (this.processSynomyms(k2) + \")\") + joinerPlaceholder);\n                        }\n                    }\n                }\n                return str;\n            }\n        }, {\n            key: \"processSynomyms\",\n            value: function processSynomyms(str) {\n                if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n                    str = this.setupIgnoreJoinersRegExp(str);\n                }\n                return str;\n            }\n        }, {\n            key: \"setupWildcardsRegExp\",\n            value: function setupWildcardsRegExp(str) {\n                str = str.replace(/(?:\\\\)*\\?/g, function (val) {\n                    return val.charAt(0) === \"\\\\\" ? \"?\" : \"\\x01\";\n                });\n\n                return str.replace(/(?:\\\\)*\\*/g, function (val) {\n                    return val.charAt(0) === \"\\\\\" ? \"*\" : \"\\x02\";\n                });\n            }\n        }, {\n            key: \"createWildcardsRegExp\",\n            value: function createWildcardsRegExp(str) {\n                var spaces = this.opt.wildcards === \"withSpaces\";\n                return str.replace(/\\u0001/g, spaces ? \"[\\\\S\\\\s]?\" : \"\\\\S?\").replace(/\\u0002/g, spaces ? \"[\\\\S\\\\s]*?\" : \"\\\\S*\");\n            }\n        }, {\n            key: \"setupIgnoreJoinersRegExp\",\n            value: function setupIgnoreJoinersRegExp(str) {\n                return str.replace(/[^(|)\\\\]/g, function (val, indx, original) {\n                    var nextChar = original.charAt(indx + 1);\n                    if (/[(|)\\\\]/.test(nextChar) || nextChar === \"\") {\n                        return val;\n                    } else {\n                        return val + \"\\0\";\n                    }\n                });\n            }\n        }, {\n            key: \"createJoinersRegExp\",\n            value: function createJoinersRegExp(str) {\n                var joiner = [];\n                var ignorePunctuation = this.opt.ignorePunctuation;\n                if (Array.isArray(ignorePunctuation) && ignorePunctuation.length) {\n                    joiner.push(this.escapeStr(ignorePunctuation.join(\"\")));\n                }\n                if (this.opt.ignoreJoiners) {\n                    joiner.push(\"\\\\u00ad\\\\u200b\\\\u200c\\\\u200d\");\n                }\n                return joiner.length ? str.split(/\\u0000+/).join(\"[\" + joiner.join(\"\") + \"]*\") : str;\n            }\n        }, {\n            key: \"createDiacriticsRegExp\",\n            value: function createDiacriticsRegExp(str) {\n                var sens = this.opt.caseSensitive ? \"\" : \"i\",\n                    dct = this.opt.caseSensitive ? [\"aàáảãạăằắẳẵặâầấẩẫậäåāą\", \"AÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ\", \"cçćč\", \"CÇĆČ\", \"dđď\", \"DĐĎ\", \"eèéẻẽẹêềếểễệëěēę\", \"EÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ\", \"iìíỉĩịîïī\", \"IÌÍỈĨỊÎÏĪ\", \"lł\", \"LŁ\", \"nñňń\", \"NÑŇŃ\", \"oòóỏõọôồốổỗộơởỡớờợöøō\", \"OÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ\", \"rř\", \"RŘ\", \"sšśșş\", \"SŠŚȘŞ\", \"tťțţ\", \"TŤȚŢ\", \"uùúủũụưừứửữựûüůū\", \"UÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ\", \"yýỳỷỹỵÿ\", \"YÝỲỶỸỴŸ\", \"zžżź\", \"ZŽŻŹ\"] : [\"aàáảãạăằắẳẵặâầấẩẫậäåāąAÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ\", \"cçćčCÇĆČ\", \"dđďDĐĎ\", \"eèéẻẽẹêềếểễệëěēęEÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ\", \"iìíỉĩịîïīIÌÍỈĨỊÎÏĪ\", \"lłLŁ\", \"nñňńNÑŇŃ\", \"oòóỏõọôồốổỗộơởỡớờợöøōOÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ\", \"rřRŘ\", \"sšśșşSŠŚȘŞ\", \"tťțţTŤȚŢ\", \"uùúủũụưừứửữựûüůūUÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ\", \"yýỳỷỹỵÿYÝỲỶỸỴŸ\", \"zžżźZŽŻŹ\"];\n                var handled = [];\n                str.split(\"\").forEach(function (ch) {\n                    dct.every(function (dct) {\n                        if (dct.indexOf(ch) !== -1) {\n                            if (handled.indexOf(dct) > -1) {\n                                return false;\n                            }\n\n                            str = str.replace(new RegExp(\"[\" + dct + \"]\", \"gm\" + sens), \"[\" + dct + \"]\");\n                            handled.push(dct);\n                        }\n                        return true;\n                    });\n                });\n                return str;\n            }\n        }, {\n            key: \"createMergedBlanksRegExp\",\n            value: function createMergedBlanksRegExp(str) {\n                return str.replace(/[\\s]+/gmi, \"[\\\\s]+\");\n            }\n        }, {\n            key: \"createAccuracyRegExp\",\n            value: function createAccuracyRegExp(str) {\n                var _this = this;\n\n                var chars = \"!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\\xA1\\xBF\";\n                var acc = this.opt.accuracy,\n                    val = typeof acc === \"string\" ? acc : acc.value,\n                    ls = typeof acc === \"string\" ? [] : acc.limiters,\n                    lsJoin = \"\";\n                ls.forEach(function (limiter) {\n                    lsJoin += \"|\" + _this.escapeStr(limiter);\n                });\n                switch (val) {\n                    case \"partially\":\n                    default:\n                        return \"()(\" + str + \")\";\n                    case \"complementary\":\n                        lsJoin = \"\\\\s\" + (lsJoin ? lsJoin : this.escapeStr(chars));\n                        return \"()([^\" + lsJoin + \"]*\" + str + \"[^\" + lsJoin + \"]*)\";\n                    case \"exactly\":\n                        return \"(^|\\\\s\" + lsJoin + \")(\" + str + \")(?=$|\\\\s\" + lsJoin + \")\";\n                }\n            }\n        }, {\n            key: \"getSeparatedKeywords\",\n            value: function getSeparatedKeywords(sv) {\n                var _this2 = this;\n\n                var stack = [];\n                sv.forEach(function (kw) {\n                    if (!_this2.opt.separateWordSearch) {\n                        if (kw.trim() && stack.indexOf(kw) === -1) {\n                            stack.push(kw);\n                        }\n                    } else {\n                        kw.split(\" \").forEach(function (kwSplitted) {\n                            if (kwSplitted.trim() && stack.indexOf(kwSplitted) === -1) {\n                                stack.push(kwSplitted);\n                            }\n                        });\n                    }\n                });\n                return {\n                    \"keywords\": stack.sort(function (a, b) {\n                        return b.length - a.length;\n                    }),\n                    \"length\": stack.length\n                };\n            }\n        }, {\n            key: \"isNumeric\",\n            value: function isNumeric(value) {\n                return Number(parseFloat(value)) == value;\n            }\n        }, {\n            key: \"checkRanges\",\n            value: function checkRanges(array) {\n                var _this3 = this;\n\n                if (!Array.isArray(array) || Object.prototype.toString.call(array[0]) !== \"[object Object]\") {\n                    this.log(\"markRanges() will only accept an array of objects\");\n                    this.opt.noMatch(array);\n                    return [];\n                }\n                var stack = [];\n                var last = 0;\n                array.sort(function (a, b) {\n                    return a.start - b.start;\n                }).forEach(function (item) {\n                    var _callNoMatchOnInvalid = _this3.callNoMatchOnInvalidRanges(item, last),\n                        start = _callNoMatchOnInvalid.start,\n                        end = _callNoMatchOnInvalid.end,\n                        valid = _callNoMatchOnInvalid.valid;\n\n                    if (valid) {\n                        item.start = start;\n                        item.length = end - start;\n                        stack.push(item);\n                        last = end;\n                    }\n                });\n                return stack;\n            }\n        }, {\n            key: \"callNoMatchOnInvalidRanges\",\n            value: function callNoMatchOnInvalidRanges(range, last) {\n                var start = void 0,\n                    end = void 0,\n                    valid = false;\n                if (range && typeof range.start !== \"undefined\") {\n                    start = parseInt(range.start, 10);\n                    end = start + parseInt(range.length, 10);\n\n                    if (this.isNumeric(range.start) && this.isNumeric(range.length) && end - last > 0 && end - start > 0) {\n                        valid = true;\n                    } else {\n                        this.log(\"Ignoring invalid or overlapping range: \" + (\"\" + JSON.stringify(range)));\n                        this.opt.noMatch(range);\n                    }\n                } else {\n                    this.log(\"Ignoring invalid range: \" + JSON.stringify(range));\n                    this.opt.noMatch(range);\n                }\n                return {\n                    start: start,\n                    end: end,\n                    valid: valid\n                };\n            }\n        }, {\n            key: \"checkWhitespaceRanges\",\n            value: function checkWhitespaceRanges(range, originalLength, string) {\n                var end = void 0,\n                    valid = true,\n                    max = string.length,\n                    offset = originalLength - max,\n                    start = parseInt(range.start, 10) - offset;\n\n                start = start > max ? max : start;\n                end = start + parseInt(range.length, 10);\n                if (end > max) {\n                    end = max;\n                    this.log(\"End range automatically set to the max value of \" + max);\n                }\n                if (start < 0 || end - start < 0 || start > max || end > max) {\n                    valid = false;\n                    this.log(\"Invalid range: \" + JSON.stringify(range));\n                    this.opt.noMatch(range);\n                } else if (string.substring(start, end).replace(/\\s+/g, \"\") === \"\") {\n                    valid = false;\n\n                    this.log(\"Skipping whitespace only range: \" + JSON.stringify(range));\n                    this.opt.noMatch(range);\n                }\n                return {\n                    start: start,\n                    end: end,\n                    valid: valid\n                };\n            }\n        }, {\n            key: \"getTextNodes\",\n            value: function getTextNodes(cb) {\n                var _this4 = this;\n\n                var val = \"\",\n                    nodes = [];\n                this.iterator.forEachNode(NodeFilter.SHOW_TEXT, function (node) {\n                    nodes.push({\n                        start: val.length,\n                        end: (val += node.textContent).length,\n                        node: node\n                    });\n                }, function (node) {\n                    if (_this4.matchesExclude(node.parentNode)) {\n                        return NodeFilter.FILTER_REJECT;\n                    } else {\n                        return NodeFilter.FILTER_ACCEPT;\n                    }\n                }, function () {\n                    cb({\n                        value: val,\n                        nodes: nodes\n                    });\n                });\n            }\n        }, {\n            key: \"matchesExclude\",\n            value: function matchesExclude(el) {\n                return DOMIterator.matches(el, this.opt.exclude.concat([\"script\", \"style\", \"title\", \"head\", \"html\"]));\n            }\n        }, {\n            key: \"wrapRangeInTextNode\",\n            value: function wrapRangeInTextNode(node, start, end) {\n                var hEl = !this.opt.element ? \"mark\" : this.opt.element,\n                    startNode = node.splitText(start),\n                    ret = startNode.splitText(end - start);\n                var repl = document.createElement(hEl);\n                repl.setAttribute(\"data-markjs\", \"true\");\n                if (this.opt.className) {\n                    repl.setAttribute(\"class\", this.opt.className);\n                }\n                repl.textContent = startNode.textContent;\n                startNode.parentNode.replaceChild(repl, startNode);\n                return ret;\n            }\n        }, {\n            key: \"wrapRangeInMappedTextNode\",\n            value: function wrapRangeInMappedTextNode(dict, start, end, filterCb, eachCb) {\n                var _this5 = this;\n\n                dict.nodes.every(function (n, i) {\n                    var sibl = dict.nodes[i + 1];\n                    if (typeof sibl === \"undefined\" || sibl.start > start) {\n                        if (!filterCb(n.node)) {\n                            return false;\n                        }\n\n                        var s = start - n.start,\n                            e = (end > n.end ? n.end : end) - n.start,\n                            startStr = dict.value.substr(0, n.start),\n                            endStr = dict.value.substr(e + n.start);\n                        n.node = _this5.wrapRangeInTextNode(n.node, s, e);\n\n                        dict.value = startStr + endStr;\n                        dict.nodes.forEach(function (k, j) {\n                            if (j >= i) {\n                                if (dict.nodes[j].start > 0 && j !== i) {\n                                    dict.nodes[j].start -= e;\n                                }\n                                dict.nodes[j].end -= e;\n                            }\n                        });\n                        end -= e;\n                        eachCb(n.node.previousSibling, n.start);\n                        if (end > n.end) {\n                            start = n.end;\n                        } else {\n                            return false;\n                        }\n                    }\n                    return true;\n                });\n            }\n        }, {\n            key: \"wrapMatches\",\n            value: function wrapMatches(regex, ignoreGroups, filterCb, eachCb, endCb) {\n                var _this6 = this;\n\n                var matchIdx = ignoreGroups === 0 ? 0 : ignoreGroups + 1;\n                this.getTextNodes(function (dict) {\n                    dict.nodes.forEach(function (node) {\n                        node = node.node;\n                        var match = void 0;\n                        while ((match = regex.exec(node.textContent)) !== null && match[matchIdx] !== \"\") {\n                            if (!filterCb(match[matchIdx], node)) {\n                                continue;\n                            }\n                            var pos = match.index;\n                            if (matchIdx !== 0) {\n                                for (var i = 1; i < matchIdx; i++) {\n                                    pos += match[i].length;\n                                }\n                            }\n                            node = _this6.wrapRangeInTextNode(node, pos, pos + match[matchIdx].length);\n                            eachCb(node.previousSibling);\n\n                            regex.lastIndex = 0;\n                        }\n                    });\n                    endCb();\n                });\n            }\n        }, {\n            key: \"wrapMatchesAcrossElements\",\n            value: function wrapMatchesAcrossElements(regex, ignoreGroups, filterCb, eachCb, endCb) {\n                var _this7 = this;\n\n                var matchIdx = ignoreGroups === 0 ? 0 : ignoreGroups + 1;\n                this.getTextNodes(function (dict) {\n                    var match = void 0;\n                    while ((match = regex.exec(dict.value)) !== null && match[matchIdx] !== \"\") {\n                        var start = match.index;\n                        if (matchIdx !== 0) {\n                            for (var i = 1; i < matchIdx; i++) {\n                                start += match[i].length;\n                            }\n                        }\n                        var end = start + match[matchIdx].length;\n\n                        _this7.wrapRangeInMappedTextNode(dict, start, end, function (node) {\n                            return filterCb(match[matchIdx], node);\n                        }, function (node, lastIndex) {\n                            regex.lastIndex = lastIndex;\n                            eachCb(node);\n                        });\n                    }\n                    endCb();\n                });\n            }\n        }, {\n            key: \"wrapRangeFromIndex\",\n            value: function wrapRangeFromIndex(ranges, filterCb, eachCb, endCb) {\n                var _this8 = this;\n\n                this.getTextNodes(function (dict) {\n                    var originalLength = dict.value.length;\n                    ranges.forEach(function (range, counter) {\n                        var _checkWhitespaceRange = _this8.checkWhitespaceRanges(range, originalLength, dict.value),\n                            start = _checkWhitespaceRange.start,\n                            end = _checkWhitespaceRange.end,\n                            valid = _checkWhitespaceRange.valid;\n\n                        if (valid) {\n                            _this8.wrapRangeInMappedTextNode(dict, start, end, function (node) {\n                                return filterCb(node, range, dict.value.substring(start, end), counter);\n                            }, function (node) {\n                                eachCb(node, range);\n                            });\n                        }\n                    });\n                    endCb();\n                });\n            }\n        }, {\n            key: \"unwrapMatches\",\n            value: function unwrapMatches(node) {\n                var parent = node.parentNode;\n                var docFrag = document.createDocumentFragment();\n                while (node.firstChild) {\n                    docFrag.appendChild(node.removeChild(node.firstChild));\n                }\n                parent.replaceChild(docFrag, node);\n                if (!this.ie) {\n                    parent.normalize();\n                } else {\n                    this.normalizeTextNode(parent);\n                }\n            }\n        }, {\n            key: \"normalizeTextNode\",\n            value: function normalizeTextNode(node) {\n                if (!node) {\n                    return;\n                }\n                if (node.nodeType === 3) {\n                    while (node.nextSibling && node.nextSibling.nodeType === 3) {\n                        node.nodeValue += node.nextSibling.nodeValue;\n                        node.parentNode.removeChild(node.nextSibling);\n                    }\n                } else {\n                    this.normalizeTextNode(node.firstChild);\n                }\n                this.normalizeTextNode(node.nextSibling);\n            }\n        }, {\n            key: \"markRegExp\",\n            value: function markRegExp(regexp, opt) {\n                var _this9 = this;\n\n                this.opt = opt;\n                this.log(\"Searching with expression \\\"\" + regexp + \"\\\"\");\n                var totalMatches = 0,\n                    fn = \"wrapMatches\";\n                var eachCb = function eachCb(element) {\n                    totalMatches++;\n                    _this9.opt.each(element);\n                };\n                if (this.opt.acrossElements) {\n                    fn = \"wrapMatchesAcrossElements\";\n                }\n                this[fn](regexp, this.opt.ignoreGroups, function (match, node) {\n                    return _this9.opt.filter(node, match, totalMatches);\n                }, eachCb, function () {\n                    if (totalMatches === 0) {\n                        _this9.opt.noMatch(regexp);\n                    }\n                    _this9.opt.done(totalMatches);\n                });\n            }\n        }, {\n            key: \"mark\",\n            value: function mark(sv, opt) {\n                var _this10 = this;\n\n                this.opt = opt;\n                var totalMatches = 0,\n                    fn = \"wrapMatches\";\n\n                var _getSeparatedKeywords = this.getSeparatedKeywords(typeof sv === \"string\" ? [sv] : sv),\n                    kwArr = _getSeparatedKeywords.keywords,\n                    kwArrLen = _getSeparatedKeywords.length,\n                    sens = this.opt.caseSensitive ? \"\" : \"i\",\n                    handler = function handler(kw) {\n                    var regex = new RegExp(_this10.createRegExp(kw), \"gm\" + sens),\n                        matches = 0;\n                    _this10.log(\"Searching with expression \\\"\" + regex + \"\\\"\");\n                    _this10[fn](regex, 1, function (term, node) {\n                        return _this10.opt.filter(node, kw, totalMatches, matches);\n                    }, function (element) {\n                        matches++;\n                        totalMatches++;\n                        _this10.opt.each(element);\n                    }, function () {\n                        if (matches === 0) {\n                            _this10.opt.noMatch(kw);\n                        }\n                        if (kwArr[kwArrLen - 1] === kw) {\n                            _this10.opt.done(totalMatches);\n                        } else {\n                            handler(kwArr[kwArr.indexOf(kw) + 1]);\n                        }\n                    });\n                };\n\n                if (this.opt.acrossElements) {\n                    fn = \"wrapMatchesAcrossElements\";\n                }\n                if (kwArrLen === 0) {\n                    this.opt.done(totalMatches);\n                } else {\n                    handler(kwArr[0]);\n                }\n            }\n        }, {\n            key: \"markRanges\",\n            value: function markRanges(rawRanges, opt) {\n                var _this11 = this;\n\n                this.opt = opt;\n                var totalMatches = 0,\n                    ranges = this.checkRanges(rawRanges);\n                if (ranges && ranges.length) {\n                    this.log(\"Starting to mark with the following ranges: \" + JSON.stringify(ranges));\n                    this.wrapRangeFromIndex(ranges, function (node, range, match, counter) {\n                        return _this11.opt.filter(node, range, match, counter);\n                    }, function (element, range) {\n                        totalMatches++;\n                        _this11.opt.each(element, range);\n                    }, function () {\n                        _this11.opt.done(totalMatches);\n                    });\n                } else {\n                    this.opt.done(totalMatches);\n                }\n            }\n        }, {\n            key: \"unmark\",\n            value: function unmark(opt) {\n                var _this12 = this;\n\n                this.opt = opt;\n                var sel = this.opt.element ? this.opt.element : \"*\";\n                sel += \"[data-markjs]\";\n                if (this.opt.className) {\n                    sel += \".\" + this.opt.className;\n                }\n                this.log(\"Removal selector \\\"\" + sel + \"\\\"\");\n                this.iterator.forEachNode(NodeFilter.SHOW_ELEMENT, function (node) {\n                    _this12.unwrapMatches(node);\n                }, function (node) {\n                    var matchesSel = DOMIterator.matches(node, sel),\n                        matchesExclude = _this12.matchesExclude(node);\n                    if (!matchesSel || matchesExclude) {\n                        return NodeFilter.FILTER_REJECT;\n                    } else {\n                        return NodeFilter.FILTER_ACCEPT;\n                    }\n                }, this.opt.done);\n            }\n        }, {\n            key: \"opt\",\n            set: function set(val) {\n                this._opt = _extends({}, {\n                    \"element\": \"\",\n                    \"className\": \"\",\n                    \"exclude\": [],\n                    \"iframes\": false,\n                    \"iframesTimeout\": 5000,\n                    \"separateWordSearch\": true,\n                    \"diacritics\": true,\n                    \"synonyms\": {},\n                    \"accuracy\": \"partially\",\n                    \"acrossElements\": false,\n                    \"caseSensitive\": false,\n                    \"ignoreJoiners\": false,\n                    \"ignoreGroups\": 0,\n                    \"ignorePunctuation\": [],\n                    \"wildcards\": \"disabled\",\n                    \"each\": function each() {},\n                    \"noMatch\": function noMatch() {},\n                    \"filter\": function filter() {\n                        return true;\n                    },\n                    \"done\": function done() {},\n                    \"debug\": false,\n                    \"log\": window.console\n                }, val);\n            },\n            get: function get() {\n                return this._opt;\n            }\n        }, {\n            key: \"iterator\",\n            get: function get() {\n                return new DOMIterator(this.ctx, this.opt.iframes, this.opt.exclude, this.opt.iframesTimeout);\n            }\n        }]);\n\n        return Mark;\n    }();\n\n    var DOMIterator = function () {\n        function DOMIterator(ctx) {\n            var iframes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n            var iframesTimeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5000;\n\n            _classCallCheck(this, DOMIterator);\n\n            this.ctx = ctx;\n\n            this.iframes = iframes;\n\n            this.exclude = exclude;\n\n            this.iframesTimeout = iframesTimeout;\n        }\n\n        _createClass(DOMIterator, [{\n            key: \"getContexts\",\n            value: function getContexts() {\n                var ctx = void 0,\n                    filteredCtx = [];\n                if (typeof this.ctx === \"undefined\" || !this.ctx) {\n                    ctx = [];\n                } else if (NodeList.prototype.isPrototypeOf(this.ctx)) {\n                    ctx = Array.prototype.slice.call(this.ctx);\n                } else if (Array.isArray(this.ctx)) {\n                    ctx = this.ctx;\n                } else if (typeof this.ctx === \"string\") {\n                    ctx = Array.prototype.slice.call(document.querySelectorAll(this.ctx));\n                } else {\n                    ctx = [this.ctx];\n                }\n\n                ctx.forEach(function (ctx) {\n                    var isDescendant = filteredCtx.filter(function (contexts) {\n                        return contexts.contains(ctx);\n                    }).length > 0;\n                    if (filteredCtx.indexOf(ctx) === -1 && !isDescendant) {\n                        filteredCtx.push(ctx);\n                    }\n                });\n                return filteredCtx;\n            }\n        }, {\n            key: \"getIframeContents\",\n            value: function getIframeContents(ifr, successFn) {\n                var errorFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n\n                var doc = void 0;\n                try {\n                    var ifrWin = ifr.contentWindow;\n                    doc = ifrWin.document;\n                    if (!ifrWin || !doc) {\n                        throw new Error(\"iframe inaccessible\");\n                    }\n                } catch (e) {\n                    errorFn();\n                }\n                if (doc) {\n                    successFn(doc);\n                }\n            }\n        }, {\n            key: \"isIframeBlank\",\n            value: function isIframeBlank(ifr) {\n                var bl = \"about:blank\",\n                    src = ifr.getAttribute(\"src\").trim(),\n                    href = ifr.contentWindow.location.href;\n                return href === bl && src !== bl && src;\n            }\n        }, {\n            key: \"observeIframeLoad\",\n            value: function observeIframeLoad(ifr, successFn, errorFn) {\n                var _this13 = this;\n\n                var called = false,\n                    tout = null;\n                var listener = function listener() {\n                    if (called) {\n                        return;\n                    }\n                    called = true;\n                    clearTimeout(tout);\n                    try {\n                        if (!_this13.isIframeBlank(ifr)) {\n                            ifr.removeEventListener(\"load\", listener);\n                            _this13.getIframeContents(ifr, successFn, errorFn);\n                        }\n                    } catch (e) {\n                        errorFn();\n                    }\n                };\n                ifr.addEventListener(\"load\", listener);\n                tout = setTimeout(listener, this.iframesTimeout);\n            }\n        }, {\n            key: \"onIframeReady\",\n            value: function onIframeReady(ifr, successFn, errorFn) {\n                try {\n                    if (ifr.contentWindow.document.readyState === \"complete\") {\n                        if (this.isIframeBlank(ifr)) {\n                            this.observeIframeLoad(ifr, successFn, errorFn);\n                        } else {\n                            this.getIframeContents(ifr, successFn, errorFn);\n                        }\n                    } else {\n                        this.observeIframeLoad(ifr, successFn, errorFn);\n                    }\n                } catch (e) {\n                    errorFn();\n                }\n            }\n        }, {\n            key: \"waitForIframes\",\n            value: function waitForIframes(ctx, done) {\n                var _this14 = this;\n\n                var eachCalled = 0;\n                this.forEachIframe(ctx, function () {\n                    return true;\n                }, function (ifr) {\n                    eachCalled++;\n                    _this14.waitForIframes(ifr.querySelector(\"html\"), function () {\n                        if (! --eachCalled) {\n                            done();\n                        }\n                    });\n                }, function (handled) {\n                    if (!handled) {\n                        done();\n                    }\n                });\n            }\n        }, {\n            key: \"forEachIframe\",\n            value: function forEachIframe(ctx, filter, each) {\n                var _this15 = this;\n\n                var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n                var ifr = ctx.querySelectorAll(\"iframe\"),\n                    open = ifr.length,\n                    handled = 0;\n                ifr = Array.prototype.slice.call(ifr);\n                var checkEnd = function checkEnd() {\n                    if (--open <= 0) {\n                        end(handled);\n                    }\n                };\n                if (!open) {\n                    checkEnd();\n                }\n                ifr.forEach(function (ifr) {\n                    if (DOMIterator.matches(ifr, _this15.exclude)) {\n                        checkEnd();\n                    } else {\n                        _this15.onIframeReady(ifr, function (con) {\n                            if (filter(ifr)) {\n                                handled++;\n                                each(con);\n                            }\n                            checkEnd();\n                        }, checkEnd);\n                    }\n                });\n            }\n        }, {\n            key: \"createIterator\",\n            value: function createIterator(ctx, whatToShow, filter) {\n                return document.createNodeIterator(ctx, whatToShow, filter, false);\n            }\n        }, {\n            key: \"createInstanceOnIframe\",\n            value: function createInstanceOnIframe(contents) {\n                return new DOMIterator(contents.querySelector(\"html\"), this.iframes);\n            }\n        }, {\n            key: \"compareNodeIframe\",\n            value: function compareNodeIframe(node, prevNode, ifr) {\n                var compCurr = node.compareDocumentPosition(ifr),\n                    prev = Node.DOCUMENT_POSITION_PRECEDING;\n                if (compCurr & prev) {\n                    if (prevNode !== null) {\n                        var compPrev = prevNode.compareDocumentPosition(ifr),\n                            after = Node.DOCUMENT_POSITION_FOLLOWING;\n                        if (compPrev & after) {\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        }, {\n            key: \"getIteratorNode\",\n            value: function getIteratorNode(itr) {\n                var prevNode = itr.previousNode();\n                var node = void 0;\n                if (prevNode === null) {\n                    node = itr.nextNode();\n                } else {\n                    node = itr.nextNode() && itr.nextNode();\n                }\n                return {\n                    prevNode: prevNode,\n                    node: node\n                };\n            }\n        }, {\n            key: \"checkIframeFilter\",\n            value: function checkIframeFilter(node, prevNode, currIfr, ifr) {\n                var key = false,\n                    handled = false;\n                ifr.forEach(function (ifrDict, i) {\n                    if (ifrDict.val === currIfr) {\n                        key = i;\n                        handled = ifrDict.handled;\n                    }\n                });\n                if (this.compareNodeIframe(node, prevNode, currIfr)) {\n                    if (key === false && !handled) {\n                        ifr.push({\n                            val: currIfr,\n                            handled: true\n                        });\n                    } else if (key !== false && !handled) {\n                        ifr[key].handled = true;\n                    }\n                    return true;\n                }\n                if (key === false) {\n                    ifr.push({\n                        val: currIfr,\n                        handled: false\n                    });\n                }\n                return false;\n            }\n        }, {\n            key: \"handleOpenIframes\",\n            value: function handleOpenIframes(ifr, whatToShow, eCb, fCb) {\n                var _this16 = this;\n\n                ifr.forEach(function (ifrDict) {\n                    if (!ifrDict.handled) {\n                        _this16.getIframeContents(ifrDict.val, function (con) {\n                            _this16.createInstanceOnIframe(con).forEachNode(whatToShow, eCb, fCb);\n                        });\n                    }\n                });\n            }\n        }, {\n            key: \"iterateThroughNodes\",\n            value: function iterateThroughNodes(whatToShow, ctx, eachCb, filterCb, doneCb) {\n                var _this17 = this;\n\n                var itr = this.createIterator(ctx, whatToShow, filterCb);\n                var ifr = [],\n                    elements = [],\n                    node = void 0,\n                    prevNode = void 0,\n                    retrieveNodes = function retrieveNodes() {\n                    var _getIteratorNode = _this17.getIteratorNode(itr);\n\n                    prevNode = _getIteratorNode.prevNode;\n                    node = _getIteratorNode.node;\n\n                    return node;\n                };\n                while (retrieveNodes()) {\n                    if (this.iframes) {\n                        this.forEachIframe(ctx, function (currIfr) {\n                            return _this17.checkIframeFilter(node, prevNode, currIfr, ifr);\n                        }, function (con) {\n                            _this17.createInstanceOnIframe(con).forEachNode(whatToShow, function (ifrNode) {\n                                return elements.push(ifrNode);\n                            }, filterCb);\n                        });\n                    }\n\n                    elements.push(node);\n                }\n                elements.forEach(function (node) {\n                    eachCb(node);\n                });\n                if (this.iframes) {\n                    this.handleOpenIframes(ifr, whatToShow, eachCb, filterCb);\n                }\n                doneCb();\n            }\n        }, {\n            key: \"forEachNode\",\n            value: function forEachNode(whatToShow, each, filter) {\n                var _this18 = this;\n\n                var done = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n                var contexts = this.getContexts();\n                var open = contexts.length;\n                if (!open) {\n                    done();\n                }\n                contexts.forEach(function (ctx) {\n                    var ready = function ready() {\n                        _this18.iterateThroughNodes(whatToShow, ctx, each, filter, function () {\n                            if (--open <= 0) {\n                                done();\n                            }\n                        });\n                    };\n\n                    if (_this18.iframes) {\n                        _this18.waitForIframes(ctx, ready);\n                    } else {\n                        ready();\n                    }\n                });\n            }\n        }], [{\n            key: \"matches\",\n            value: function matches(element, selector) {\n                var selectors = typeof selector === \"string\" ? [selector] : selector,\n                    fn = element.matches || element.matchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector || element.webkitMatchesSelector;\n                if (fn) {\n                    var match = false;\n                    selectors.every(function (sel) {\n                        if (fn.call(element, sel)) {\n                            match = true;\n                            return false;\n                        }\n                        return true;\n                    });\n                    return match;\n                } else {\n                    return false;\n                }\n            }\n        }]);\n\n        return DOMIterator;\n    }();\n\n    window.Mark = function (ctx) {\n        var _this19 = this;\n\n        var instance = new Mark(ctx);\n        this.mark = function (sv, opt) {\n            instance.mark(sv, opt);\n            return _this19;\n        };\n        this.markRegExp = function (sv, opt) {\n            instance.markRegExp(sv, opt);\n            return _this19;\n        };\n        this.markRanges = function (sv, opt) {\n            instance.markRanges(sv, opt);\n            return _this19;\n        };\n        this.unmark = function (opt) {\n            instance.unmark(opt);\n            return _this19;\n        };\n        return this;\n    };\n\n    return window.Mark;\n}, window, document);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/miriam/Sites/herman/node_modules/mark.js/dist/mark.js\n// module id = 215\n// module chunks = 1","/*! Browser bundle of nunjucks 2.5.2 (slim, only works with precompiled templates) */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nunjucks\"] = factory();\n\telse\n\t\troot[\"nunjucks\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar lib = __webpack_require__(1);\n\tvar env = __webpack_require__(2);\n\tvar Loader = __webpack_require__(11);\n\tvar loaders = __webpack_require__(3);\n\tvar precompile = __webpack_require__(3);\n\n\tmodule.exports = {};\n\tmodule.exports.Environment = env.Environment;\n\tmodule.exports.Template = env.Template;\n\n\tmodule.exports.Loader = Loader;\n\tmodule.exports.FileSystemLoader = loaders.FileSystemLoader;\n\tmodule.exports.PrecompiledLoader = loaders.PrecompiledLoader;\n\tmodule.exports.WebLoader = loaders.WebLoader;\n\n\tmodule.exports.compiler = __webpack_require__(3);\n\tmodule.exports.parser = __webpack_require__(3);\n\tmodule.exports.lexer = __webpack_require__(3);\n\tmodule.exports.runtime = __webpack_require__(8);\n\tmodule.exports.lib = lib;\n\tmodule.exports.nodes = __webpack_require__(3);\n\n\tmodule.exports.installJinjaCompat = __webpack_require__(12);\n\n\t// A single instance of an environment, since this is so commonly used\n\n\tvar e;\n\tmodule.exports.configure = function(templatesPath, opts) {\n\t    opts = opts || {};\n\t    if(lib.isObject(templatesPath)) {\n\t        opts = templatesPath;\n\t        templatesPath = null;\n\t    }\n\n\t    var TemplateLoader;\n\t    if(loaders.FileSystemLoader) {\n\t        TemplateLoader = new loaders.FileSystemLoader(templatesPath, {\n\t            watch: opts.watch,\n\t            noCache: opts.noCache\n\t        });\n\t    }\n\t    else if(loaders.WebLoader) {\n\t        TemplateLoader = new loaders.WebLoader(templatesPath, {\n\t            useCache: opts.web && opts.web.useCache,\n\t            async: opts.web && opts.web.async\n\t        });\n\t    }\n\n\t    e = new env.Environment(TemplateLoader, opts);\n\n\t    if(opts && opts.express) {\n\t        e.express(opts.express);\n\t    }\n\n\t    return e;\n\t};\n\n\tmodule.exports.compile = function(src, env, path, eagerCompile) {\n\t    if(!e) {\n\t        module.exports.configure();\n\t    }\n\t    return new module.exports.Template(src, env, path, eagerCompile);\n\t};\n\n\tmodule.exports.render = function(name, ctx, cb) {\n\t    if(!e) {\n\t        module.exports.configure();\n\t    }\n\n\t    return e.render(name, ctx, cb);\n\t};\n\n\tmodule.exports.renderString = function(src, ctx, cb) {\n\t    if(!e) {\n\t        module.exports.configure();\n\t    }\n\n\t    return e.renderString(src, ctx, cb);\n\t};\n\n\tif(precompile) {\n\t    module.exports.precompile = precompile.precompile;\n\t    module.exports.precompileString = precompile.precompileString;\n\t}\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tvar ArrayProto = Array.prototype;\n\tvar ObjProto = Object.prototype;\n\n\tvar escapeMap = {\n\t    '&': '&amp;',\n\t    '\"': '&quot;',\n\t    '\\'': '&#39;',\n\t    '<': '&lt;',\n\t    '>': '&gt;'\n\t};\n\n\tvar escapeRegex = /[&\"'<>]/g;\n\n\tvar lookupEscape = function(ch) {\n\t    return escapeMap[ch];\n\t};\n\n\tvar exports = module.exports = {};\n\n\texports.prettifyError = function(path, withInternals, err) {\n\t    // jshint -W022\n\t    // http://jslinterrors.com/do-not-assign-to-the-exception-parameter\n\t    if (!err.Update) {\n\t        // not one of ours, cast it\n\t        err = new exports.TemplateError(err);\n\t    }\n\t    err.Update(path);\n\n\t    // Unless they marked the dev flag, show them a trace from here\n\t    if (!withInternals) {\n\t        var old = err;\n\t        err = new Error(old.message);\n\t        err.name = old.name;\n\t    }\n\n\t    return err;\n\t};\n\n\texports.TemplateError = function(message, lineno, colno) {\n\t    var err = this;\n\n\t    if (message instanceof Error) { // for casting regular js errors\n\t        err = message;\n\t        message = message.name + ': ' + message.message;\n\n\t        try {\n\t            if(err.name = '') {}\n\t        }\n\t        catch(e) {\n\t            // If we can't set the name of the error object in this\n\t            // environment, don't use it\n\t            err = this;\n\t        }\n\t    } else {\n\t        if(Error.captureStackTrace) {\n\t            Error.captureStackTrace(err);\n\t        }\n\t    }\n\n\t    err.name = 'Template render error';\n\t    err.message = message;\n\t    err.lineno = lineno;\n\t    err.colno = colno;\n\t    err.firstUpdate = true;\n\n\t    err.Update = function(path) {\n\t        var message = '(' + (path || 'unknown path') + ')';\n\n\t        // only show lineno + colno next to path of template\n\t        // where error occurred\n\t        if (this.firstUpdate) {\n\t            if(this.lineno && this.colno) {\n\t                message += ' [Line ' + this.lineno + ', Column ' + this.colno + ']';\n\t            }\n\t            else if(this.lineno) {\n\t                message += ' [Line ' + this.lineno + ']';\n\t            }\n\t        }\n\n\t        message += '\\n ';\n\t        if (this.firstUpdate) {\n\t            message += ' ';\n\t        }\n\n\t        this.message = message + (this.message || '');\n\t        this.firstUpdate = false;\n\t        return this;\n\t    };\n\n\t    return err;\n\t};\n\n\texports.TemplateError.prototype = Error.prototype;\n\n\texports.escape = function(val) {\n\t  return val.replace(escapeRegex, lookupEscape);\n\t};\n\n\texports.isFunction = function(obj) {\n\t    return ObjProto.toString.call(obj) === '[object Function]';\n\t};\n\n\texports.isArray = Array.isArray || function(obj) {\n\t    return ObjProto.toString.call(obj) === '[object Array]';\n\t};\n\n\texports.isString = function(obj) {\n\t    return ObjProto.toString.call(obj) === '[object String]';\n\t};\n\n\texports.isObject = function(obj) {\n\t    return ObjProto.toString.call(obj) === '[object Object]';\n\t};\n\n\texports.groupBy = function(obj, val) {\n\t    var result = {};\n\t    var iterator = exports.isFunction(val) ? val : function(obj) { return obj[val]; };\n\t    for(var i=0; i<obj.length; i++) {\n\t        var value = obj[i];\n\t        var key = iterator(value, i);\n\t        (result[key] || (result[key] = [])).push(value);\n\t    }\n\t    return result;\n\t};\n\n\texports.toArray = function(obj) {\n\t    return Array.prototype.slice.call(obj);\n\t};\n\n\texports.without = function(array) {\n\t    var result = [];\n\t    if (!array) {\n\t        return result;\n\t    }\n\t    var index = -1,\n\t    length = array.length,\n\t    contains = exports.toArray(arguments).slice(1);\n\n\t    while(++index < length) {\n\t        if(exports.indexOf(contains, array[index]) === -1) {\n\t            result.push(array[index]);\n\t        }\n\t    }\n\t    return result;\n\t};\n\n\texports.extend = function(obj, obj2) {\n\t    for(var k in obj2) {\n\t        obj[k] = obj2[k];\n\t    }\n\t    return obj;\n\t};\n\n\texports.repeat = function(char_, n) {\n\t    var str = '';\n\t    for(var i=0; i<n; i++) {\n\t        str += char_;\n\t    }\n\t    return str;\n\t};\n\n\texports.each = function(obj, func, context) {\n\t    if(obj == null) {\n\t        return;\n\t    }\n\n\t    if(ArrayProto.each && obj.each === ArrayProto.each) {\n\t        obj.forEach(func, context);\n\t    }\n\t    else if(obj.length === +obj.length) {\n\t        for(var i=0, l=obj.length; i<l; i++) {\n\t            func.call(context, obj[i], i, obj);\n\t        }\n\t    }\n\t};\n\n\texports.map = function(obj, func) {\n\t    var results = [];\n\t    if(obj == null) {\n\t        return results;\n\t    }\n\n\t    if(ArrayProto.map && obj.map === ArrayProto.map) {\n\t        return obj.map(func);\n\t    }\n\n\t    for(var i=0; i<obj.length; i++) {\n\t        results[results.length] = func(obj[i], i);\n\t    }\n\n\t    if(obj.length === +obj.length) {\n\t        results.length = obj.length;\n\t    }\n\n\t    return results;\n\t};\n\n\texports.asyncIter = function(arr, iter, cb) {\n\t    var i = -1;\n\n\t    function next() {\n\t        i++;\n\n\t        if(i < arr.length) {\n\t            iter(arr[i], i, next, cb);\n\t        }\n\t        else {\n\t            cb();\n\t        }\n\t    }\n\n\t    next();\n\t};\n\n\texports.asyncFor = function(obj, iter, cb) {\n\t    var keys = exports.keys(obj);\n\t    var len = keys.length;\n\t    var i = -1;\n\n\t    function next() {\n\t        i++;\n\t        var k = keys[i];\n\n\t        if(i < len) {\n\t            iter(k, obj[k], i, len, next);\n\t        }\n\t        else {\n\t            cb();\n\t        }\n\t    }\n\n\t    next();\n\t};\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf#Polyfill\n\texports.indexOf = Array.prototype.indexOf ?\n\t    function (arr, searchElement, fromIndex) {\n\t        return Array.prototype.indexOf.call(arr, searchElement, fromIndex);\n\t    } :\n\t    function (arr, searchElement, fromIndex) {\n\t        var length = this.length >>> 0; // Hack to convert object.length to a UInt32\n\n\t        fromIndex = +fromIndex || 0;\n\n\t        if(Math.abs(fromIndex) === Infinity) {\n\t            fromIndex = 0;\n\t        }\n\n\t        if(fromIndex < 0) {\n\t            fromIndex += length;\n\t            if (fromIndex < 0) {\n\t                fromIndex = 0;\n\t            }\n\t        }\n\n\t        for(;fromIndex < length; fromIndex++) {\n\t            if (arr[fromIndex] === searchElement) {\n\t                return fromIndex;\n\t            }\n\t        }\n\n\t        return -1;\n\t    };\n\n\tif(!Array.prototype.map) {\n\t    Array.prototype.map = function() {\n\t        throw new Error('map is unimplemented for this js engine');\n\t    };\n\t}\n\n\texports.keys = function(obj) {\n\t    if(Object.prototype.keys) {\n\t        return obj.keys();\n\t    }\n\t    else {\n\t        var keys = [];\n\t        for(var k in obj) {\n\t            if(obj.hasOwnProperty(k)) {\n\t                keys.push(k);\n\t            }\n\t        }\n\t        return keys;\n\t    }\n\t};\n\n\texports.inOperator = function (key, val) {\n\t    if (exports.isArray(val)) {\n\t        return exports.indexOf(val, key) !== -1;\n\t    } else if (exports.isObject(val)) {\n\t        return key in val;\n\t    } else if (exports.isString(val)) {\n\t        return val.indexOf(key) !== -1;\n\t    } else {\n\t        throw new Error('Cannot use \"in\" operator to search for \"'\n\t            + key + '\" in unexpected types.');\n\t    }\n\t};\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar path = __webpack_require__(3);\n\tvar asap = __webpack_require__(4);\n\tvar lib = __webpack_require__(1);\n\tvar Obj = __webpack_require__(6);\n\tvar compiler = __webpack_require__(3);\n\tvar builtin_filters = __webpack_require__(7);\n\tvar builtin_loaders = __webpack_require__(3);\n\tvar runtime = __webpack_require__(8);\n\tvar globals = __webpack_require__(9);\n\tvar Frame = runtime.Frame;\n\tvar Template;\n\n\t// Unconditionally load in this loader, even if no other ones are\n\t// included (possible in the slim browser build)\n\tbuiltin_loaders.PrecompiledLoader = __webpack_require__(10);\n\n\t// If the user is using the async API, *always* call it\n\t// asynchronously even if the template was synchronous.\n\tfunction callbackAsap(cb, err, res) {\n\t    asap(function() { cb(err, res); });\n\t}\n\n\tvar Environment = Obj.extend({\n\t    init: function(loaders, opts) {\n\t        // The dev flag determines the trace that'll be shown on errors.\n\t        // If set to true, returns the full trace from the error point,\n\t        // otherwise will return trace starting from Template.render\n\t        // (the full trace from within nunjucks may confuse developers using\n\t        //  the library)\n\t        // defaults to false\n\t        opts = this.opts = opts || {};\n\t        this.opts.dev = !!opts.dev;\n\n\t        // The autoescape flag sets global autoescaping. If true,\n\t        // every string variable will be escaped by default.\n\t        // If false, strings can be manually escaped using the `escape` filter.\n\t        // defaults to true\n\t        this.opts.autoescape = opts.autoescape != null ? opts.autoescape : true;\n\n\t        // If true, this will make the system throw errors if trying\n\t        // to output a null or undefined value\n\t        this.opts.throwOnUndefined = !!opts.throwOnUndefined;\n\t        this.opts.trimBlocks = !!opts.trimBlocks;\n\t        this.opts.lstripBlocks = !!opts.lstripBlocks;\n\n\t        this.loaders = [];\n\n\t        if(!loaders) {\n\t            // The filesystem loader is only available server-side\n\t            if(builtin_loaders.FileSystemLoader) {\n\t                this.loaders = [new builtin_loaders.FileSystemLoader('views')];\n\t            }\n\t            else if(builtin_loaders.WebLoader) {\n\t                this.loaders = [new builtin_loaders.WebLoader('/views')];\n\t            }\n\t        }\n\t        else {\n\t            this.loaders = lib.isArray(loaders) ? loaders : [loaders];\n\t        }\n\n\t        // It's easy to use precompiled templates: just include them\n\t        // before you configure nunjucks and this will automatically\n\t        // pick it up and use it\n\t        if((true) && window.nunjucksPrecompiled) {\n\t            this.loaders.unshift(\n\t                new builtin_loaders.PrecompiledLoader(window.nunjucksPrecompiled)\n\t            );\n\t        }\n\n\t        this.initCache();\n\n\t        this.globals = globals();\n\t        this.filters = {};\n\t        this.asyncFilters = [];\n\t        this.extensions = {};\n\t        this.extensionsList = [];\n\n\t        for(var name in builtin_filters) {\n\t            this.addFilter(name, builtin_filters[name]);\n\t        }\n\t    },\n\n\t    initCache: function() {\n\t        // Caching and cache busting\n\t        lib.each(this.loaders, function(loader) {\n\t            loader.cache = {};\n\n\t            if(typeof loader.on === 'function') {\n\t                loader.on('update', function(template) {\n\t                    loader.cache[template] = null;\n\t                });\n\t            }\n\t        });\n\t    },\n\n\t    addExtension: function(name, extension) {\n\t        extension._name = name;\n\t        this.extensions[name] = extension;\n\t        this.extensionsList.push(extension);\n\t        return this;\n\t    },\n\n\t    removeExtension: function(name) {\n\t        var extension = this.getExtension(name);\n\t        if (!extension) return;\n\n\t        this.extensionsList = lib.without(this.extensionsList, extension);\n\t        delete this.extensions[name];\n\t    },\n\n\t    getExtension: function(name) {\n\t        return this.extensions[name];\n\t    },\n\n\t    hasExtension: function(name) {\n\t        return !!this.extensions[name];\n\t    },\n\n\t    addGlobal: function(name, value) {\n\t        this.globals[name] = value;\n\t        return this;\n\t    },\n\n\t    getGlobal: function(name) {\n\t        if(typeof this.globals[name] === 'undefined') {\n\t            throw new Error('global not found: ' + name);\n\t        }\n\t        return this.globals[name];\n\t    },\n\n\t    addFilter: function(name, func, async) {\n\t        var wrapped = func;\n\n\t        if(async) {\n\t            this.asyncFilters.push(name);\n\t        }\n\t        this.filters[name] = wrapped;\n\t        return this;\n\t    },\n\n\t    getFilter: function(name) {\n\t        if(!this.filters[name]) {\n\t            throw new Error('filter not found: ' + name);\n\t        }\n\t        return this.filters[name];\n\t    },\n\n\t    resolveTemplate: function(loader, parentName, filename) {\n\t        var isRelative = (loader.isRelative && parentName)? loader.isRelative(filename) : false;\n\t        return (isRelative && loader.resolve)? loader.resolve(parentName, filename) : filename;\n\t    },\n\n\t    getTemplate: function(name, eagerCompile, parentName, ignoreMissing, cb) {\n\t        var that = this;\n\t        var tmpl = null;\n\t        if(name && name.raw) {\n\t            // this fixes autoescape for templates referenced in symbols\n\t            name = name.raw;\n\t        }\n\n\t        if(lib.isFunction(parentName)) {\n\t            cb = parentName;\n\t            parentName = null;\n\t            eagerCompile = eagerCompile || false;\n\t        }\n\n\t        if(lib.isFunction(eagerCompile)) {\n\t            cb = eagerCompile;\n\t            eagerCompile = false;\n\t        }\n\n\t        if (name instanceof Template) {\n\t             tmpl = name;\n\t        }\n\t        else if(typeof name !== 'string') {\n\t            throw new Error('template names must be a string: ' + name);\n\t        }\n\t        else {\n\t            for (var i = 0; i < this.loaders.length; i++) {\n\t                var _name = this.resolveTemplate(this.loaders[i], parentName, name);\n\t                tmpl = this.loaders[i].cache[_name];\n\t                if (tmpl) break;\n\t            }\n\t        }\n\n\t        if(tmpl) {\n\t            if(eagerCompile) {\n\t                tmpl.compile();\n\t            }\n\n\t            if(cb) {\n\t                cb(null, tmpl);\n\t            }\n\t            else {\n\t                return tmpl;\n\t            }\n\t        } else {\n\t            var syncResult;\n\t            var _this = this;\n\n\t            var createTemplate = function(err, info) {\n\t                if(!info && !err) {\n\t                    if(!ignoreMissing) {\n\t                        err = new Error('template not found: ' + name);\n\t                    }\n\t                }\n\n\t                if (err) {\n\t                    if(cb) {\n\t                        cb(err);\n\t                    }\n\t                    else {\n\t                        throw err;\n\t                    }\n\t                }\n\t                else {\n\t                    var tmpl;\n\t                    if(info) {\n\t                        tmpl = new Template(info.src, _this,\n\t                                            info.path, eagerCompile);\n\n\t                        if(!info.noCache) {\n\t                            info.loader.cache[name] = tmpl;\n\t                        }\n\t                    }\n\t                    else {\n\t                        tmpl = new Template('', _this,\n\t                                            '', eagerCompile);\n\t                    }\n\n\t                    if(cb) {\n\t                        cb(null, tmpl);\n\t                    }\n\t                    else {\n\t                        syncResult = tmpl;\n\t                    }\n\t                }\n\t            };\n\n\t            lib.asyncIter(this.loaders, function(loader, i, next, done) {\n\t                function handle(err, src) {\n\t                    if(err) {\n\t                        done(err);\n\t                    }\n\t                    else if(src) {\n\t                        src.loader = loader;\n\t                        done(null, src);\n\t                    }\n\t                    else {\n\t                        next();\n\t                    }\n\t                }\n\n\t                // Resolve name relative to parentName\n\t                name = that.resolveTemplate(loader, parentName, name);\n\n\t                if(loader.async) {\n\t                    loader.getSource(name, handle);\n\t                }\n\t                else {\n\t                    handle(null, loader.getSource(name));\n\t                }\n\t            }, createTemplate);\n\n\t            return syncResult;\n\t        }\n\t    },\n\n\t    express: function(app) {\n\t        var env = this;\n\n\t        function NunjucksView(name, opts) {\n\t            this.name          = name;\n\t            this.path          = name;\n\t            this.defaultEngine = opts.defaultEngine;\n\t            this.ext           = path.extname(name);\n\t            if (!this.ext && !this.defaultEngine) throw new Error('No default engine was specified and no extension was provided.');\n\t            if (!this.ext) this.name += (this.ext = ('.' !== this.defaultEngine[0] ? '.' : '') + this.defaultEngine);\n\t        }\n\n\t        NunjucksView.prototype.render = function(opts, cb) {\n\t          env.render(this.name, opts, cb);\n\t        };\n\n\t        app.set('view', NunjucksView);\n\t        app.set('nunjucksEnv', this);\n\t        return this;\n\t    },\n\n\t    render: function(name, ctx, cb) {\n\t        if(lib.isFunction(ctx)) {\n\t            cb = ctx;\n\t            ctx = null;\n\t        }\n\n\t        // We support a synchronous API to make it easier to migrate\n\t        // existing code to async. This works because if you don't do\n\t        // anything async work, the whole thing is actually run\n\t        // synchronously.\n\t        var syncResult = null;\n\n\t        this.getTemplate(name, function(err, tmpl) {\n\t            if(err && cb) {\n\t                callbackAsap(cb, err);\n\t            }\n\t            else if(err) {\n\t                throw err;\n\t            }\n\t            else {\n\t                syncResult = tmpl.render(ctx, cb);\n\t            }\n\t        });\n\n\t        return syncResult;\n\t    },\n\n\t    renderString: function(src, ctx, opts, cb) {\n\t        if(lib.isFunction(opts)) {\n\t            cb = opts;\n\t            opts = {};\n\t        }\n\t        opts = opts || {};\n\n\t        var tmpl = new Template(src, this, opts.path);\n\t        return tmpl.render(ctx, cb);\n\t    }\n\t});\n\n\tvar Context = Obj.extend({\n\t    init: function(ctx, blocks, env) {\n\t        // Has to be tied to an environment so we can tap into its globals.\n\t        this.env = env || new Environment();\n\n\t        // Make a duplicate of ctx\n\t        this.ctx = {};\n\t        for(var k in ctx) {\n\t            if(ctx.hasOwnProperty(k)) {\n\t                this.ctx[k] = ctx[k];\n\t            }\n\t        }\n\n\t        this.blocks = {};\n\t        this.exported = [];\n\n\t        for(var name in blocks) {\n\t            this.addBlock(name, blocks[name]);\n\t        }\n\t    },\n\n\t    lookup: function(name) {\n\t        // This is one of the most called functions, so optimize for\n\t        // the typical case where the name isn't in the globals\n\t        if(name in this.env.globals && !(name in this.ctx)) {\n\t            return this.env.globals[name];\n\t        }\n\t        else {\n\t            return this.ctx[name];\n\t        }\n\t    },\n\n\t    setVariable: function(name, val) {\n\t        this.ctx[name] = val;\n\t    },\n\n\t    getVariables: function() {\n\t        return this.ctx;\n\t    },\n\n\t    addBlock: function(name, block) {\n\t        this.blocks[name] = this.blocks[name] || [];\n\t        this.blocks[name].push(block);\n\t        return this;\n\t    },\n\n\t    getBlock: function(name) {\n\t        if(!this.blocks[name]) {\n\t            throw new Error('unknown block \"' + name + '\"');\n\t        }\n\n\t        return this.blocks[name][0];\n\t    },\n\n\t    getSuper: function(env, name, block, frame, runtime, cb) {\n\t        var idx = lib.indexOf(this.blocks[name] || [], block);\n\t        var blk = this.blocks[name][idx + 1];\n\t        var context = this;\n\n\t        if(idx === -1 || !blk) {\n\t            throw new Error('no super block available for \"' + name + '\"');\n\t        }\n\n\t        blk(env, context, frame, runtime, cb);\n\t    },\n\n\t    addExport: function(name) {\n\t        this.exported.push(name);\n\t    },\n\n\t    getExported: function() {\n\t        var exported = {};\n\t        for(var i=0; i<this.exported.length; i++) {\n\t            var name = this.exported[i];\n\t            exported[name] = this.ctx[name];\n\t        }\n\t        return exported;\n\t    }\n\t});\n\n\tTemplate = Obj.extend({\n\t    init: function (src, env, path, eagerCompile) {\n\t        this.env = env || new Environment();\n\n\t        if(lib.isObject(src)) {\n\t            switch(src.type) {\n\t            case 'code': this.tmplProps = src.obj; break;\n\t            case 'string': this.tmplStr = src.obj; break;\n\t            }\n\t        }\n\t        else if(lib.isString(src)) {\n\t            this.tmplStr = src;\n\t        }\n\t        else {\n\t            throw new Error('src must be a string or an object describing ' +\n\t                            'the source');\n\t        }\n\n\t        this.path = path;\n\n\t        if(eagerCompile) {\n\t            var _this = this;\n\t            try {\n\t                _this._compile();\n\t            }\n\t            catch(err) {\n\t                throw lib.prettifyError(this.path, this.env.opts.dev, err);\n\t            }\n\t        }\n\t        else {\n\t            this.compiled = false;\n\t        }\n\t    },\n\n\t    render: function(ctx, parentFrame, cb) {\n\t        if (typeof ctx === 'function') {\n\t            cb = ctx;\n\t            ctx = {};\n\t        }\n\t        else if (typeof parentFrame === 'function') {\n\t            cb = parentFrame;\n\t            parentFrame = null;\n\t        }\n\n\t        var forceAsync = true;\n\t        if(parentFrame) {\n\t            // If there is a frame, we are being called from internal\n\t            // code of another template, and the internal system\n\t            // depends on the sync/async nature of the parent template\n\t            // to be inherited, so force an async callback\n\t            forceAsync = false;\n\t        }\n\n\t        var _this = this;\n\t        // Catch compile errors for async rendering\n\t        try {\n\t            _this.compile();\n\t        } catch (_err) {\n\t            var err = lib.prettifyError(this.path, this.env.opts.dev, _err);\n\t            if (cb) return callbackAsap(cb, err);\n\t            else throw err;\n\t        }\n\n\t        var context = new Context(ctx || {}, _this.blocks, _this.env);\n\t        var frame = parentFrame ? parentFrame.push(true) : new Frame();\n\t        frame.topLevel = true;\n\t        var syncResult = null;\n\n\t        _this.rootRenderFunc(\n\t            _this.env,\n\t            context,\n\t            frame || new Frame(),\n\t            runtime,\n\t            function(err, res) {\n\t                if(err) {\n\t                    err = lib.prettifyError(_this.path, _this.env.opts.dev, err);\n\t                }\n\n\t                if(cb) {\n\t                    if(forceAsync) {\n\t                        callbackAsap(cb, err, res);\n\t                    }\n\t                    else {\n\t                        cb(err, res);\n\t                    }\n\t                }\n\t                else {\n\t                    if(err) { throw err; }\n\t                    syncResult = res;\n\t                }\n\t            }\n\t        );\n\n\t        return syncResult;\n\t    },\n\n\n\t    getExported: function(ctx, parentFrame, cb) {\n\t        if (typeof ctx === 'function') {\n\t            cb = ctx;\n\t            ctx = {};\n\t        }\n\n\t        if (typeof parentFrame === 'function') {\n\t            cb = parentFrame;\n\t            parentFrame = null;\n\t        }\n\n\t        // Catch compile errors for async rendering\n\t        try {\n\t            this.compile();\n\t        } catch (e) {\n\t            if (cb) return cb(e);\n\t            else throw e;\n\t        }\n\n\t        var frame = parentFrame ? parentFrame.push() : new Frame();\n\t        frame.topLevel = true;\n\n\t        // Run the rootRenderFunc to populate the context with exported vars\n\t        var context = new Context(ctx || {}, this.blocks, this.env);\n\t        this.rootRenderFunc(this.env,\n\t                            context,\n\t                            frame,\n\t                            runtime,\n\t                            function(err) {\n\t        \t\t        if ( err ) {\n\t        \t\t\t    cb(err, null);\n\t        \t\t        } else {\n\t        \t\t\t    cb(null, context.getExported());\n\t        \t\t        }\n\t                            });\n\t    },\n\n\t    compile: function() {\n\t        if(!this.compiled) {\n\t            this._compile();\n\t        }\n\t    },\n\n\t    _compile: function() {\n\t        var props;\n\n\t        if(this.tmplProps) {\n\t            props = this.tmplProps;\n\t        }\n\t        else {\n\t            var source = compiler.compile(this.tmplStr,\n\t                                          this.env.asyncFilters,\n\t                                          this.env.extensionsList,\n\t                                          this.path,\n\t                                          this.env.opts);\n\n\t            /* jslint evil: true */\n\t            var func = new Function(source);\n\t            props = func();\n\t        }\n\n\t        this.blocks = this._getBlocks(props);\n\t        this.rootRenderFunc = props.root;\n\t        this.compiled = true;\n\t    },\n\n\t    _getBlocks: function(props) {\n\t        var blocks = {};\n\n\t        for(var k in props) {\n\t            if(k.slice(0, 2) === 'b_') {\n\t                blocks[k.slice(2)] = props[k];\n\t            }\n\t        }\n\n\t        return blocks;\n\t    }\n\t});\n\n\tmodule.exports = {\n\t    Environment: Environment,\n\t    Template: Template\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\t// rawAsap provides everything we need except exception management.\n\tvar rawAsap = __webpack_require__(5);\n\t// RawTasks are recycled to reduce GC churn.\n\tvar freeTasks = [];\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tvar pendingErrors = [];\n\tvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\n\tfunction throwFirstError() {\n\t    if (pendingErrors.length) {\n\t        throw pendingErrors.shift();\n\t    }\n\t}\n\n\t/**\n\t * Calls a task as soon as possible after returning, in its own event, with priority\n\t * over other events like animation, reflow, and repaint. An error thrown from an\n\t * event will not interrupt, nor even substantially slow down the processing of\n\t * other events, but will be rather postponed to a lower priority event.\n\t * @param {{call}} task A callable object, typically a function that takes no\n\t * arguments.\n\t */\n\tmodule.exports = asap;\n\tfunction asap(task) {\n\t    var rawTask;\n\t    if (freeTasks.length) {\n\t        rawTask = freeTasks.pop();\n\t    } else {\n\t        rawTask = new RawTask();\n\t    }\n\t    rawTask.task = task;\n\t    rawAsap(rawTask);\n\t}\n\n\t// We wrap tasks with recyclable task objects.  A task object implements\n\t// `call`, just like a function.\n\tfunction RawTask() {\n\t    this.task = null;\n\t}\n\n\t// The sole purpose of wrapping the task is to catch the exception and recycle\n\t// the task object after its single use.\n\tRawTask.prototype.call = function () {\n\t    try {\n\t        this.task.call();\n\t    } catch (error) {\n\t        if (asap.onerror) {\n\t            // This hook exists purely for testing purposes.\n\t            // Its name will be periodically randomized to break any code that\n\t            // depends on its existence.\n\t            asap.onerror(error);\n\t        } else {\n\t            // In a web browser, exceptions are not fatal. However, to avoid\n\t            // slowing down the queue of pending tasks, we rethrow the error in a\n\t            // lower priority turn.\n\t            pendingErrors.push(error);\n\t            requestErrorThrow();\n\t        }\n\t    } finally {\n\t        this.task = null;\n\t        freeTasks[freeTasks.length] = this;\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\tvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\t// A simple class system, more documentation to come\n\n\tfunction extend(cls, name, props) {\n\t    // This does that same thing as Object.create, but with support for IE8\n\t    var F = function() {};\n\t    F.prototype = cls.prototype;\n\t    var prototype = new F();\n\n\t    // jshint undef: false\n\t    var fnTest = /xyz/.test(function(){ xyz; }) ? /\\bparent\\b/ : /.*/;\n\t    props = props || {};\n\n\t    for(var k in props) {\n\t        var src = props[k];\n\t        var parent = prototype[k];\n\n\t        if(typeof parent === 'function' &&\n\t           typeof src === 'function' &&\n\t           fnTest.test(src)) {\n\t            /*jshint -W083 */\n\t            prototype[k] = (function (src, parent) {\n\t                return function() {\n\t                    // Save the current parent method\n\t                    var tmp = this.parent;\n\n\t                    // Set parent to the previous method, call, and restore\n\t                    this.parent = parent;\n\t                    var res = src.apply(this, arguments);\n\t                    this.parent = tmp;\n\n\t                    return res;\n\t                };\n\t            })(src, parent);\n\t        }\n\t        else {\n\t            prototype[k] = src;\n\t        }\n\t    }\n\n\t    prototype.typename = name;\n\n\t    var new_cls = function() {\n\t        if(prototype.init) {\n\t            prototype.init.apply(this, arguments);\n\t        }\n\t    };\n\n\t    new_cls.prototype = prototype;\n\t    new_cls.prototype.constructor = new_cls;\n\n\t    new_cls.extend = function(name, props) {\n\t        if(typeof name === 'object') {\n\t            props = name;\n\t            name = 'anonymous';\n\t        }\n\t        return extend(new_cls, name, props);\n\t    };\n\n\t    return new_cls;\n\t}\n\n\tmodule.exports = extend(Object, 'Object', {});\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar lib = __webpack_require__(1);\n\tvar r = __webpack_require__(8);\n\n\tfunction normalize(value, defaultValue) {\n\t    if(value === null || value === undefined || value === false) {\n\t        return defaultValue;\n\t    }\n\t    return value;\n\t}\n\n\tvar filters = {\n\t    abs: function(n) {\n\t        return Math.abs(n);\n\t    },\n\n\t    batch: function(arr, linecount, fill_with) {\n\t        var i;\n\t        var res = [];\n\t        var tmp = [];\n\n\t        for(i = 0; i < arr.length; i++) {\n\t            if(i % linecount === 0 && tmp.length) {\n\t                res.push(tmp);\n\t                tmp = [];\n\t            }\n\n\t            tmp.push(arr[i]);\n\t        }\n\n\t        if(tmp.length) {\n\t            if(fill_with) {\n\t                for(i = tmp.length; i < linecount; i++) {\n\t                    tmp.push(fill_with);\n\t                }\n\t            }\n\n\t            res.push(tmp);\n\t        }\n\n\t        return res;\n\t    },\n\n\t    capitalize: function(str) {\n\t        str = normalize(str, '');\n\t        var ret = str.toLowerCase();\n\t        return r.copySafeness(str, ret.charAt(0).toUpperCase() + ret.slice(1));\n\t    },\n\n\t    center: function(str, width) {\n\t        str = normalize(str, '');\n\t        width = width || 80;\n\n\t        if(str.length >= width) {\n\t            return str;\n\t        }\n\n\t        var spaces = width - str.length;\n\t        var pre = lib.repeat(' ', spaces/2 - spaces % 2);\n\t        var post = lib.repeat(' ', spaces/2);\n\t        return r.copySafeness(str, pre + str + post);\n\t    },\n\n\t    'default': function(val, def, bool) {\n\t        if(bool) {\n\t            return val ? val : def;\n\t        }\n\t        else {\n\t            return (val !== undefined) ? val : def;\n\t        }\n\t    },\n\n\t    dictsort: function(val, case_sensitive, by) {\n\t        if (!lib.isObject(val)) {\n\t            throw new lib.TemplateError('dictsort filter: val must be an object');\n\t        }\n\n\t        var array = [];\n\t        for (var k in val) {\n\t            // deliberately include properties from the object's prototype\n\t            array.push([k,val[k]]);\n\t        }\n\n\t        var si;\n\t        if (by === undefined || by === 'key') {\n\t            si = 0;\n\t        } else if (by === 'value') {\n\t            si = 1;\n\t        } else {\n\t            throw new lib.TemplateError(\n\t                'dictsort filter: You can only sort by either key or value');\n\t        }\n\n\t        array.sort(function(t1, t2) {\n\t            var a = t1[si];\n\t            var b = t2[si];\n\n\t            if (!case_sensitive) {\n\t                if (lib.isString(a)) {\n\t                    a = a.toUpperCase();\n\t                }\n\t                if (lib.isString(b)) {\n\t                    b = b.toUpperCase();\n\t                }\n\t            }\n\n\t            return a > b ? 1 : (a === b ? 0 : -1);\n\t        });\n\n\t        return array;\n\t    },\n\n\t    dump: function(obj) {\n\t        return JSON.stringify(obj);\n\t    },\n\n\t    escape: function(str) {\n\t        if(str instanceof r.SafeString) {\n\t            return str;\n\t        }\n\t        str = (str === null || str === undefined) ? '' : str;\n\t        return r.markSafe(lib.escape(str.toString()));\n\t    },\n\n\t    safe: function(str) {\n\t        if (str instanceof r.SafeString) {\n\t            return str;\n\t        }\n\t        str = (str === null || str === undefined) ? '' : str;\n\t        return r.markSafe(str.toString());\n\t    },\n\n\t    first: function(arr) {\n\t        return arr[0];\n\t    },\n\n\t    groupby: function(arr, attr) {\n\t        return lib.groupBy(arr, attr);\n\t    },\n\n\t    indent: function(str, width, indentfirst) {\n\t        str = normalize(str, '');\n\n\t        if (str === '') return '';\n\n\t        width = width || 4;\n\t        var res = '';\n\t        var lines = str.split('\\n');\n\t        var sp = lib.repeat(' ', width);\n\n\t        for(var i=0; i<lines.length; i++) {\n\t            if(i === 0 && !indentfirst) {\n\t                res += lines[i] + '\\n';\n\t            }\n\t            else {\n\t                res += sp + lines[i] + '\\n';\n\t            }\n\t        }\n\n\t        return r.copySafeness(str, res);\n\t    },\n\n\t    join: function(arr, del, attr) {\n\t        del = del || '';\n\n\t        if(attr) {\n\t            arr = lib.map(arr, function(v) {\n\t                return v[attr];\n\t            });\n\t        }\n\n\t        return arr.join(del);\n\t    },\n\n\t    last: function(arr) {\n\t        return arr[arr.length-1];\n\t    },\n\n\t    length: function(val) {\n\t        var value = normalize(val, '');\n\n\t        if(value !== undefined) {\n\t            if(\n\t                (typeof Map === 'function' && value instanceof Map) ||\n\t                (typeof Set === 'function' && value instanceof Set)\n\t            ) {\n\t                // ECMAScript 2015 Maps and Sets\n\t                return value.size;\n\t            }\n\t            if(lib.isObject(value) && !(value instanceof r.SafeString)) {\n\t                // Objects (besides SafeStrings), non-primative Arrays\n\t                return Object.keys(value).length;\n\t            }\n\t            return value.length;\n\t        }\n\t        return 0;\n\t    },\n\n\t    list: function(val) {\n\t        if(lib.isString(val)) {\n\t            return val.split('');\n\t        }\n\t        else if(lib.isObject(val)) {\n\t            var keys = [];\n\n\t            if(Object.keys) {\n\t                keys = Object.keys(val);\n\t            }\n\t            else {\n\t                for(var k in val) {\n\t                    keys.push(k);\n\t                }\n\t            }\n\n\t            return lib.map(keys, function(k) {\n\t                return { key: k,\n\t                         value: val[k] };\n\t            });\n\t        }\n\t        else if(lib.isArray(val)) {\n\t          return val;\n\t        }\n\t        else {\n\t            throw new lib.TemplateError('list filter: type not iterable');\n\t        }\n\t    },\n\n\t    lower: function(str) {\n\t        str = normalize(str, '');\n\t        return str.toLowerCase();\n\t    },\n\n\t    random: function(arr) {\n\t        return arr[Math.floor(Math.random() * arr.length)];\n\t    },\n\n\t    rejectattr: function(arr, attr) {\n\t      return arr.filter(function (item) {\n\t        return !item[attr];\n\t      });\n\t    },\n\n\t    selectattr: function(arr, attr) {\n\t      return arr.filter(function (item) {\n\t        return !!item[attr];\n\t      });\n\t    },\n\n\t    replace: function(str, old, new_, maxCount) {\n\t        var originalStr = str;\n\n\t        if (old instanceof RegExp) {\n\t            return str.replace(old, new_);\n\t        }\n\n\t        if(typeof maxCount === 'undefined'){\n\t            maxCount = -1;\n\t        }\n\n\t        var res = '';  // Output\n\n\t        // Cast Numbers in the search term to string\n\t        if(typeof old === 'number'){\n\t            old = old + '';\n\t        }\n\t        else if(typeof old !== 'string') {\n\t            // If it is something other than number or string,\n\t            // return the original string\n\t            return str;\n\t        }\n\n\t        // Cast numbers in the replacement to string\n\t        if(typeof str === 'number'){\n\t            str = str + '';\n\t        }\n\n\t        // If by now, we don't have a string, throw it back\n\t        if(typeof str !== 'string' && !(str instanceof r.SafeString)){\n\t            return str;\n\t        }\n\n\t        // ShortCircuits\n\t        if(old === ''){\n\t            // Mimic the python behaviour: empty string is replaced\n\t            // by replacement e.g. \"abc\"|replace(\"\", \".\") -> .a.b.c.\n\t            res = new_ + str.split('').join(new_) + new_;\n\t            return r.copySafeness(str, res);\n\t        }\n\n\t        var nextIndex = str.indexOf(old);\n\t        // if # of replacements to perform is 0, or the string to does\n\t        // not contain the old value, return the string\n\t        if(maxCount === 0 || nextIndex === -1){\n\t            return str;\n\t        }\n\n\t        var pos = 0;\n\t        var count = 0; // # of replacements made\n\n\t        while(nextIndex  > -1 && (maxCount === -1 || count < maxCount)){\n\t            // Grab the next chunk of src string and add it with the\n\t            // replacement, to the result\n\t            res += str.substring(pos, nextIndex) + new_;\n\t            // Increment our pointer in the src string\n\t            pos = nextIndex + old.length;\n\t            count++;\n\t            // See if there are any more replacements to be made\n\t            nextIndex = str.indexOf(old, pos);\n\t        }\n\n\t        // We've either reached the end, or done the max # of\n\t        // replacements, tack on any remaining string\n\t        if(pos < str.length) {\n\t            res += str.substring(pos);\n\t        }\n\n\t        return r.copySafeness(originalStr, res);\n\t    },\n\n\t    reverse: function(val) {\n\t        var arr;\n\t        if(lib.isString(val)) {\n\t            arr = filters.list(val);\n\t        }\n\t        else {\n\t            // Copy it\n\t            arr = lib.map(val, function(v) { return v; });\n\t        }\n\n\t        arr.reverse();\n\n\t        if(lib.isString(val)) {\n\t            return r.copySafeness(val, arr.join(''));\n\t        }\n\t        return arr;\n\t    },\n\n\t    round: function(val, precision, method) {\n\t        precision = precision || 0;\n\t        var factor = Math.pow(10, precision);\n\t        var rounder;\n\n\t        if(method === 'ceil') {\n\t            rounder = Math.ceil;\n\t        }\n\t        else if(method === 'floor') {\n\t            rounder = Math.floor;\n\t        }\n\t        else {\n\t            rounder = Math.round;\n\t        }\n\n\t        return rounder(val * factor) / factor;\n\t    },\n\n\t    slice: function(arr, slices, fillWith) {\n\t        var sliceLength = Math.floor(arr.length / slices);\n\t        var extra = arr.length % slices;\n\t        var offset = 0;\n\t        var res = [];\n\n\t        for(var i=0; i<slices; i++) {\n\t            var start = offset + i * sliceLength;\n\t            if(i < extra) {\n\t                offset++;\n\t            }\n\t            var end = offset + (i + 1) * sliceLength;\n\n\t            var slice = arr.slice(start, end);\n\t            if(fillWith && i >= extra) {\n\t                slice.push(fillWith);\n\t            }\n\t            res.push(slice);\n\t        }\n\n\t        return res;\n\t    },\n\n\t    sum: function(arr, attr, start) {\n\t        var sum = 0;\n\n\t        if(typeof start === 'number'){\n\t            sum += start;\n\t        }\n\n\t        if(attr) {\n\t            arr = lib.map(arr, function(v) {\n\t                return v[attr];\n\t            });\n\t        }\n\n\t        for(var i = 0; i < arr.length; i++) {\n\t            sum += arr[i];\n\t        }\n\n\t        return sum;\n\t    },\n\n\t    sort: r.makeMacro(['value', 'reverse', 'case_sensitive', 'attribute'], [], function(arr, reverse, caseSens, attr) {\n\t         // Copy it\n\t        arr = lib.map(arr, function(v) { return v; });\n\n\t        arr.sort(function(a, b) {\n\t            var x, y;\n\n\t            if(attr) {\n\t                x = a[attr];\n\t                y = b[attr];\n\t            }\n\t            else {\n\t                x = a;\n\t                y = b;\n\t            }\n\n\t            if(!caseSens && lib.isString(x) && lib.isString(y)) {\n\t                x = x.toLowerCase();\n\t                y = y.toLowerCase();\n\t            }\n\n\t            if(x < y) {\n\t                return reverse ? 1 : -1;\n\t            }\n\t            else if(x > y) {\n\t                return reverse ? -1: 1;\n\t            }\n\t            else {\n\t                return 0;\n\t            }\n\t        });\n\n\t        return arr;\n\t    }),\n\n\t    string: function(obj) {\n\t        return r.copySafeness(obj, obj);\n\t    },\n\n\t    striptags: function(input, preserve_linebreaks) {\n\t        input = normalize(input, '');\n\t        preserve_linebreaks = preserve_linebreaks || false;\n\t        var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>|<!--[\\s\\S]*?-->/gi;\n\t        var trimmedInput = filters.trim(input.replace(tags, ''));\n\t        var res = '';\n\t        if (preserve_linebreaks) {\n\t            res = trimmedInput\n\t                .replace(/^ +| +$/gm, '')     // remove leading and trailing spaces\n\t                .replace(/ +/g, ' ')          // squash adjacent spaces\n\t                .replace(/(\\r\\n)/g, '\\n')     // normalize linebreaks (CRLF -> LF)\n\t                .replace(/\\n\\n\\n+/g, '\\n\\n'); // squash abnormal adjacent linebreaks\n\t        } else {\n\t            res = trimmedInput.replace(/\\s+/gi, ' ');\n\t        }\n\t        return r.copySafeness(input, res);\n\t    },\n\n\t    title: function(str) {\n\t        str = normalize(str, '');\n\t        var words = str.split(' ');\n\t        for(var i = 0; i < words.length; i++) {\n\t            words[i] = filters.capitalize(words[i]);\n\t        }\n\t        return r.copySafeness(str, words.join(' '));\n\t    },\n\n\t    trim: function(str) {\n\t        return r.copySafeness(str, str.replace(/^\\s*|\\s*$/g, ''));\n\t    },\n\n\t    truncate: function(input, length, killwords, end) {\n\t        var orig = input;\n\t        input = normalize(input, '');\n\t        length = length || 255;\n\n\t        if (input.length <= length)\n\t            return input;\n\n\t        if (killwords) {\n\t            input = input.substring(0, length);\n\t        } else {\n\t            var idx = input.lastIndexOf(' ', length);\n\t            if(idx === -1) {\n\t                idx = length;\n\t            }\n\n\t            input = input.substring(0, idx);\n\t        }\n\n\t        input += (end !== undefined && end !== null) ? end : '...';\n\t        return r.copySafeness(orig, input);\n\t    },\n\n\t    upper: function(str) {\n\t        str = normalize(str, '');\n\t        return str.toUpperCase();\n\t    },\n\n\t    urlencode: function(obj) {\n\t        var enc = encodeURIComponent;\n\t        if (lib.isString(obj)) {\n\t            return enc(obj);\n\t        } else {\n\t            var parts;\n\t            if (lib.isArray(obj)) {\n\t                parts = obj.map(function(item) {\n\t                    return enc(item[0]) + '=' + enc(item[1]);\n\t                });\n\t            } else {\n\t                parts = [];\n\t                for (var k in obj) {\n\t                    if (obj.hasOwnProperty(k)) {\n\t                        parts.push(enc(k) + '=' + enc(obj[k]));\n\t                    }\n\t                }\n\t            }\n\t            return parts.join('&');\n\t        }\n\t    },\n\n\t    urlize: function(str, length, nofollow) {\n\t        if (isNaN(length)) length = Infinity;\n\n\t        var noFollowAttr = (nofollow === true ? ' rel=\"nofollow\"' : '');\n\n\t        // For the jinja regexp, see\n\t        // https://github.com/mitsuhiko/jinja2/blob/f15b814dcba6aa12bc74d1f7d0c881d55f7126be/jinja2/utils.py#L20-L23\n\t        var puncRE = /^(?:\\(|<|&lt;)?(.*?)(?:\\.|,|\\)|\\n|&gt;)?$/;\n\t        // from http://blog.gerv.net/2011/05/html5_email_address_regexp/\n\t        var emailRE = /^[\\w.!#$%&'*+\\-\\/=?\\^`{|}~]+@[a-z\\d\\-]+(\\.[a-z\\d\\-]+)+$/i;\n\t        var httpHttpsRE = /^https?:\\/\\/.*$/;\n\t        var wwwRE = /^www\\./;\n\t        var tldRE = /\\.(?:org|net|com)(?:\\:|\\/|$)/;\n\n\t        var words = str.split(/(\\s+)/).filter(function(word) {\n\t          // If the word has no length, bail. This can happen for str with\n\t          // trailing whitespace.\n\t          return word && word.length;\n\t        }).map(function(word) {\n\t          var matches = word.match(puncRE);\n\t          var possibleUrl = matches && matches[1] || word;\n\n\t          // url that starts with http or https\n\t          if (httpHttpsRE.test(possibleUrl))\n\t            return '<a href=\"' + possibleUrl + '\"' + noFollowAttr + '>' + possibleUrl.substr(0, length) + '</a>';\n\n\t          // url that starts with www.\n\t          if (wwwRE.test(possibleUrl))\n\t            return '<a href=\"http://' + possibleUrl + '\"' + noFollowAttr + '>' + possibleUrl.substr(0, length) + '</a>';\n\n\t          // an email address of the form username@domain.tld\n\t          if (emailRE.test(possibleUrl))\n\t            return '<a href=\"mailto:' + possibleUrl + '\">' + possibleUrl + '</a>';\n\n\t          // url that ends in .com, .org or .net that is not an email address\n\t          if (tldRE.test(possibleUrl))\n\t            return '<a href=\"http://' + possibleUrl + '\"' + noFollowAttr + '>' + possibleUrl.substr(0, length) + '</a>';\n\n\t          return word;\n\n\t        });\n\n\t        return words.join('');\n\t    },\n\n\t    wordcount: function(str) {\n\t        str = normalize(str, '');\n\t        var words = (str) ? str.match(/\\w+/g) : null;\n\t        return (words) ? words.length : null;\n\t    },\n\n\t    'float': function(val, def) {\n\t        var res = parseFloat(val);\n\t        return isNaN(res) ? def : res;\n\t    },\n\n\t    'int': function(val, def) {\n\t        var res = parseInt(val, 10);\n\t        return isNaN(res) ? def : res;\n\t    }\n\t};\n\n\t// Aliases\n\tfilters.d = filters['default'];\n\tfilters.e = filters.escape;\n\n\tmodule.exports = filters;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar lib = __webpack_require__(1);\n\tvar Obj = __webpack_require__(6);\n\n\t// Frames keep track of scoping both at compile-time and run-time so\n\t// we know how to access variables. Block tags can introduce special\n\t// variables, for example.\n\tvar Frame = Obj.extend({\n\t    init: function(parent, isolateWrites) {\n\t        this.variables = {};\n\t        this.parent = parent;\n\t        this.topLevel = false;\n\t        // if this is true, writes (set) should never propagate upwards past\n\t        // this frame to its parent (though reads may).\n\t        this.isolateWrites = isolateWrites;\n\t    },\n\n\t    set: function(name, val, resolveUp) {\n\t        // Allow variables with dots by automatically creating the\n\t        // nested structure\n\t        var parts = name.split('.');\n\t        var obj = this.variables;\n\t        var frame = this;\n\n\t        if(resolveUp) {\n\t            if((frame = this.resolve(parts[0], true))) {\n\t                frame.set(name, val);\n\t                return;\n\t            }\n\t        }\n\n\t        for(var i=0; i<parts.length - 1; i++) {\n\t            var id = parts[i];\n\n\t            if(!obj[id]) {\n\t                obj[id] = {};\n\t            }\n\t            obj = obj[id];\n\t        }\n\n\t        obj[parts[parts.length - 1]] = val;\n\t    },\n\n\t    get: function(name) {\n\t        var val = this.variables[name];\n\t        if(val !== undefined && val !== null) {\n\t            return val;\n\t        }\n\t        return null;\n\t    },\n\n\t    lookup: function(name) {\n\t        var p = this.parent;\n\t        var val = this.variables[name];\n\t        if(val !== undefined && val !== null) {\n\t            return val;\n\t        }\n\t        return p && p.lookup(name);\n\t    },\n\n\t    resolve: function(name, forWrite) {\n\t        var p = (forWrite && this.isolateWrites) ? undefined : this.parent;\n\t        var val = this.variables[name];\n\t        if(val !== undefined && val !== null) {\n\t            return this;\n\t        }\n\t        return p && p.resolve(name);\n\t    },\n\n\t    push: function(isolateWrites) {\n\t        return new Frame(this, isolateWrites);\n\t    },\n\n\t    pop: function() {\n\t        return this.parent;\n\t    }\n\t});\n\n\tfunction makeMacro(argNames, kwargNames, func) {\n\t    return function() {\n\t        var argCount = numArgs(arguments);\n\t        var args;\n\t        var kwargs = getKeywordArgs(arguments);\n\t        var i;\n\n\t        if(argCount > argNames.length) {\n\t            args = Array.prototype.slice.call(arguments, 0, argNames.length);\n\n\t            // Positional arguments that should be passed in as\n\t            // keyword arguments (essentially default values)\n\t            var vals = Array.prototype.slice.call(arguments, args.length, argCount);\n\t            for(i = 0; i < vals.length; i++) {\n\t                if(i < kwargNames.length) {\n\t                    kwargs[kwargNames[i]] = vals[i];\n\t                }\n\t            }\n\n\t            args.push(kwargs);\n\t        }\n\t        else if(argCount < argNames.length) {\n\t            args = Array.prototype.slice.call(arguments, 0, argCount);\n\n\t            for(i = argCount; i < argNames.length; i++) {\n\t                var arg = argNames[i];\n\n\t                // Keyword arguments that should be passed as\n\t                // positional arguments, i.e. the caller explicitly\n\t                // used the name of a positional arg\n\t                args.push(kwargs[arg]);\n\t                delete kwargs[arg];\n\t            }\n\n\t            args.push(kwargs);\n\t        }\n\t        else {\n\t            args = arguments;\n\t        }\n\n\t        return func.apply(this, args);\n\t    };\n\t}\n\n\tfunction makeKeywordArgs(obj) {\n\t    obj.__keywords = true;\n\t    return obj;\n\t}\n\n\tfunction getKeywordArgs(args) {\n\t    var len = args.length;\n\t    if(len) {\n\t        var lastArg = args[len - 1];\n\t        if(lastArg && lastArg.hasOwnProperty('__keywords')) {\n\t            return lastArg;\n\t        }\n\t    }\n\t    return {};\n\t}\n\n\tfunction numArgs(args) {\n\t    var len = args.length;\n\t    if(len === 0) {\n\t        return 0;\n\t    }\n\n\t    var lastArg = args[len - 1];\n\t    if(lastArg && lastArg.hasOwnProperty('__keywords')) {\n\t        return len - 1;\n\t    }\n\t    else {\n\t        return len;\n\t    }\n\t}\n\n\t// A SafeString object indicates that the string should not be\n\t// autoescaped. This happens magically because autoescaping only\n\t// occurs on primitive string objects.\n\tfunction SafeString(val) {\n\t    if(typeof val !== 'string') {\n\t        return val;\n\t    }\n\n\t    this.val = val;\n\t    this.length = val.length;\n\t}\n\n\tSafeString.prototype = Object.create(String.prototype, {\n\t    length: { writable: true, configurable: true, value: 0 }\n\t});\n\tSafeString.prototype.valueOf = function() {\n\t    return this.val;\n\t};\n\tSafeString.prototype.toString = function() {\n\t    return this.val;\n\t};\n\n\tfunction copySafeness(dest, target) {\n\t    if(dest instanceof SafeString) {\n\t        return new SafeString(target);\n\t    }\n\t    return target.toString();\n\t}\n\n\tfunction markSafe(val) {\n\t    var type = typeof val;\n\n\t    if(type === 'string') {\n\t        return new SafeString(val);\n\t    }\n\t    else if(type !== 'function') {\n\t        return val;\n\t    }\n\t    else {\n\t        return function() {\n\t            var ret = val.apply(this, arguments);\n\n\t            if(typeof ret === 'string') {\n\t                return new SafeString(ret);\n\t            }\n\n\t            return ret;\n\t        };\n\t    }\n\t}\n\n\tfunction suppressValue(val, autoescape) {\n\t    val = (val !== undefined && val !== null) ? val : '';\n\n\t    if(autoescape && !(val instanceof SafeString)) {\n\t        val = lib.escape(val.toString());\n\t    }\n\n\t    return val;\n\t}\n\n\tfunction ensureDefined(val, lineno, colno) {\n\t    if(val === null || val === undefined) {\n\t        throw new lib.TemplateError(\n\t            'attempted to output null or undefined value',\n\t            lineno + 1,\n\t            colno + 1\n\t        );\n\t    }\n\t    return val;\n\t}\n\n\tfunction memberLookup(obj, val) {\n\t    obj = obj || {};\n\n\t    if(typeof obj[val] === 'function') {\n\t        return function() {\n\t            return obj[val].apply(obj, arguments);\n\t        };\n\t    }\n\n\t    return obj[val];\n\t}\n\n\tfunction callWrap(obj, name, context, args) {\n\t    if(!obj) {\n\t        throw new Error('Unable to call `' + name + '`, which is undefined or falsey');\n\t    }\n\t    else if(typeof obj !== 'function') {\n\t        throw new Error('Unable to call `' + name + '`, which is not a function');\n\t    }\n\n\t    // jshint validthis: true\n\t    return obj.apply(context, args);\n\t}\n\n\tfunction contextOrFrameLookup(context, frame, name) {\n\t    var val = frame.lookup(name);\n\t    return (val !== undefined && val !== null) ?\n\t        val :\n\t        context.lookup(name);\n\t}\n\n\tfunction handleError(error, lineno, colno) {\n\t    if(error.lineno) {\n\t        return error;\n\t    }\n\t    else {\n\t        return new lib.TemplateError(error, lineno, colno);\n\t    }\n\t}\n\n\tfunction asyncEach(arr, dimen, iter, cb) {\n\t    if(lib.isArray(arr)) {\n\t        var len = arr.length;\n\n\t        lib.asyncIter(arr, function(item, i, next) {\n\t            switch(dimen) {\n\t            case 1: iter(item, i, len, next); break;\n\t            case 2: iter(item[0], item[1], i, len, next); break;\n\t            case 3: iter(item[0], item[1], item[2], i, len, next); break;\n\t            default:\n\t                item.push(i, next);\n\t                iter.apply(this, item);\n\t            }\n\t        }, cb);\n\t    }\n\t    else {\n\t        lib.asyncFor(arr, function(key, val, i, len, next) {\n\t            iter(key, val, i, len, next);\n\t        }, cb);\n\t    }\n\t}\n\n\tfunction asyncAll(arr, dimen, func, cb) {\n\t    var finished = 0;\n\t    var len, i;\n\t    var outputArr;\n\n\t    function done(i, output) {\n\t        finished++;\n\t        outputArr[i] = output;\n\n\t        if(finished === len) {\n\t            cb(null, outputArr.join(''));\n\t        }\n\t    }\n\n\t    if(lib.isArray(arr)) {\n\t        len = arr.length;\n\t        outputArr = new Array(len);\n\n\t        if(len === 0) {\n\t            cb(null, '');\n\t        }\n\t        else {\n\t            for(i = 0; i < arr.length; i++) {\n\t                var item = arr[i];\n\n\t                switch(dimen) {\n\t                case 1: func(item, i, len, done); break;\n\t                case 2: func(item[0], item[1], i, len, done); break;\n\t                case 3: func(item[0], item[1], item[2], i, len, done); break;\n\t                default:\n\t                    item.push(i, done);\n\t                    // jshint validthis: true\n\t                    func.apply(this, item);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    else {\n\t        var keys = lib.keys(arr);\n\t        len = keys.length;\n\t        outputArr = new Array(len);\n\n\t        if(len === 0) {\n\t            cb(null, '');\n\t        }\n\t        else {\n\t            for(i = 0; i < keys.length; i++) {\n\t                var k = keys[i];\n\t                func(k, arr[k], i, len, done);\n\t            }\n\t        }\n\t    }\n\t}\n\n\tmodule.exports = {\n\t    Frame: Frame,\n\t    makeMacro: makeMacro,\n\t    makeKeywordArgs: makeKeywordArgs,\n\t    numArgs: numArgs,\n\t    suppressValue: suppressValue,\n\t    ensureDefined: ensureDefined,\n\t    memberLookup: memberLookup,\n\t    contextOrFrameLookup: contextOrFrameLookup,\n\t    callWrap: callWrap,\n\t    handleError: handleError,\n\t    isArray: lib.isArray,\n\t    keys: lib.keys,\n\t    SafeString: SafeString,\n\t    copySafeness: copySafeness,\n\t    markSafe: markSafe,\n\t    asyncEach: asyncEach,\n\t    asyncAll: asyncAll,\n\t    inOperator: lib.inOperator\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tfunction cycler(items) {\n\t    var index = -1;\n\n\t    return {\n\t        current: null,\n\t        reset: function() {\n\t            index = -1;\n\t            this.current = null;\n\t        },\n\n\t        next: function() {\n\t            index++;\n\t            if(index >= items.length) {\n\t                index = 0;\n\t            }\n\n\t            this.current = items[index];\n\t            return this.current;\n\t        },\n\t    };\n\n\t}\n\n\tfunction joiner(sep) {\n\t    sep = sep || ',';\n\t    var first = true;\n\n\t    return function() {\n\t        var val = first ? '' : sep;\n\t        first = false;\n\t        return val;\n\t    };\n\t}\n\n\t// Making this a function instead so it returns a new object\n\t// each time it's called. That way, if something like an environment\n\t// uses it, they will each have their own copy.\n\tfunction globals() {\n\t    return {\n\t        range: function(start, stop, step) {\n\t            if(typeof stop === 'undefined') {\n\t                stop = start;\n\t                start = 0;\n\t                step = 1;\n\t            }\n\t            else if(!step) {\n\t                step = 1;\n\t            }\n\n\t            var arr = [];\n\t            var i;\n\t            if (step > 0) {\n\t                for (i=start; i<stop; i+=step) {\n\t                    arr.push(i);\n\t                }\n\t            } else {\n\t                for (i=start; i>stop; i+=step) {\n\t                    arr.push(i);\n\t                }\n\t            }\n\t            return arr;\n\t        },\n\n\t        // lipsum: function(n, html, min, max) {\n\t        // },\n\n\t        cycler: function() {\n\t            return cycler(Array.prototype.slice.call(arguments));\n\t        },\n\n\t        joiner: function(sep) {\n\t            return joiner(sep);\n\t        }\n\t    };\n\t}\n\n\tmodule.exports = globals;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar Loader = __webpack_require__(11);\n\n\tvar PrecompiledLoader = Loader.extend({\n\t    init: function(compiledTemplates) {\n\t        this.precompiled = compiledTemplates || {};\n\t    },\n\n\t    getSource: function(name) {\n\t        if (this.precompiled[name]) {\n\t            return {\n\t                src: { type: 'code',\n\t                       obj: this.precompiled[name] },\n\t                path: name\n\t            };\n\t        }\n\t        return null;\n\t    }\n\t});\n\n\tmodule.exports = PrecompiledLoader;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar path = __webpack_require__(3);\n\tvar Obj = __webpack_require__(6);\n\tvar lib = __webpack_require__(1);\n\n\tvar Loader = Obj.extend({\n\t    on: function(name, func) {\n\t        this.listeners = this.listeners || {};\n\t        this.listeners[name] = this.listeners[name] || [];\n\t        this.listeners[name].push(func);\n\t    },\n\n\t    emit: function(name /*, arg1, arg2, ...*/) {\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\n\t        if(this.listeners && this.listeners[name]) {\n\t            lib.each(this.listeners[name], function(listener) {\n\t                listener.apply(null, args);\n\t            });\n\t        }\n\t    },\n\n\t    resolve: function(from, to) {\n\t        return path.resolve(path.dirname(from), to);\n\t    },\n\n\t    isRelative: function(filename) {\n\t        return (filename.indexOf('./') === 0 || filename.indexOf('../') === 0);\n\t    }\n\t});\n\n\tmodule.exports = Loader;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tfunction installCompat() {\n\t  'use strict';\n\n\t  // This must be called like `nunjucks.installCompat` so that `this`\n\t  // references the nunjucks instance\n\t  var runtime = this.runtime; // jshint ignore:line\n\t  var lib = this.lib; // jshint ignore:line\n\n\t  var orig_contextOrFrameLookup = runtime.contextOrFrameLookup;\n\t  runtime.contextOrFrameLookup = function(context, frame, key) {\n\t    var val = orig_contextOrFrameLookup.apply(this, arguments);\n\t    if (val === undefined) {\n\t      switch (key) {\n\t      case 'True':\n\t        return true;\n\t      case 'False':\n\t        return false;\n\t      case 'None':\n\t        return null;\n\t      }\n\t    }\n\n\t    return val;\n\t  };\n\n\t  var orig_memberLookup = runtime.memberLookup;\n\t  var ARRAY_MEMBERS = {\n\t    pop: function(index) {\n\t      if (index === undefined) {\n\t        return this.pop();\n\t      }\n\t      if (index >= this.length || index < 0) {\n\t        throw new Error('KeyError');\n\t      }\n\t      return this.splice(index, 1);\n\t    },\n\t    remove: function(element) {\n\t      for (var i = 0; i < this.length; i++) {\n\t        if (this[i] === element) {\n\t          return this.splice(i, 1);\n\t        }\n\t      }\n\t      throw new Error('ValueError');\n\t    },\n\t    count: function(element) {\n\t      var count = 0;\n\t      for (var i = 0; i < this.length; i++) {\n\t        if (this[i] === element) {\n\t          count++;\n\t        }\n\t      }\n\t      return count;\n\t    },\n\t    index: function(element) {\n\t      var i;\n\t      if ((i = this.indexOf(element)) === -1) {\n\t        throw new Error('ValueError');\n\t      }\n\t      return i;\n\t    },\n\t    find: function(element) {\n\t      return this.indexOf(element);\n\t    },\n\t    insert: function(index, elem) {\n\t      return this.splice(index, 0, elem);\n\t    }\n\t  };\n\t  var OBJECT_MEMBERS = {\n\t    items: function() {\n\t      var ret = [];\n\t      for(var k in this) {\n\t        ret.push([k, this[k]]);\n\t      }\n\t      return ret;\n\t    },\n\t    values: function() {\n\t      var ret = [];\n\t      for(var k in this) {\n\t        ret.push(this[k]);\n\t      }\n\t      return ret;\n\t    },\n\t    keys: function() {\n\t      var ret = [];\n\t      for(var k in this) {\n\t        ret.push(k);\n\t      }\n\t      return ret;\n\t    },\n\t    get: function(key, def) {\n\t      var output = this[key];\n\t      if (output === undefined) {\n\t        output = def;\n\t      }\n\t      return output;\n\t    },\n\t    has_key: function(key) {\n\t      return this.hasOwnProperty(key);\n\t    },\n\t    pop: function(key, def) {\n\t      var output = this[key];\n\t      if (output === undefined && def !== undefined) {\n\t        output = def;\n\t      } else if (output === undefined) {\n\t        throw new Error('KeyError');\n\t      } else {\n\t        delete this[key];\n\t      }\n\t      return output;\n\t    },\n\t    popitem: function() {\n\t      for (var k in this) {\n\t        // Return the first object pair.\n\t        var val = this[k];\n\t        delete this[k];\n\t        return [k, val];\n\t      }\n\t      throw new Error('KeyError');\n\t    },\n\t    setdefault: function(key, def) {\n\t      if (key in this) {\n\t        return this[key];\n\t      }\n\t      if (def === undefined) {\n\t        def = null;\n\t      }\n\t      return this[key] = def;\n\t    },\n\t    update: function(kwargs) {\n\t      for (var k in kwargs) {\n\t        this[k] = kwargs[k];\n\t      }\n\t      return null;  // Always returns None\n\t    }\n\t  };\n\t  OBJECT_MEMBERS.iteritems = OBJECT_MEMBERS.items;\n\t  OBJECT_MEMBERS.itervalues = OBJECT_MEMBERS.values;\n\t  OBJECT_MEMBERS.iterkeys = OBJECT_MEMBERS.keys;\n\t  runtime.memberLookup = function(obj, val, autoescape) { // jshint ignore:line\n\t    obj = obj || {};\n\n\t    // If the object is an object, return any of the methods that Python would\n\t    // otherwise provide.\n\t    if (lib.isArray(obj) && ARRAY_MEMBERS.hasOwnProperty(val)) {\n\t      return function() {return ARRAY_MEMBERS[val].apply(obj, arguments);};\n\t    }\n\n\t    if (lib.isObject(obj) && OBJECT_MEMBERS.hasOwnProperty(val)) {\n\t      return function() {return OBJECT_MEMBERS[val].apply(obj, arguments);};\n\t    }\n\n\t    return orig_memberLookup.apply(this, arguments);\n\t  };\n\t}\n\n\tmodule.exports = installCompat;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/miriam/Sites/herman/node_modules/nunjucks/browser/nunjucks-slim.js\n// module id = 216\n// module chunks = 1","(function() {(window.nunjucksPrecompiled = window.nunjucksPrecompiled || {})[\"search_result.njk\"] = (function() {\nfunction root(env, context, frame, runtime, cb) {\nvar lineno = null;\nvar colno = null;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\noutput += \"<li class=\\\"search-result text-block\\\">\\n  <h2><a href=\\\"\";\noutput += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, \"url\"), env.opts.autoescape);\noutput += \"\\\" data-result-field=\\\"title\\\">\";\noutput += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, \"title\"), env.opts.autoescape);\noutput += \"</a></h2>\\n  <div data-result-field=\\\"contents\\\">\";\noutput += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, \"contents\"), env.opts.autoescape);\noutput += \"</div>\\n</li>\\n\";\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n;\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n\n})();\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/miriam/Sites/herman/templates/client/search_result.njk\n// module id = 217\n// module chunks = 1","(function() {(window.nunjucksPrecompiled = window.nunjucksPrecompiled || {})[\"search_results.njk\"] = (function() {\nfunction root(env, context, frame, runtime, cb) {\nvar lineno = null;\nvar colno = null;\nvar output = \"\";\ntry {\nvar parentTemplate = null;\noutput += \"<h1 class=\\\"search-heading\\\">\\n  <span class=\\\"search-term\\\">\";\noutput += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, \"term\"), env.opts.autoescape);\noutput += \"</span>:\\n  \";\noutput += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, \"count\") || \"No\", env.opts.autoescape);\noutput += \" results\\n</h1>\\n\\n\";\nif(runtime.contextOrFrameLookup(context, frame, \"count\")) {\noutput += \"\\n  <ul class=\\\"js-search-results search-results\\\"></ul>\\n\";\n;\n}\noutput += \"\\n\";\nif(parentTemplate) {\nparentTemplate.rootRenderFunc(env, context, frame, runtime, cb);\n} else {\ncb(null, output);\n}\n;\n} catch (e) {\n  cb(runtime.handleError(e, lineno, colno));\n}\n}\nreturn {\nroot: root\n};\n\n})();\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/miriam/Sites/herman/templates/client/search_results.njk\n// module id = 218\n// module chunks = 1"],"sourceRoot":""}