{"version":3,"sources":["main.css","../node_modules/accoutrement-init/sass/_root.scss","../node_modules/accoutrement-init/sass/_a11y.scss","../node_modules/accoutrement-init/sass/_forms.scss","../node_modules/accoutrement-init/sass/_media.scss","../node_modules/accoutrement-init/sass/_typography.scss","layout/_root.scss","../node_modules/accoutrement-scale/sass/_units.scss","layout/_regions.scss","../node_modules/accoutrement-layout/sass/_clearfix.scss","../node_modules/accoutrement-layout/sass/_queries.scss","config/_colors.scss","../node_modules/accoutrement-layout/sass/_z-index.scss","../node_modules/accoutrement-color/sass/_utils.scss","../node_modules/accoutrement-scale/sass/_utility.scss","previews/_color.scss","../node_modules/accoutrement-scale/sass/_size.scss","../node_modules/accoutrement-color/sass/_api.scss","../node_modules/accoutrement-layout/sass/_stretch.scss","config/_fonts.scss","previews/_examples.scss","../node_modules/accoutrement-type/sass/_pseudo-elements.scss","previews/_font.scss","previews/_highlight.scss","previews/_icon.scss","previews/_size.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["html{-ms-overflow-style:-ms-autohiding-scrollbar;text-size-adjust:100%}main{display:block}details{display:block}pre{overflow:auto}progress{display:inline-block}summary{display:block}template{display:none}*,::before,::after{border-style:solid;border-width:0;box-sizing:border-box}*{font-size:inherit;line-height:inherit;margin:0;padding:0}table{border-collapse:collapse;border-spacing:0}audio :not([controls]){display:none}[aria-busy='true']{cursor:progress}[aria-controls]{cursor:pointer}[aria-disabled]{cursor:default}[hidden]{display:none}button{overflow:visible}input{border-radius:0;line-height:normal}button,[type='button'],[type='reset'],[type='submit']{appearance:button;cursor:pointer}button::-moz-focus-inner,[type='button']::-moz-focus-inner,[type='reset']::-moz-focus-inner,[type='submit']::-moz-focus-inner{border:0 none !important;padding:0 !important}[type='checkbox'],[type='radio']{box-sizing:border-box;padding:0}[type='number']{width:auto}[type='search']{appearance:textfield}button,input,select,textarea{background-color:transparent;color:inherit;font-family:inherit;font-style:inherit;font-weight:inherit}textarea{overflow:auto;resize:vertical}img{border:0}svg:not(:root){overflow:hidden}audio,canvas,iframe,img,svg,video{max-width:100%;vertical-align:middle}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}code,kbd,pre,samp{font-family:monospace;font-size:inherit}dfn{font-style:italic}nav ol,nav ul{list-style:none}small{font-size:0.75em}sub,sup{font-size:0.75em;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}html,body{overflow-x:hidden}ol,ul{margin:.7rem 1.4rem 1.4rem}[data-sassdoc-region]{width:100%}[data-sassdoc-region='app']{display:flex;flex-direction:column;height:100%;margin:0 auto;min-height:100vh;padding:0}[data-sassdoc-region='container']{display:flex;flex:1 1 auto;position:relative}[data-sassdoc-region='container']:after{clear:both;content:' ';display:block}@media (min-width: 56.25em){[data-sassdoc-region='container']{justify-content:flex-end}}[data-nav-menu]{background-color:#0d7fa5;color:#fff;z-index:3;margin:0;padding:1.4rem;white-space:nowrap}[data-sassdoc-region='breadcrumb']{background:#cfe5ed;padding:.7rem calc(.7rem + 2.5vw)}@media (max-width: 35.99em){[data-sassdoc-region='breadcrumb']{padding-top:calc(.7rem + 2.5vw)}}[data-sassdoc-region='breadcrumb'] a,[data-sassdoc-region='breadcrumb'] span,[data-sassdoc-region='breadcrumb'] strong{display:inline-block}[role='main']{z-index:2;width:100%}@media (min-width: 56.25em){[role='main']{overflow:hidden}}[data-sassdoc-region='main']{padding:1.4rem calc(.7rem + 2.5vw);position:relative}[data-sassdoc='color-palette']{margin:1.4rem 0}[data-sassdoc-color]{display:flex;flex-wrap:wrap;margin:.7rem 0;position:relative}[data-sassdoc='color-swatch']{border:1px solid #555b5e;flex:1 1 5.6rem;min-height:5.6rem;min-width:2.8rem;position:relative}[data-sassdoc='transparency-grid'],[data-sassdoc='color-overlay']{bottom:0;left:0;position:absolute;right:0;top:0}[data-sassdoc='transparency-grid']{background:url('data:image/svg+xml;utf8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 20 20\"><rect width=\"10\" height=\"10\"/><rect x=\"10\" y=\"10\" width=\"10\" height=\"10\"/></svg>') center repeat scroll;background-size:0.5em 0.5em;left:50%}[data-sassdoc='color-info']{flex:100 0 auto;padding:.35rem}[data-sassdoc='color-name']{display:block}[data-sassdoc='color-value']{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif;color:#555b5e;font-size:calc(.88889rem + .25vw)}.example{margin-bottom:1.4rem}.example-code{align-items:stretch;border:1px solid #cfe5ed;display:flex;flex-wrap:wrap;overflow:hidden}.example-code [data-sassdoc='hljs']{margin-bottom:0}.example-code[aria-hidden='true']{display:none}.code-block{align-items:stretch;display:flex;flex:1 1 40%;flex-direction:column;max-height:16.8rem;max-width:100%;min-width:20em;overflow:auto}.code-block+.code-block{border-left:1px solid #cfe5ed}.code-header{background-color:#cfe5ed;color:#3b4042;flex:0 0 auto;font-size:calc(.88889rem + .25vw);padding:0 .7rem}.code-header+[data-sassdoc='hljs']{flex:1 1 auto}.code-description{font-size:calc(.88889rem + .25vw)}.code-description:before{content:\" – \"}.example-render{border:1px solid #dedede;border-top:0;padding:1.4rem}[data-sassdoc-font]{margin:4.2rem 0 1.4rem}[data-sassdoc='font-type']{font-size:calc(1rem + 1.5vw);font-weight:bold}[data-sassdoc='font-stack']{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif;font-size:calc(.88889rem + .25vw)}[data-specimen-face]{margin:.7rem 0}[data-specimen='sample']{align-items:center;display:flex;flex-wrap:wrap;justify-content:space-between}[data-specimen='aa'],[data-specimen='lorem']{padding:0 .7rem}[data-specimen='aa']{flex:0 1 auto;font-size:4.2rem}[data-specimen='lorem']{flex:1 1 auto}[data-specimen='lorem'] span{display:block}[data-sassdoc='hljs'],[data-sassdoc-page='index'] pre{align-items:stretch;background-color:#fcfcfc;color:#587f8d;display:flex;position:relative}[data-sassdoc='hljs'] code,[data-sassdoc-page='index'] pre code{flex:0 0 100%;overflow-x:auto;padding:.7rem;padding-right:1.4rem}[data-sassdoc='hljs']:before,[data-sassdoc-page='index'] pre:before{content:\" \";bottom:0;left:0;position:absolute;right:0;top:0;background:linear-gradient(to top, #fcfcfc .175rem, rgba(252,252,252,0) .7rem),linear-gradient(to right, #fcfcfc .175rem, rgba(252,252,252,0) .7rem),linear-gradient(to bottom, #fcfcfc .175rem, rgba(252,252,252,0) .7rem),linear-gradient(to left, #fcfcfc .35rem, rgba(252,252,252,0) 2.1rem) no-repeat scroll;box-shadow:0 0 .35rem rgba(88,127,141,0.2) inset;pointer-events:none}[data-sassdoc-page='index'] pre{margin-bottom:1.4rem}.hljs-comment,.hljs-quote{color:#93a1a1}.hljs-keyword,.hljs-selector-tag,.hljs-addition{color:#859900}.hljs-number,.hljs-string,.hljs-meta .hljs-meta-string,.hljs-literal,.hljs-doctag,.hljs-regexp{color:#2aa198}.hljs-title,.hljs-section,.hljs-name,.hljs-selector-id,.hljs-selector-class{color:#268bd2}.hljs-attribute,.hljs-attr,.hljs-variable,.hljs-template-variable,.hljs-class .hljs-title,.hljs-type{color:#b58900}.hljs-symbol,.hljs-bullet,.hljs-subst,.hljs-meta,.hljs-meta .hljs-keyword,.hljs-selector-attr,.hljs-selector-pseudo,.hljs-link{color:#cb4b16}.hljs-built_in,.hljs-deletion{color:#dc322f}.hljs-formula{background:#eee8d5}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:bold}[data-sassdoc='icon-preview']{display:flex;flex-wrap:wrap;justify-content:space-between;margin:1.4rem -.7rem}[data-sassdoc-icon]{color:#555b5e;flex:1 1 15%;margin:1.4rem .7rem;min-width:7rem}[data-sassdoc-icon] [data-icon]{height:calc(1rem + 2.5vw);width:calc(1rem + 2.5vw)}[data-sassdoc='icon-info']{font-size:calc(.88889rem + .25vw);padding:.35rem 0;white-space:nowrap}[data-sassdoc='icon-name']{color:#3b4042;font-weight:bold;text-transform:uppercase}[data-sassdoc='icon-path']{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif}[data-sassdoc='ratio-demos']{line-height:1.2;overflow-x:auto;padding:.35rem;white-space:nowrap}[data-sassdoc='size-demos']{margin-bottom:1.4rem}[data-sassdoc='size-details']{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif;font-size:calc(.88889rem + .25vw)}[data-sassdoc='size-value']{color:#555b5e}[data-size-demo]{margin-bottom:.7rem}[data-size-demo='text']{overflow:hidden;padding:.35rem;white-space:nowrap}[data-size-demo='ruler']{background:linear-gradient(to right, currentColor 50%, transparent 50%);background-size:2em auto;height:1em}\n","// Root Init\n// =========\n\n\n// Prevent iOS and IE text size adjust after device orientation change\n// (overflow-style: Edge 12+, Internet Explorer 11-)\n/// @group general\nhtml {\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  text-size-adjust: 100%;\n}\n\n\n/// Android 4.3-, Internet Explorer 11-, Windows Phone 8.1+\n/// @group general\nmain {\n  display: block;\n}\n\n\n/// Edge 12+, Firefox 40+, Internet Explorer 11-, Windows Phone 8.1+\n/// @group general\ndetails {\n  display: block;\n}\n\n\n/// Internet Explorer 11-\n/// @group general\npre {\n  overflow: auto;\n}\n\n\n/// Internet Explorer 11-, Windows Phone 8.1+\n/// @group general\nprogress {\n  display: inline-block;\n}\n\n\n/// Firefox 40+, Internet Explorer 11-, Windows Phone 8.1+\n/// @group general\nsummary {\n  display: block;\n}\n\n\n/// Android 4.3-, Internet Explorer 11-, iOS 7-, Safari 7-, Windows Phone 8.1+\n/// @group general\ntemplate {\n  display: none;\n}\n\n\n/// Specify the border style, width, and box-sizing of all elements\n/// @group general\n*,\n::before,\n::after {\n  border-style: solid;\n  border-width: 0;\n  box-sizing: border-box;\n}\n\n\n/// Specify the core styles of all elements\n/// @group general\n* {\n  font-size: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n}\n\n\n/// Specify the border styling of tables\n/// @group general\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n","// Accessibility Init\n// ==================\n\n\n/// Chrome 44-, iOS 8+, Safari 9+\n/// @group a11y\naudio {\n  :not([controls]) {\n    display: none;\n  }\n}\n\n\n/// Specify the progress cursor of updating elements\n/// @group a11y\n[aria-busy='true'] {\n  cursor: progress;\n}\n\n\n/// Specify the pointer cursor of trigger elements\n/// @group a11y\n[aria-controls] {\n  cursor: pointer;\n}\n\n\n/// Specify the unstyled cursor of disabled,\n/// not-editable, or otherwise inoperable elements\n/// @group a11y\n[aria-disabled] {\n  cursor: default;\n}\n\n\n/// Internet Explorer 10-\n/// @group a11y\n[hidden] {\n  display: none;\n}\n","// Forms Init\n// ==========\n\n\n/// Internet Explorer 11-\n/// @group forms\nbutton {\n  overflow: visible;\n}\n\n\n/// border-radius: iOS 8+ |\n/// line-height: Firefox 4+\n/// @group forms\ninput {\n  border-radius: 0;\n  line-height: normal;\n}\n\n\n/// appearance, cursors, and inner-focus\n/// for buttons and button-like inputs\n/// (appearance: iOS 8+)\n/// @group forms\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  appearance: button;\n  cursor: pointer;\n\n  &::-moz-focus-inner {\n    border: 0 none !important;\n    padding: 0 !important;\n  }\n}\n\n\n/// Address box sizing set to `content-box` in IE 8/9/10.\n/// Remove excess padding in IE 8/9/10.\n/// @group forms\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n\n/// Firefox 36+\n/// @group forms\n[type='number'] {\n  width: auto;\n}\n\n\n/// Chrome 45+, Safari 9+\n/// @group forms\n[type='search'] {\n  appearance: textfield;\n}\n\n\n/// Specify the background-color,\n/// and the inherited color/font of form elements\n/// @group forms\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n}\n\n\n/// Remove default vertical scrollbar in IE 8/9/10/11,\n/// and specify the resizability of textareas\n/// @group forms\ntextarea {\n  overflow: auto;\n  resize: vertical;\n}\n","// Media Init\n// ==========\n\n\n/// Remove border when inside `a` element in IE 8/9/10.\n/// @group media\nimg {\n  border: 0;\n}\n\n\n/// Internet Explorer 11-\n/// @group media\nsvg {\n  &:not(:root) {\n    overflow: hidden;\n  }\n}\n\n\n/// Specify the alignment of media elements\n/// @group media\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  max-width: 100%;\n  vertical-align: middle;\n}\n","// Typography Init\n// ===============\n\n\n/// Remove the gray background color from active links in IE 10.\n/// Improve readability of focused elements\n/// when they are also in an active/hover state.\n/// @group type\na {\n  background-color: transparent;\n\n  &:active,\n  &:hover {\n    outline: 0;\n  }\n}\n\n\n/// Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n/// @group type\nabbr {\n  &[title] {\n    border-bottom: 1px dotted;\n  }\n}\n\n\n/// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n/// @group type\nb,\nstrong {\n  font-weight: bold;\n}\n\n\n/// specify the font family of code elements\n/// @group type\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace;\n  font-size: inherit;\n}\n\n\n/// Address styling not present in Safari and Chrome.\n/// @group type\ndfn {\n  font-style: italic;\n}\n\n\n/// Remove list style of nav lists\n/// @group type\nnav {\n  ol,\n  ul {\n    list-style: none;\n  }\n}\n\n\n/// All browsers\n/// @group type\nsmall {\n  font-size: 0.75em;\n}\n\n\n/// Prevent `sub` and `sup` affecting `line-height` in all browsers.\n/// @group type\nsub,\nsup {\n  font-size: 0.75em;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\n\n/// Move super-script up\n/// @group type\nsup {\n  top: -0.5em;\n}\n\n\n/// Move sub-script down\n/// @group type\nsub {\n  bottom: -0.25em;\n}\n","// Root Layout\n// ===========\n\nhtml,\nbody {\n  overflow-x: hidden;\n}\n\nol,\nul {\n  margin: size('shim') size('gutter') size('gutter');\n}\n","// Unit Helpers\n// ------------\n\n\n// Get PX [function]\n// -----------------\n/// If a value can be converted to px by Sass, do it.\n///\n/// @access private\n///\n/// @param {Number} $length -\n///   The number to be converted to px if comparable.\n/// @return {Number | false} -\n///   Either the `px` value of the converted `$length` or `false`.\n@function _get-px(\n  $length\n) {\n  @return if(comparable($length, 1px), 0px + $length, false);\n}\n\n\n// Get Number [function]\n// ---------------------\n/// Get a `0`-value for any absolute unit.\n///\n/// @access private\n///\n/// @param {String} $unit -\n///   The unit to return as a number.\n/// @return {Number | false} -\n///   Either the `0` value of a unit or `false`.\n@function _get-number(\n  $unit,\n  $relative: false\n) {\n  $_absolute: (\n    'in': 0in,\n    'mm': 0mm,\n    'cm': 0cm,\n    'pt': 0pt,\n    'pc': 0pc,\n    'px': 0px,\n  );\n\n  $_relative: (\n    'em': 0em,\n    'rem': 0rem,\n    '%': 0%,\n    'ex': 0ex,\n    'ch': 0ch,\n    'vw': 0vw,\n    'vh': 0vh,\n    'vmin': 0vmin,\n    'vmax': 0vmax,\n    'fr': 0fr,\n  );\n\n  @if $relative {\n    @return map-get($_absolute, $unit) or map-get($_relative, $unit);\n  }\n\n  @return map-get($_absolute, $unit);\n}\n\n\n// Convert Units [function]\n// ------------------------\n/// Convert lengths between most units.\n///\n/// @group units\n///\n/// @param {Number} $length -\n///   The length to be converted\n/// @param {String} $to-unit -\n///   The desired units to convert to.\n///   Some units (`ch`, `vw`, `vh`, `vmin`, `vmax`) cannot be converted.\n/// @param {Number} $from-context [$_BROWSER-DEFAULT-FONT-SIZE] -\n///   When converting from relative units,\n///   the absolute length (in px) to which $length refers -\n///   e.g. for `$lengths` in em units, would normally be the\n///   font-size of the current element.\n/// @param {Number} $to-context [$from-context] -\n///   For converting *to* relative units,\n///   the absolute length in px to which the output value will refer.\n///   Defaults to the same as `$from-context`, since it is rarely needed.\n@function convert-units(\n  $length,\n  $to-unit,\n  $from-context: $_BROWSER-DEFAULT-FONT-SIZE,\n  $to-context: $from-context\n) {\n  $_convertable: ('in', 'mm', 'cm', 'pt', 'pc', 'px', 'em', 'rem', '%', 'ex');\n  $from-unit: unit($length);\n\n  // Optimize for cases where `from` and `to` units are accidentally the same.\n  @if $from-unit == $to-unit {\n    @return $length;\n  }\n\n  @if ($from-unit == '') {\n    @return _get-number($to-unit, 'allow-relative') + $length;\n  } @else if ($to-unit == '') {\n    @return $length / ($length * 0 + 1);\n  }\n\n  // Warn and escape when units are not convertable\n  @each $units in ($from-unit, $to-unit) {\n    @if not index($_convertable, $units) {\n      @warn '`#{$units}` units can not be reliably converted; Returning original value.';\n      @return $length;\n    }\n  }\n\n  // Optomize comparable (non-relative) units\n  $absolute-output: _get-number($to-unit);\n\n  @if $absolute-output and comparable($length, $absolute-output)  {\n    @return $absolute-output + $length;\n  }\n\n  // Establish relative context\n  $root-size: map-get($sizes, 'root') or $_BROWSER-DEFAULT-FONT-SIZE;\n  $from-context: _get-px($from-context);\n  $to-context: _get-px($to-context);\n\n  // Context values must be in px\n  @if (not $from-context) or (not $to-context) {\n    @error 'Context paremeters must resolve to a value in pixel units.';\n  }\n\n  // Convert relative length to pixels\n  $px-length: _get-px($length) or $length;\n  $from-unit: unit($px-length);\n\n  // Convert relative units using the from-context parameter.\n  @if $from-unit == 'em' {\n    $px-length: $length * $from-context / 1em;\n  } @else if $from-unit == 'rem' {\n    $px-length: $length * $root-size / 1rem;\n  } @else if $from-unit == '%' {\n    $px-length: $length * $from-context / 100%;\n  } @else if $from-unit == 'ex'  {\n    $px-length: $length * $from-context / 2ex;\n  }\n\n  // Convert length in pixels to the output unit\n  @if $absolute-output {\n    @return $absolute-output + $px-length;\n  } @else if $to-unit == 'em' {\n    @return $px-length * 1em / $to-context;\n  } @else if $to-unit == 'rem' {\n    @return $px-length * 1rem / $root-size;\n  } @else if $to-unit == '%' {\n    @return $px-length * 100% / $to-context;\n  } @else if $to-unit == 'ex' {\n    @return $px-length * 2ex / $to-context;\n  }\n\n  @error 'Failed to convert #{$length} into #{$to-units}.';\n}\n","// Layout Regions\n// ==============\n\n\n[data-sassdoc-region] {\n  width: 100%;\n}\n\n\n// App\n// ---\n[data-sassdoc-region='app'] {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  margin: 0 auto;\n  min-height: 100vh;\n  padding: 0;\n}\n\n[data-sassdoc-region='container'] {\n  @include clearfix;\n  display: flex;\n  flex: 1 1 auto;\n  position: relative;\n\n  @include above('page') {\n    justify-content: flex-end;\n  }\n}\n\n// Navigation\n// ----------\n[data-nav-menu] {\n  @include contrasted('theme-dark');\n  @include z-index('sidebar');\n  margin: 0;\n  padding: size('gutter');\n  white-space: nowrap;\n}\n\n[data-sassdoc-region='breadcrumb'] {\n  background: color('theme-light');\n  padding: size('shim') size('flex-gutter');\n\n  @include below('nav-medium') {\n    padding-top: size('flex-gutter');\n  }\n\n  a,\n  span,\n  strong {\n    display: inline-block;\n  }\n}\n\n\n// Page\n// ----\n[role='main'] {\n  @include z-index('main');\n  width: 100%;\n\n  @include above('page') {\n    overflow: hidden;\n  }\n}\n\n[data-sassdoc-region='main'] {\n  padding: size('gutter') size('flex-gutter');\n  position: relative;\n}\n","// Clearfix\n// ========\n\n\n// Micro Clearfix\n// --------------\n/// A small, unobtrusive clearfix for float containers.\n/// @group clearfix\n@mixin micro-clearfix {\n  &:after {\n    clear: both;\n    content: ' ';\n    display: block;\n  }\n}\n\n\n// Cleafix\n// -------\n/// Currently an alias for `micro-clearfix`,\n/// but could be used to choose between clearfix options.\n/// @group clearfix\n/// @alias micro-clearfix\n@mixin clearfix {\n  @include micro-clearfix;\n}\n","// Media Queries\n// =============\n\n\n\n// Accoutrement Query Context\n// --------------------------\n$accoutrement-query-context: ();\n\n\n\n// Get Breakpoint [function]\n// -------------------------\n@function _get-breakpoint(\n  $break\n) {\n  @if variable-exists('breakpoints') and map-get($breakpoints, $break) {\n    $break: map-get($breakpoints, $break) or $break;\n\n    @if map-has-key($breakpoints, $break) {\n      $break: _get-breakpoint($break);\n    }\n  }\n\n  @if function-exists('size') and map-get($sizes, $break) {\n    $break: size($break);\n  }\n\n  @if type-of($break) != 'number' {\n    @error '\"#{$break}\" isn\\'t a valid breakpoint length or user-defined keyword.';\n  }\n\n  @if function-exists('browser-ems') {\n    @return browser-ems($break);\n  }\n\n  @return $break;\n}\n\n\n\n// Apply Query [mixin]\n// -------------------\n@mixin _apply-query(\n  $name,\n  $query\n) {\n  $context: ($name: $query);\n  $context: map-merge($accoutrement-query-context, $context);\n  $accoutrement-query-context: $context !global;\n\n  @media #{$query} {\n    @content;\n  }\n\n  $accoutrement-query-context: map-remove($accoutrement-query-context, $name) !global;\n}\n\n\n\n// Below [mixin]\n// -------------\n@mixin below(\n  $max,\n  $prop: 'width'\n) {\n  $name: 'below `#{$max}`';\n  $max: _get-breakpoint($max);\n\n  @if unit($max) == 'em' {\n    $max: $max - 0.01;\n  } @else if comparable($max, 1px) {\n    $max: $max - 1px;\n  }\n\n  $query: '(max-#{$prop}: #{$max})';\n\n  @include _apply-query($name, $query) {\n    @content;\n  }\n}\n\n\n\n// Above [mixin]\n// -------------\n@mixin above(\n  $min,\n  $prop: 'width'\n) {\n  $name: 'above `#{$min}`';\n  $min: _get-breakpoint($min);\n  $query: '(min-#{$prop}: #{$min})';\n\n  @include _apply-query($name, $query) {\n    @content;\n  }\n}\n\n\n\n// Between [mixin]\n// ---------------\n@mixin between(\n  $min,\n  $max,\n  $prop: 'width'\n) {\n  $name: 'between `#{$min}` and `#{$max}`';\n  $min: _get-breakpoint($min);\n  $max: _get-breakpoint($max);\n\n  @if unit($max) == 'em' {\n    $max: $max - 0.01;\n  } @else if comparable($max, 1px) {\n    $max: $max - 1px;\n  }\n\n  $query: '(min-#{$prop}: #{$min}) and (max-#{$prop}: #{$max})';\n\n  @include _apply-query($name, $query) {\n    @content;\n  }\n}\n","// Color Settings\n// ==============\n\n@import '../../node_modules/mathsass/dist/math';\n@import '../../node_modules/accoutrement-color/sass/color';\n\n\n// Brand Colors\n// ------------\n/// We use bright primary colors for the main brand,\n/// everything else is based on these colors.\n/// @preview color-palette\n/// @group colors\n/// @type Map\n/// @prop {Color | String | List} '<color-name>' -\n///   Each `<color-name>` key can be assigned a color\n///   or previously-defined key,\n///   followed by an optional map of adjustments\n///   (as defined in\n///   [Accoutrement-Color](http://oddbird.net/accoutrement-color/sassdoc/)).\n/// @link http://oddbird.net/accoutrement-color/sassdoc/\n///   Accoutrement Color\n/// @example scss\n///   // @preview color-palette\n///   @include herman-add-colors('brand-colors', $brand-colors);\n$brand-colors: (\n  'brand-orange': hsl(24, 100%, 39%),\n  'brand-blue': hsl(195, 85%, 35%),\n  'brand-pink': hsl(330, 85%, 48%),\n);\n\n@include herman-add-colors('brand-colors', $brand-colors);\n\n\n// Neutral Colors\n// --------------\n/// Use these neutral colors\n/// to create structure and hierarchy in the document.\n/// @preview color-palette\n/// @group colors\n/// @link http://oddbird.net/accoutrement-color/sassdoc/\n///   Accoutrement Color\n/// @example scss\n///   // @preview color-palette\n///   @include herman-add-colors('neutral-colors', $neutral-colors);\n$neutral-colors: (\n  'light-gray': 'brand-blue' ('tint': 80%, 'desaturate': 80%),\n  'gray': 'brand-blue' ('desaturate': 80%),\n  'black': 'brand-blue' ('shade': 30%, 'desaturate': 80%),\n);\n\n@include herman-add-colors('neutral-colors', $neutral-colors);\n\n\n// Status Colors\n// -------------\n/// These status colors for UI elements\n/// give a quick sense of progress, warning, or errors.\n/// @preview color-palette\n/// @group colors\n/// @link http://oddbird.net/accoutrement-color/sassdoc/\n///   Accoutrement Color\n/// @example scss\n///   // @preview color-palette\n///   @include herman-add-colors('status-colors', $status-colors);\n$status-colors: (\n  'go': hsl(75, 65%, 30%),\n  'yield': 'brand-orange',\n  'stop': hsl(0, 85%, 50%),\n);\n\n@include herman-add-colors('status-colors', $status-colors);\n\n\n// Theme Colors\n// ------------\n/// Applying the brand and accent colors\n/// to a sitewide theme.\n/// @preview color-palette\n/// @group colors\n/// @link http://oddbird.net/accoutrement-color/sassdoc/\n///   Accoutrement Color\n/// @example scss\n///   // @preview color-palette\n///   @include herman-add-colors('theme-colors', $theme-colors);\n$theme-colors: (\n  'theme-dark': 'brand-blue',\n  'theme-light': 'brand-blue' ('tint': 80%),\n\n  'background': #fff,\n  'text': 'black',\n  'text-light': 'gray',\n  'border': 'gray',\n  'light-border': 'light-gray',\n  'callout': 'light-gray',\n  'overlay': 'callout' ('rgba': 0.9),\n  'shadow': 'gray' ('rgba': 0.5),\n  'action': 'theme-dark',\n  'focus': 'action' ('shade': 25%),\n  'active': 'action',\n  'accent': 'brand-pink',\n  'slight': 'light-gray' ('tint': 90%),\n  'code': hsl(196, 23%, 45%),\n  'code-shadow': 'code' (rgba: 0.2),\n);\n\n@include herman-add-colors('theme-colors', $theme-colors);\n\n\n// System Colors\n// -------------\n/// Colors used by accoutrement-color\n/// to calculate contrast ratios.\n/// @group colors\n/// @link http://oddbird.net/accoutrement-color/sassdoc/\n///   Accoutrement Color\n$system-colors: (\n  'contrast-light': 'background',\n  'contrast-dark': 'text',\n);\n\n@include herman-add-colors('system-colors', $system-colors);\n","// Z-Index\n// =======\n\n\n// Z-Index\n// -------\n/// A list of named z-index layers, from lowest to highest index.\n/// Nest lists (one level deep) for different z-index contexts.\n/// @type List\n/// @group z-index\n/// @example scss -\n///   $z-index: (\n///     'main',\n///     'sidebar',\n///     'banner' 'active-nav' 'dropdown',\n///     'message',\n///     'modal',\n///   );\n$z-index: ();\n\n\n// Z-Index [function]\n// ------------------\n/// Return the numeric index of a named layer in your `$z-index` variable.\n/// @group z-index\n/// @param {String} $layer -\n///   The name of a z-index layer in your configuration.\n/// @require {Variable} $z-index\n/// @return {Number} -\n///   The z-index value associated with the given layer in your configuration.\n@function z-index(\n  $layer\n) {\n  $index: index($z-index, $layer);\n  $nested: null;\n\n  @if $index {\n    @return $index;\n  } @else {\n    @for $i from 1 through length($z-index) {\n      $stack: nth($z-index, $i);\n      $index: $i;\n      $nested: index($stack, $layer);\n\n      @if type-of($nested) == 'number' {\n        @if $nested == 1 {\n          @return $index;\n        } @else if $nested > 1 {\n          @return $nested;\n        }\n      }\n    }\n  }\n\n  @if type-of($layer) != 'number' {\n    @error '#{$layer} is not a valid z-index.';\n  }\n\n  @return $layer;\n}\n\n\n// Z-Index [mixin]\n// ---------------\n/// Output the `z-index` property and value of a given layer\n/// in your `$z-index` configuration.\n/// @group z-index\n/// @param {String} $layer -\n///   The name of a z-index layer in your configuration.\n/// @output -\n///   The z-index property with a value based on your configuration.\n@mixin z-index(\n  $layer\n) {\n  z-index: z-index($layer);\n}\n","// Color Utilities\n// ===============\n\n\n// Tint\n// ----\n/// Mix a color with `white` to get a lighter tint.\n///\n/// @group util\n///\n/// @param {String | list} $color -\n///   The name of a color in your palette,\n///   with optional adjustments in the form of `(<function-name>: <args>)`.\n/// @param {Percentage} $percentage -\n///   The percentage of white to mix in.\n///   Higher percentages will result in a lighter tint.\n/// @return {Color} -\n///   A calculated css-ready color-value based on your global color palette.\n@function tint(\n  $color,\n  $percentage\n) {\n  $color: color($color);\n\n  @return mix(#fff, $color, $percentage);\n}\n\n\n// Shade\n// -----\n/// Mix a color with `black` to get a darker shade.\n///\n/// @group util\n///\n/// @param {String | list} $color -\n///   The name of a color in your palette,\n///   with optional adjustments in the form of `(<function-name>: <args>)`.\n/// @param {Percentage} $percentage -\n///   The percentage of black to mix in.\n///   Higher percentages will result in a darker shade.\n/// @return {Color} -\n///   A calculated css-ready color-value based on your global color palette.\n@function shade(\n  $color,\n  $percentage\n) {\n  $color: color($color);\n\n  @return mix(#000, $color, $percentage);\n}\n\n\n// Get Function\n// ------------\n/// Get a first-class function in Sass 3.5+,\n/// or the function name string (unchanged)\n/// in older Sass versions.\n/// This is safe to use internally,\n/// as it allows users to pass in\n/// either a string, or a previously-captured function.\n///\n/// @access private\n///\n/// @param {String | Function} $function -\n///   The name (string) of a function,\n///   or the function to be called.\n/// @return {String | Function} -\n///   Returns a first-class function in Sass 3.5+,\n///   or the function name string in older Sass versions.\n@function _ac-color-get-function(\n  $function\n) {\n  $type: type-of($function);\n\n  @if ($type == 'function') {\n    @return $function;\n  } @else if ($type == 'string') {\n    @if function-exists('get-function') {\n      @return get-function($function);\n    }\n\n    @return $function;\n  }\n\n  @error 'Invalid function-name, [#{$type}] `#{$function}` must be a function or string';\n}\n","// Utilities\n// =========\n\n$_LOCAL-FUNCTIONS: (\n  'add', 'plus',\n  'minus', 'subtract',\n  'times', 'multiply',\n  'divide'\n);\n\n\n// Get Function\n// ------------\n/// Get a first-class function in Sass 3.5+,\n/// or the function name string (unchanged)\n/// in older Sass versions.\n/// This is safe to use internally,\n/// as it allows users to pass in\n/// either a string, or a previously-captured function.\n///\n/// @access private\n///\n/// @param {String | Function} $function -\n///   The name (string) of a function,\n///   or the function to be called.\n/// @return {String | Function} -\n///   Returns a first-class function in Sass 3.5+,\n///   or the function name string in older Sass versions.\n@function _ac-scale-get-function(\n  $function\n) {\n  $type: type-of($function);\n\n  @if ($type == 'function') {\n    @return $function;\n  }\n\n  @if ($type == 'string') and function-exists('get-function') {\n    @if index($_LOCAL-FUNCTIONS, $function) {\n      @return get-function($function);\n    }\n\n    @error '[#{$type}] `#{$function}` must be a first-class function';\n  }\n\n  @return $function;\n}\n\n\n// Format String\n// -------------\n/// Define your own format-string\n/// for building `calc(%s + %s) ('root', 'rhythm')` recipies.\n///\n/// @group config\n/// @type string\n///\n/// @example scss -\n///   $ac-format-string: '@@@';\n$ac-format-string: '%s';\n\n\n// String Replace\n// --------------\n/// Return a string, with a substring replaced\n///\n/// @access private\n///\n/// @param {string} $string -\n///   The original string to be edited\n/// @param {string} $old -\n///   A sub-string to replace\n/// @param {string} $new -\n///   A new sub-string to replace the old\n/// @return {string} -\n///   Original string, with substring replaced\n@function _ac-str-replace(\n  $string,\n  $old,\n  $new: null,\n  $replace-all: false\n) {\n  $return: $string;\n  $i: str-index($string, $old);\n  $n: str-length($old);\n\n  @if $string == $old {\n    $return: $new;\n  } @else if $i {\n    $a: if($i > 1, str-slice($string, 1, $i - 1), '');\n    $z: str-slice($string, $i + $n);\n\n    @if $replace-all {\n      $z: _ac-str-replace($z, $old, $new, true);\n    }\n\n    $return: $a + if($new, $new, '') + $z;\n  }\n\n  @return $return;\n}\n\n\n// Interpolate\n// -----------\n/// Return a string with interpolated values\n/// replacing `%s` format strings\n///\n/// @access private\n///\n/// @param {string} $string -\n///   The original string to be edited\n/// @param {strings} $values... -\n///   New strings, to replace the `%s` format strings\n/// @return {string} -\n///   Original string, with `%s` format strings replaced\n@function _ac-interpolate(\n  $string,\n  $values...\n) {\n  $_return: $string;\n\n  @each $val in $values {\n    @if str-index($_return, $ac-format-string) {\n      $_return: _ac-str-replace($_return, $ac-format-string, $val);\n    } @else {\n      @warn 'Too many values passed for interpolation with \"#{$string}\".';\n    }\n  }\n\n  @return $_return;\n}\n","// Preview Layouts\n// ===============\n\n\n// Color Preview\n// -------------\n\n[data-sassdoc='color-palette'] {\n  margin: size('gutter') 0;\n}\n\n[data-sassdoc-color] {\n  display: flex;\n  flex-wrap: wrap;\n  margin: size('shim') 0;\n  position: relative;\n}\n\n\n// Color Swatch\n// ------------\n\n[data-sassdoc='color-swatch'] {\n  border: 1px solid color('border');\n  flex: 1 1 size('color-swatch');\n  min-height: size('color-swatch');\n  min-width: size('color-swatch') / 2;\n  position: relative;\n}\n\n[data-sassdoc='transparency-grid'],\n[data-sassdoc='color-overlay'] {\n  @include stretch;\n}\n\n[data-sassdoc='transparency-grid'] {\n  background: url('data:image/svg+xml;utf8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 20 20\"><rect width=\"10\" height=\"10\"/><rect x=\"10\" y=\"10\" width=\"10\" height=\"10\"/></svg>') center repeat scroll;\n  background-size: 0.5em 0.5em;\n  left: 50%;\n}\n\n\n// Color Info\n// ----------\n\n[data-sassdoc='color-info'] {\n  flex: 100 0 auto;\n  padding: size('half-shim');\n}\n\n[data-sassdoc='color-name'] {\n  display: block;\n}\n\n[data-sassdoc='color-value'] {\n  @include font-family('code');\n  color: color('text-light');\n  font-size: size('small');\n}\n","// Base API\n// ========\n\n\n// Size [function]\n// ---------------\n/// Access a named size in your `$sizes` map,\n/// using any comparable units.\n///\n/// @group sizes\n///\n/// @param {String | Length | List} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('minor-third': 2)`),\n///   or a `calc(%s + %s) ('root', 'rhythm')` recipie\n///   for building `calc` values.\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {String} $unit [null] -\n///   The desired units for the output (e.g. `px` or `rem`).\n/// @throw -\n///   The calculated value is not a valid CSS length.\n/// @return {Length} -\n///   The calculated length, in the requested units.\n@function size(\n  $size,\n  $unit: null\n) {\n  // Parse arguments\n  $size: map-get($sizes, $size) or $size;\n  $base: nth($size, 1);\n  $adjust: if(length($size) > 1, nth($size, 2), null);\n\n  // Recursive check\n  $size: if(map-has-key($sizes, $base), size($base, false), $base);\n\n  // Adjustments\n  $adjust-type: type-of($adjust);\n  $calc: (type-of($size) == 'string') and (str-slice($size, 1, 5) == 'calc(');\n\n  @if (not $calc) and ($adjust-type == 'map') {\n    @each $key, $value in $adjust {\n      $size: _ac-scale-adjust-size($size, $key, $value);\n    }\n  } @else if $calc and ($adjust-type == 'list') {\n    $values: ();\n\n    @each $value in $adjust {\n      $values: append($values, size($value));\n    }\n\n    $size: _ac-interpolate($base, $values...);\n  }\n\n\n  // Validation\n  @if (type-of($size) == 'number') or $calc {\n    $size: if($unit, convert-units($size, $unit), $size);\n    @return $size;\n  }\n\n  @error '#{$size} is not a valid length for CSS.';\n}\n\n\n// Negative [function]\n// -------------------\n/// Return the negative value of any length,\n/// in comparable units.\n///\n/// @group sizes\n///\n/// @param {String | Length | List} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('minor-third': 2)`).\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {String} $unit [null] -\n///   The desired units for the output (e.g. `px` or `rem`).\n/// @return {Length} -\n///   The calculated negative length, in the requested units.\n@function negative(\n  $size,\n  $unit: null\n) {\n  @return 0 - size($size, $unit);\n}\n\n\n// Square [mixin]\n// --------------\n/// Create a square by setting equal CSS `height` and `width` properties\n/// with the given size & unit value.\n///\n/// @group sizes\n///\n/// @param {String | Length | List} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('minor-third': 2)`).\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {String} $unit [null] -\n///   The desired units for the output (e.g. `px` or `rem`).\n/// @output -\n///   Equal CSS height and width properties,\n///   set to the given size and units.\n@mixin square(\n  $size,\n  $unit: null\n) {\n  $size: size($size, $unit);\n\n  height: $size;\n  width: $size;\n}\n\n\n\n// Adjust Size\n// ===========\n/// Calculate ratio, linear, or arbitrary adjustments\n/// to a base size.\n///\n/// @access private\n///\n/// @param {Number} $size -\n///   The original size to perform adjusments on\n/// @param {String | Number} $key -\n///   The adjustment to perform,\n///   given as either a numeric ratio,\n///   named ratio keyword,\n///   or function name to call.\n/// @param {Any} $value -\n///   Any required adjustment arguments,\n///   such as the number of times to apply a ratio,\n///   or additional arguments to be passed to a function.\n/// @return {Number} -\n///   Results of the adjustment.\n@function _ac-scale-adjust-size(\n  $size,\n  $key,\n  $value\n) {\n  $ratio: _get-ratio($key);\n\n  @if $ratio == 'linear' {\n    @return $size * $value;\n  } @else if (type-of($ratio) == 'number') {\n    $multiplier: _accoutrement-pow($ratio, $value);\n    @return $size * $multiplier;\n  } @else if (type-of($key) == 'function') or function-exists($key) {\n    $function: _ac-scale-get-function($key);\n    $args: if($value, ($size, $value), $size);\n    @return call($function, $args...);\n  }\n\n  @error '#{$key} is not a valid ratio or function for adusting sizes.';\n}\n\n\n","// Color API\n// =========\n\n\n// Color\n// -----\n/// Access any color in your palette,\n/// or generate new colors on the fly.\n///\n/// @group colors\n///\n/// @parameter {string | list} $color -\n///   The name of a color in your palette,\n///   or a valid css color-value,\n///   with optional adjustments\n///   in the form of `<origin-color> (<function>: <args...>)`.\n///\n/// @parameter {Map} $palette [$colors] -\n///   A map containing the source color-palette\n///   for accessing previously-defined colors.\n///\n/// @return {Color} -\n///   A calculated css-ready color,\n///   based on your global color palette and adjustments.\n@function color(\n  $color,\n  $palette: $colors\n) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base), $base);\n\n  // Adjustments\n  @each $function, $value in $adjust {\n    $function: _ac-color-get-function($function);\n    $color: call($function, $color, $value...);\n  }\n\n  @return $color;\n}\n","// Stretch Utilities\n// =================\n\n\n// Stretch\n// -------\n/// Stretch a positioned element in relation to its context.\n/// @group stretch\n/// @param {Number} $top [0] -\n///   Offset from the top edge.\n/// @param {Number} $right [$top] -\n///   Offset from the right edge.\n/// @param {Number} $bottom [$top] -\n///   Offset from the bottom edge.\n/// @param {Number} $left [$right] -\n///   Offset from the left edge.\n/// @param {absolute | fixed} $position [absolute] -\n///   The type of positioning to use.\n@mixin stretch(\n  $top: 0,\n  $right: $top,\n  $bottom: $top,\n  $left: $right,\n  $position: absolute\n) {\n  bottom: $bottom or null;\n  left: $left or null;\n  position: $position or null;\n  right: $right or null;\n  top: $top or null;\n}\n\n\n// Stretch\n// -------\n/// Stretch a positioned element horizontally in relation to its context.\n/// @group stretch\n/// @param {Number} $left [0] -\n///   Offset from the left edge.\n/// @param {Number} $right [$left] -\n///   Offset from the right edge.\n/// @param {absolute | fixed} $position [absolute] -\n///   The type of positioning to use.\n@mixin stretch-x(\n  $left: 0,\n  $right: $left,\n  $position: absolute\n) {\n  @include stretch(false, $right, false, $left, $position);\n}\n\n\n// Stretch\n// -------\n/// Stretch a positioned element vertically in relation to its context.\n/// @group stretch\n/// @param {Number} $top [0] -\n///   Offset from the top edge.\n/// @param {Number} $bottom [$top] -\n///   Offset from the bottom edge.\n/// @param {absolute | fixed} $position [absolute] -\n///   The type of positioning to use.\n@mixin stretch-y(\n  $top: 0,\n  $bottom: $top,\n  $position: absolute\n) {\n  @include stretch($top, false, $bottom, false, $position);\n}\n","// Font Settings\n// =============\n\n@import '../../node_modules/accoutrement-type/sass/type';\n\n\n// Font Formats\n// ------------\n/// The font-formats that we want to import\n/// @group webfonts\n/// @link http://oddbird.net/accoutrement-type/sassdoc/\n///   Accoutrement Type\n$font-formats: 'woff' 'ttf';\n\n\n// Sans Font\n// ---------\n/// A clean sans-serif option\n/// used for smaller text like captions and labels.\n/// @preview font-specimen; key: sans; show: regular, bold, italic, bold italic\n/// @group webfonts\n/// @link http://oddbird.net/accoutrement-type/sassdoc/\n///   Accoutrement Type\n/// @example scss\n///   // @preview font-specimen; key: sans\n///   @include herman-add-font('sans', $sans-font);\n$sans-font: (\n  'name': 'Source Sans Pro',\n  'source': 'https://fonts.google.com/specimen/Source+Sans+Pro',\n  'stack': ('Helvetica Neue', 'Helvetica', 'Arial', sans-serif),\n);\n\n@include herman-add-font('sans', $sans-font);\n\n\n// Code Font\n// ---------\n/// A readable monospace font for code previews.\n/// @preview font-specimen; key: code; show: regular, bold\n/// @group webfonts\n/// @link http://oddbird.net/accoutrement-type/sassdoc/\n///   Accoutrement Type\n/// @example scss\n///   // @preview font-specimen; key: code\n///   @include herman-add-font('code', $code-font);\n$code-font: (\n  'name': 'Source Code Pro',\n  'source': 'https://fonts.google.com/specimen/Source+Code+Pro',\n  'stack': ('Consolas', 'Menlo', 'Monaco', 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif),\n);\n\n@include herman-add-font('code', $code-font);\n","// Examples\n// ========\n\n.example {\n  margin-bottom: size('gutter');\n}\n\n.example-code {\n  align-items: stretch;\n  border: 1px solid color('theme-light');\n  display: flex;\n  flex-wrap: wrap;\n  overflow: hidden;\n\n  [data-sassdoc='hljs'] {\n    margin-bottom: 0; // override the hljs margin needed for non-nested blocks\n  }\n\n  &[aria-hidden='true'] {\n    display: none;\n  }\n}\n\n.code-block {\n  align-items: stretch;\n  display: flex;\n  flex: 1 1 40%;\n  flex-direction: column;\n  max-height: size('rhythm') * 12;\n  max-width: 100%;\n  min-width: 20em;\n  overflow: auto;\n\n  & + & {\n    border-left: 1px solid color('theme-light');\n  }\n}\n\n.code-header {\n  @include contrasted('theme-light');\n  flex: 0 0 auto;\n  font-size: size('small');\n  padding: 0 size('shim');\n\n  + [data-sassdoc='hljs'] {\n    flex: 1 1 auto;\n  }\n}\n\n.code-description {\n  @include before(' – ');\n  font-size: size('small');\n}\n\n.example-render {\n  border: 1px solid color('light-border');\n  border-top: 0;\n  padding: size('gutter');\n}\n\n","// Pseudo Elements\n// ===============\n\n\n// Before\n// ------\n/// Add generated content `:before` an element.\n/// @group pseudo\n/// @param {String} $content -\n///   A value for the `content` property.\n@mixin before(\n  $content\n) {\n  &:before {\n    content: $content;\n    @content;\n  }\n}\n\n\n// After\n// -----\n/// Add generated content `:after` an element.\n/// @group pseudo\n/// @param {String} $content -\n///   A value for the `content` property.\n@mixin after(\n  $content\n) {\n  &:after {\n    content: $content;\n    @content;\n  }\n}\n\n\n// Wrap Content\n// ------------\n/// Add generated content `:before` and `:after` an element.\n/// @group pseudo\n/// @param {List} $content -\n///   One or two values to be used for the `content` property.\n///   A single string will be used `:before` and `:after`.\n@mixin wrap-content(\n  $content: '“' '”'\n) {\n  $_before: nth($content, 1);\n\n  &:before,\n  &:after {\n    content: $_before;\n    @content;\n  }\n\n  @if length($content) > 1 {\n    &:after { content: nth($content, 2); }\n  }\n}\n","// Font Specimen\n// =============\n\n[data-sassdoc-font] {\n  margin: size('spacer') 0 size('gutter');\n}\n\n\n// Family\n// ------\n\n[data-sassdoc='font-type'] {\n  font-size: size('h3');\n  font-weight: bold;\n}\n\n[data-sassdoc='font-stack'] {\n  @include font-family('code');\n  font-size: size('small');\n}\n\n\n// Face\n// ----\n\n[data-specimen-face] {\n  margin: size('shim') 0;\n}\n\n[data-specimen='sample'] {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n[data-specimen='aa'],\n[data-specimen='lorem'] {\n  padding: 0 size('shim');\n}\n\n[data-specimen='aa'] {\n  flex: 0 1 auto;\n  font-size: size('specimen');\n}\n\n[data-specimen='lorem'] {\n  flex: 1 1 auto;\n\n  span {\n    display: block;\n  }\n}\n","// Syntax Highlighting\n// ===================\n// Orginal Style from ethanschoonover.com/solarized\n// (c) Jeremy Hull <sourdrums@gmail.com>\n// sass-lint:disable force-element-nesting, class-name-format, indentation\n\n\n// hljs colors\n// -----------\n/// A map of colors for code-highlighting\n/// @group code\n/// @access private\n/// @type map\n$hljs-colors: (\n  'hljs-background': 'slight',\n  'hljs-text': 'code',\n  'hljs-comment': #93a1a1,\n  'hljs-green': #859900,\n  'hljs-cyan': #2aa198,\n  'hljs-blue': #268bd2,\n  'hljs-yellow': #b58900,\n  'hljs-orange': #cb4b16,\n  'hljs-red': #dc322f,\n  'hljs-formula': #eee8d5,\n  'hljs-shadow': 'code-shadow',\n);\n\n@include herman-add-colors('hljs-colors', $hljs-colors);\n\n\n// hljs-gradient\n// -------------\n/// Creates a faux-background gradient\n/// to overlay the edges of a code-block,\n/// so code-overflow is more obvious.\n/// @group code\n/// @access private\n/// @see {css} Code Blocks\n/// @parameter {string} $direction -\n///   Any valid gradient direction, e.g. `to top`\n/// @parameter {string} $small [false] -\n///   Use a smaller gradient for vertical/left overflow\n/// @return {background-image} -\n///   A linear-gradient with the appropriate color-stops\n@function hljs-gradient(\n  $direction,\n  $small: false\n) {\n  $color: color('hljs-background');\n  $dir: unquote($direction);\n  $first: if($small, size('quarter-shim'), size('half-shim'));\n  $second: if($small, size('shim'), size('gutter') + size('shim'));\n\n  @return linear-gradient($dir, $color $first, rgba($color, 0) $second);\n}\n\n\n// Code Blocks\n/// @name Code Blocks\n/// @group code\n/// @access private\n/// @require {function} hljs-gradient\n[data-sassdoc='hljs'],\n[data-sassdoc-page='index'] pre {\n  align-items: stretch;\n  background-color: color('hljs-background');\n  color: color('hljs-text');\n  display: flex;\n  position: relative;\n\n  code {\n    flex: 0 0 100%;\n    overflow-x: auto;\n    padding: size('shim');\n    padding-right: size('gutter');\n  }\n\n  @include before(' ') {\n    @include stretch(0, 0, 0, 0);\n    background:\n      hljs-gradient('to top', 'small'),\n      hljs-gradient('to right', 'small'),\n      hljs-gradient('to bottom', 'small'),\n      hljs-gradient('to left') no-repeat scroll;\n    box-shadow: 0 0 size('half-shim') color('hljs-shadow') inset;\n    pointer-events: none;\n  }\n}\n\n[data-sassdoc-page='index'] pre {\n  margin-bottom: size('gutter');\n}\n\n.hljs-comment,\n.hljs-quote {\n  color: color('hljs-comment');\n}\n\n// Solarized Green\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-addition {\n  color: color('hljs-green');\n}\n\n// Solarized Cyan\n.hljs-number,\n.hljs-string,\n.hljs-meta .hljs-meta-string,\n.hljs-literal,\n.hljs-doctag,\n.hljs-regexp {\n  color: color('hljs-cyan');\n}\n\n// Solarized Blue\n.hljs-title,\n.hljs-section,\n.hljs-name,\n.hljs-selector-id,\n.hljs-selector-class {\n  color: color('hljs-blue');\n}\n\n// Solarized Yellow\n.hljs-attribute,\n.hljs-attr,\n.hljs-variable,\n.hljs-template-variable,\n.hljs-class .hljs-title,\n.hljs-type {\n  color: color('hljs-yellow');\n}\n\n// Solarized Orange\n.hljs-symbol,\n.hljs-bullet,\n.hljs-subst,\n.hljs-meta,\n.hljs-meta .hljs-keyword,\n.hljs-selector-attr,\n.hljs-selector-pseudo,\n.hljs-link {\n  color: color('hljs-orange');\n}\n\n// Solarized Red\n.hljs-built_in,\n.hljs-deletion {\n  color: color('hljs-red');\n}\n\n.hljs-formula {\n  background: color('hljs-formula');\n}\n\n.hljs-emphasis {\n  font-style: italic;\n}\n\n.hljs-strong {\n  font-weight: bold;\n}\n","// Icon Preview\n// ============\n\n[data-sassdoc='icon-preview'] {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: size('gutter') negative('shim');\n}\n\n[data-sassdoc-icon] {\n  color: color('text-light');\n  flex: 1 1 15%;\n  margin: size('gutter') size('shim');\n  min-width: size('rhythm') * 5;\n\n  [data-icon] {\n    @include square('h1');\n  }\n}\n\n[data-sassdoc='icon-info'] {\n  font-size: size('small');\n  padding: size('half-shim') 0;\n  white-space: nowrap;\n}\n\n[data-sassdoc='icon-name'] {\n  color: color('text');\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n[data-sassdoc='icon-path'] {\n  @include font-family('code');\n}\n","// Ratio Preview\n// =============\n\n[data-sassdoc='ratio-demos'] {\n  line-height: 1.2;\n  overflow-x: auto;\n  padding: size('half-shim');\n  white-space: nowrap;\n}\n\n\n// Size Preview\n// ------------\n\n[data-sassdoc='size-demos'] {\n  margin-bottom: size('gutter');\n}\n\n[data-sassdoc='size-details'] {\n  @include font-family('code');\n  font-size: size('small');\n}\n\n[data-sassdoc='size-value'] {\n  color: color('text-light');\n}\n\n[data-size-demo] {\n  margin-bottom: size('shim');\n}\n\n[data-size-demo='text'] {\n  overflow: hidden;\n  padding: size('half-shim');\n  white-space: nowrap;\n}\n\n[data-size-demo='ruler'] {\n  background: linear-gradient(to right, currentColor 50%, transparent 50%);\n  background-size: 2em auto;\n  height: 1em;\n}\n"]}