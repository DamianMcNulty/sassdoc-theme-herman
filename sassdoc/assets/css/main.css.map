{"version":3,"sources":["initial/_webfonts.scss","../node_modules/accoutrement-fonts/sass/_api.scss","../node_modules/accoutrement-fonts/sass/_helpers.scss","../node_modules/sanitize.css/sanitize.scss","../node_modules/accoutrement-scale/sass/_units.scss","main.css","config/_colors.scss","../node_modules/accoutrement-color/sass/_utils.scss","config/_fonts.scss","initial/_sanitize.scss","../node_modules/accoutrement-color/sass/_config.scss","initial/_root.scss","config/_scale.scss","../node_modules/accoutrement-scale/sass/_scale.scss","initial/_headings.scss","layout/_root.scss","layout/_regions.scss","component/_item.scss","component/_index.scss"],"names":[],"mappings":"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;;AT8RD;EQnQE,sBTsB8B;ESrB9B,wBAAe;ECxBf,oBAAoB;EACpB,0BFCc,EEAf;;AT8RD;ES3RE,qBAAsB,EAWvB;ETkRC;ISzRI,eAAe,EAChB;ET0RH;ISvRI,eJqBY,EIpBb;;ACtCL;;EAEE,mBAAmB,EACpB;;AAGD;EACE,sBAAc;EAAd,qBAAc;EAAd,cAAc;EACd,wBAAgB;EAAhB,oBAAgB;EAAhB,gBAAgB;EAChB,oBHiBc,EGhBf;;AV8TD;EWtUE,oBJwBc,EIvBf;;AXwUD;EWlUE,0BZ4D8B;EY3D9B,YAAY,EACb;;AXoUD;EJxRE,mFO7BgE;EKqBhE,gBTsB8B;ESrB9B,wBAAe;EGhCf,eN0CgB;EMzChB,mBAAmB;EACnB,oBAAoB,EACrB;;AXoUD;EW9TE,wBAAgB;EAAhB,oBAAgB;EAAhB,gBAAgB,EACjB;;AXgUD;EW5TI,eTeS;ESdT,eAAe;EACf,mBAAmB;EACnB,2BAA2B,EAC5B;;AX8TH;EW3TI,eNqBc,EMpBf;;AX6TH;EWxTI,eNec;EMdd,sBAAsB,EACvB;;AX0TH;EWnTE,yBAAiB;EAAjB,qBAAiB;EAAjB,iBAAiB;EACjB,iBAAiB,EAClB;;AXqTD;EY1WE,qBAAwB,EACzB;;AZ4WD;EYzWE,0BLqBc,EKpBf;;AZ2WD;;;;Ea5WI,0BNqBY,EMpBb;;AbiXH;EQxUE,sBTsB8B;ESrB9B,wBAAe,EKtCd;;AbiXH;EQ5UE,sBTsB8B;ESrB9B,wBAAe,EKlCd;;AbiXH;Ea9WI,0BdoD4B,EcnD7B","file":"main.css","sourcesContent":["// Type\n// ====\n\n/*!\n * Web Fonts from fontspring.com\n *\n * All OpenType features and all extended glyphs have been removed.\n * Fully installable fonts can be purchased at http://www.fontspring.com\n *\n * The fonts included in this stylesheet are subject to the End User License you purchased\n * from Fontspring. The fonts are protected under domestic and international trademark and\n * copyright law. You are prohibited from modifying, reverse engineering, duplicating, or\n * distributing this font software.\n *\n * (c) 2010-2015 Fontspring\n *\n *\n *\n *\n * The fonts included are copyrighted by the vendor listed below.\n *\n * Vendor:      FontSite Inc.\n * License URL: http://www.fontspring.com/licenses/fontsite/webfont\n *\n *\n */\n\n@include import-webfonts;\n","// Fonts API\n// =========\n\n\n// Font Formats\n// ------------\n/// The file formats to include when importing a font-face.\n/// @group config\n/// @type List\n$font-formats: 'woff' 'ttf' !default;\n\n\n// Font Path\n// ---------\n/// The path to your fonts directory,\n/// often relative to your output CSS.\n/// @group config\n/// @type String\n$font-path: '../fonts/' !default;\n\n\n// Fonts\n// -----\n/// A map for managing all your fonts on a project.\n/// @group config\n/// @example -\n///   $fonts: (\n///     'sans': (\n///       'name': 'FranklinGothic',\n///       'stack': ('Helvetica', 'Arial', 'sans-serif'),\n///       'regular': 'franklingothic-regular-filename',\n///       'bold': 'franklingothic-bold-filename',\n///       'bold' 'italic': 'franklingothic-bolditalic-filename',\n///     ),\n///   );\n$fonts: () !default;\n\n\n// Font Family [function]\n// ----------------------\n/// Access a font-family from your `$fonts` map.\n/// @group api\n@function font-family(\n  $key\n) {\n  $font: map-get($fonts, $key);\n  $name: map-get($font, 'name') or $key;\n  @return join($name, map-get($font, 'stack'), 'comma');\n}\n\n\n// Font Family [mixin]\n// -------------------\n/// @group api\n/// Output a font-family from your `$fonts` map.\n@mixin font-family(\n  $key\n) {\n  font-family: font-family($key);\n}\n\n\n// Font-Face [mixin]\n// -----------------\n/// A wrapper utility for the CSS `@font-face` block.\n/// @group api\n@mixin font-face(\n  $name,\n  $path,\n  $variant: ('normal', 'normal'),\n  $formats: $font-formats\n) {\n  $variant: _parse-font-variant($variant);\n  $src: ();\n\n  @each $format in $formats {\n    $suffix: '';\n\n    @if ($format == 'eot') {\n      $suffix: '?#iefix';\n    } @else if index(('svg', 'svgz'), $format) {\n      $suffix: '#' + $name;\n    }\n\n    $item: _font-src($path, $format, $suffix);\n    $src: append($src, $item, 'comma');\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: unquote(map-get($variant, 'style'));\n    font-weight: unquote(map-get($variant, 'weight'));\n\n    @if index($formats, 'eot') {\n      // IE9 compat mode (eot)\n      src: _font-src($path, 'eot');\n    }\n\n    // IE6-IE8 (eot) - with '?#iefix'\n    // Modern Browsers (woff, woff2)\n    // Safari, Android, iOS (ttf, otf)\n    // Legacy iOS (svg, svgz) - with '#svgName'\n    src: $src;\n  }\n}\n\n\n// Import WebFonts\n// ---------------\n/// Import webfonts from your font config list\n/// @group api\n@mixin import-webfonts(\n  $fonts: $fonts,\n  $formats: $font-formats\n) {\n  @if (length($fonts) > 0) {\n    $var-options: join($font-style-options, $font-weight-options);\n    $var-options: join($var-options, ('normal', 'regular'));\n\n    @each $name, $font in $fonts {\n      $variants: ();\n\n      @each $key, $value in $font {\n        $first: nth($key, 1);\n\n        @if ($first == 'name') {\n          $name: $value;\n        } @else if index($var-options, $first) {\n          $variants: map-merge($variants, ($key: $value));\n        }\n      }\n\n      @if (length($variants) > 0) {\n        @each $variant, $path in $variants {\n          $variant: if(($variant == 'regular'), 'normal', $variant);\n          @include font-face($name, $path, $variant, $formats);\n        }\n      }\n    }\n  }\n}\n","// Internal Font Helpers\n// =====================\n\n$font-style-options: 'italic' 'oblique';\n$font-weight-options: 100 200 300 400 500 600 700 800 900 'bold';\n$font-format-names: (\n  'ttf': 'truetype',\n  'otf': 'opentype',\n  'woff': 'woff',\n  'woff2': 'woff2',\n  'svg': 'svg',\n  'svgz': 'svg',\n  'eot': 'embedded-opentype',\n);\n\n\n// Font-URL [function]\n// -------------------\n/// Get a CSS-ready URL function (`url('my/path')`) with\n/// the full path to a file in the fonts directory.\n/// @param {String} $path -\n///   A path relative to the fonts directory.\n/// @return {$string} -\n///   The full path to a font file, in CSS `url('my/path')` format.\n@function font-url(\n  $path\n) {\n  $full-path: quote($font-path + $path);\n  @return url($full-path);\n}\n\n\n// Font Src\n// --------\n/// Get the font `src` value for a given font path and format.\n/// @access private\n@function _font-src(\n  $path,\n  $format,\n  $suffix: ''\n) {\n  $url: $path + '.' + $format + $suffix;\n  $format: map-get($font-format-names, $format);\n\n  @return font-url($url) format($format);\n}\n\n\n// Parse Font Variant\n// -------------------\n/// Parse a list of font variants into a map of styles and weights.\n/// @access private\n/// @param {List} $variant -\n///   A list of font variants, such as `('bold', 'italic')`.\n/// @return {$map} -\n///   A map of `style` and `weight` values.\n@function _parse-font-variant(\n  $variant\n) {\n  $return: (\n    'style': 'normal',\n    'weight': 'normal',\n  );\n\n  @each $item in $variant {\n    @if index($font-style-options, $item) {\n      $return: map-merge($return, ('style': $item));\n    } @else if index($font-weight-options, $item) {\n      $return: map-merge($return, ('weight': $item));\n    }\n  }\n\n  @return $return;\n}\n","/*! sanitize.css v3.0.0 | CC0 1.0 Public Domain | github.com/10up/sanitize.css */\n\n$root-background-color: #FFFFFF !default;\n$root-box-sizing: border-box !default;\n$root-color: #000000 !default;\n$root-cursor: default !default;\n$root-font-family: sans-serif !default;\n$root-font-size: 100% !default;\n$root-line-height: 1.5 !default;\n$root-text-rendering: optimizeLegibility !default;\n\n$anchor-text-decoration: none !default;\n$background-repeat: no-repeat !default;\n$form-element-background-color: transparent !default;\n$form-element-min-height: if(unitless($root-line-height), #{$root-line-height}em, if(unit($root-line-height) != '%', $root-line-height, null)) !default;\n$media-element-vertical-align: middle !default;\n$monospace-font-family: monospace !default;\n$nav-list-style: none !default;\n$selection-background-color: #B3D4FC !default;\n$selection-color: #ffffff !default;\n$selection-text-shadow: none !default;\n$small-font-size: 75% !default;\n$table-border-collapse: collapse !default;\n$table-border-spacing: 0 !default;\n$textarea-resize: vertical !default;\n\n\n\n/*\n * Normalization\n */\n\naudio:not([controls]) {\n\tdisplay: none; // Chrome 44-, iOS 8+, Safari 9+\n}\n\nbutton {\n\toverflow: visible; // Internet Explorer 11-\n\t-webkit-appearance: button; // iOS 8+\n}\n\ndetails {\n\tdisplay: block; // Edge 12+, Firefox 40+, Internet Explorer 11-, Windows Phone 8.1+\n}\n\nhtml {\n\t-ms-overflow-style: -ms-autohiding-scrollbar; // Edge 12+, Internet Explorer 11-\n\toverflow-y: scroll; // All browsers without overlaying scrollbars\n\t-webkit-text-size-adjust: 100%; // iOS 8+\n}\n\ninput {\n\t-webkit-border-radius: 0; // iOS 8+\n\n\t&[type=\"button\"], &[type=\"reset\"], &[type=\"submit\"] {\n\t\t-webkit-appearance: button; // iOS 8+\n\t}\n\n\t&[type=\"number\"] {\n\t\twidth: auto; // Firefox 36+\n\t}\n\n\t&[type=\"search\"] {\n\t\t-webkit-appearance: textfield; // Chrome 45+, Safari 9+\n\n\t\t&::-webkit-search-cancel-button,\n\t\t&::-webkit-search-decoration {\n\t\t\t-webkit-appearance: none; // Chrome 45+, Safari 9+\n\t\t}\n\t}\n}\n\nmain {\n\tdisplay: block; // Android 4.3-, Internet Explorer 11-, Windows Phone 8.1+\n}\n\npre {\n\toverflow: auto; // Internet Explorer 11-\n}\n\nprogress {\n\tdisplay: inline-block; // Internet Explorer 11-, Windows Phone 8.1+\n}\n\nsmall {\n\tfont-size: $small-font-size; // All browsers\n}\n\nsummary {\n\tdisplay: block; // Firefox 40+, Internet Explorer 11-, Windows Phone 8.1+\n}\n\nsvg:not(:root) {\n\toverflow: hidden; // Internet Explorer 11-\n}\n\ntemplate {\n\tdisplay: none; // Android 4.3-, Internet Explorer 11-, iOS 7-, Safari 7-, Windows Phone 8.1+\n}\n\ntextarea {\n\toverflow: auto; // Edge 12+, Internet Explorer 11-\n}\n\n[hidden] {\n\tdisplay: none; // Internet Explorer 10-\n}\n\n/*\n * Universal inheritance\n */\n\n*,\n::before,\n::after {\n\tbox-sizing: inherit;\n}\n\n* {\n\tfont-size: inherit;\n\tline-height: inherit;\n}\n\n::before,\n::after {\n\ttext-decoration: inherit;\n\tvertical-align: inherit;\n}\n\n\n\n/*\n * Opinionated defaults\n */\n\n// specify the border style and width of all elements\n\n*,\n::before,\n::after {\n\tborder-style: solid;\n\tborder-width: 0;\n}\n\n// specify the core styles of all elements\n\n* {\n\tbackground-repeat: $background-repeat;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n// specify the root styles of the document\n\n:root {\n\tbackground-color: $root-background-color;\n\tbox-sizing: $root-box-sizing;\n\tcolor: $root-color;\n\tcursor: $root-cursor;\n\tfont: #{$root-font-size}/#{$root-line-height} $root-font-family;\n\ttext-rendering: $root-text-rendering;\n}\n\n// specify the text decoration of anchors\n\na {\n\ttext-decoration: $anchor-text-decoration;\n}\n\n// specify the alignment of media elements\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n\tvertical-align: $media-element-vertical-align;\n}\n\n// specify the background color of form elements\n\nbutton,\ninput,\nselect,\ntextarea {\n\tbackground-color: $form-element-background-color;\n}\n\n// specify the inherited color and font of form elements\n\nbutton,\ninput,\nselect,\ntextarea {\n\tcolor: inherit;\n\tfont-family: inherit;\n\tfont-style: inherit;\n\tfont-weight: inherit;\n}\n\n// specify the minimum height of form elements\n\nbutton,\n[type=\"button\"],\n[type=\"date\"],\n[type=\"datetime\"],\n[type=\"datetime-local\"],\n[type=\"email\"],\n[type=\"month\"],\n[type=\"number\"],\n[type=\"password\"],\n[type=\"reset\"],\n[type=\"search\"],\n[type=\"submit\"],\n[type=\"tel\"],\n[type=\"text\"],\n[type=\"time\"],\n[type=\"url\"],\n[type=\"week\"],\nselect,\ntextarea {\n\tmin-height: $form-element-min-height;\n}\n\n// specify the font family of code elements\n\ncode,\nkbd,\npre,\nsamp {\n\tfont-family: $monospace-font-family, monospace;\n}\n\n// specify the list style of nav lists\n\nnav ol,\nnav ul {\n\tlist-style: $nav-list-style;\n}\n\n// specify the standard appearance of selects\n\nselect {\n\t-moz-appearance: none;    // Firefox 40+\n\t-webkit-appearance: none; // Chrome 45+\n\n\t&::-ms-expand {\n\t\tdisplay: none;        // Edge 12+, Internet Explorer 11-\n\t}\n\n\t&::-ms-value {\n\t\tcolor: currentColor;  // Edge 12+, Internet Explorer 11-\n\t}\n}\n\n// specify the border styling of tables\n\ntable {\n\tborder-collapse: $table-border-collapse;\n\tborder-spacing: $table-border-spacing;\n}\n\n// specify the resizability of textareas\n\ntextarea {\n\tresize: $textarea-resize;\n}\n\n// specify the background color, font color and drop shadow of text selections\n\n::-moz-selection {\n\tbackground-color: $selection-background-color; // required when declaring ::selection\n\tcolor: $selection-color;\n\ttext-shadow: $selection-text-shadow;\n}\n\n::selection {\n\tbackground-color: $selection-background-color; // required when declaring ::selection\n\tcolor: $selection-color;\n\ttext-shadow: $selection-text-shadow;\n}\n\n// specify the progress cursor of updating elements\n\n[aria-busy=\"true\"] {\n\tcursor: progress;\n}\n\n// specify the pointer cursor of trigger elements\n\n[aria-controls] {\n\tcursor: pointer;\n}\n\n// specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements\n\n[aria-disabled] {\n\tcursor: default;\n}\n\n// specify the style of visually hidden yet accessible elements\n\n[hidden][aria-hidden=\"false\"] {\n\tclip: rect(0 0 0 0);\n\tdisplay: inherit;\n\tposition: absolute;\n\n\t&:focus {\n\t\tclip: auto;\n\t}\n}\n","// Unit Helpers\n// ------------\n\n@import 'scale.config';\n\n\n// Convert Length\n// --------------\n@function convert-length(\n  $length,\n  $to-unit,\n  $from-context: $base-size,\n  $to-context: $from-context\n) {\n  $from-unit: unit($length);\n\n  // Optimize for cases where `from` and `to` units are accidentally the same.\n  @if $from-unit == $to-unit {\n    @return $length;\n  }\n\n\n  // Context values must be in px\n  @if unit($from-context) != 'px' {\n    @warn 'Paremeter $from-context must resolve to a value in pixel units.';\n  }\n\n  @if unit($to-context) != 'px' {\n    @warn 'Parameter $to-context must resolve to a value in pixel units.';\n  }\n\n\n  // Convert input length to pixels\n  $px-length: $length;\n\n  @if $from-unit != 'px' {\n\n    // Convert relative units using the from-context parameter.\n    @if $from-unit == 'em' {\n      $px-length: $length * $from-context / 1em;\n    } @else if $from-unit == 'rem' {\n      $px-length: $length * $base-size / 1rem;\n    } @else if $from-unit == '%' {\n      $px-length: $length * $from-context / 100%;\n    } @else if $from-unit == 'ex'  {\n      $px-length: $length * $from-context / 2ex;\n    }\n\n    // Convert absolute units using Sass' conversion table.\n    @else if index('in' 'mm' 'cm' 'pt' 'pc', $from-unit) {\n      $px-length: 0px + $length;\n    }\n\n    // Certain units can't be converted.\n    @else if index('ch' 'vw' 'vh' 'vmin', $from-unit) {\n      @warn \"#{$from-unit} units can't be reliably converted; Returning original value.\";\n      @return $length;\n    } @else {\n      @warn \"#{$from-unit} is an unknown length unit. Returning original value.\";\n      @return $length;\n    }\n  }\n\n  // Convert length in pixels to the output unit\n  $output-length: $px-length;\n\n  @if $to-unit != 'px' {\n\n    // Relative units\n    @if $to-unit == 'em' {\n      $output-length: $px-length * 1em / $to-context;\n    } @else if $to-unit == 'rem' {\n      $output-length: $px-length * 1rem / $base-size;\n    } @else if $to-unit == '%' {\n      $output-length: $px-length * 100% / $to-context;\n    } @else if $to-unit == 'ex' {\n      $output-length: $px-length * 2ex / $to-context;\n    }\n\n    // Absolute units\n    @else if $to-unit == 'in' {\n      $output-length: 0in + $px-length;\n    } @else if $to-unit == 'mm' {\n      $output-length: 0mm + $px-length;\n    } @else if $to-unit == 'cm' {\n      $output-length: 0cm + $px-length;\n    } @else if $to-unit == 'pt' {\n      $output-length: 0pt + $px-length;\n    } @else if $to-unit == 'pc' {\n      $output-length: 0pc + $px-length;\n    }\n\n    // Non-convertible units\n    @else if index('ch' 'vw' 'vh' 'vmin', $to-unit) {\n      @warn \"#{$to-unit} units can't be reliably converted; Returning original value.\";\n      @return $length;\n    } @else {\n      @warn \"#{$to-unit} is an unknown length unit. Returning original value.\";\n      @return $length;\n    }\n  }\n\n  @return $output-length;\n}\n","/*!\n * Web Fonts from fontspring.com\n *\n * All OpenType features and all extended glyphs have been removed.\n * Fully installable fonts can be purchased at http://www.fontspring.com\n *\n * The fonts included in this stylesheet are subject to the End User License you purchased\n * from Fontspring. The fonts are protected under domestic and international trademark and\n * copyright law. You are prohibited from modifying, reverse engineering, duplicating, or\n * distributing this font software.\n *\n * (c) 2010-2015 Fontspring\n *\n *\n *\n *\n * The fonts included are copyrighted by the vendor listed below.\n *\n * Vendor:      FontSite Inc.\n * License URL: http://www.fontspring.com/licenses/fontsite/webfont\n *\n *\n */\n@font-face {\n  font-family: \"CenturyOldStyle\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/serif/CenturyOldStyle-regular.woff\") format(\"woff\"), url(\"../fonts/serif/CenturyOldStyle-regular.ttf\") format(\"truetype\"); }\n\n@font-face {\n  font-family: \"CenturyOldStyle\";\n  font-style: italic;\n  font-weight: normal;\n  src: url(\"../fonts/serif/CenturyOldStyle-italic.woff\") format(\"woff\"), url(\"../fonts/serif/CenturyOldStyle-italic.ttf\") format(\"truetype\"); }\n\n@font-face {\n  font-family: \"CenturyOldStyle\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/serif/CenturyOldStyle-bold.woff\") format(\"woff\"), url(\"../fonts/serif/CenturyOldStyle-bold.ttf\") format(\"truetype\"); }\n\n@font-face {\n  font-family: \"SourceSansPro\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/sans/sourcesanspro-regular-webfont.woff\") format(\"woff\"), url(\"../fonts/sans/sourcesanspro-regular-webfont.ttf\") format(\"truetype\"); }\n\n@font-face {\n  font-family: \"SourceSansPro\";\n  font-style: italic;\n  font-weight: normal;\n  src: url(\"../fonts/sans/sourcesanspro-italic-webfont.woff\") format(\"woff\"), url(\"../fonts/sans/sourcesanspro-italic-webfont.ttf\") format(\"truetype\"); }\n\n@font-face {\n  font-family: \"SourceSansPro\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/sans/sourcesanspro-bold-webfont.woff\") format(\"woff\"), url(\"../fonts/sans/sourcesanspro-bold-webfont.ttf\") format(\"truetype\"); }\n\n@font-face {\n  font-family: \"SourceCodePro\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/code/sourcecodepro-regular-webfont.woff\") format(\"woff\"), url(\"../fonts/code/sourcecodepro-regular-webfont.ttf\") format(\"truetype\"); }\n\n@font-face {\n  font-family: \"SourceCodePro\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/code/sourcecodepro-bold-webfont.woff\") format(\"woff\"), url(\"../fonts/code/sourcecodepro-bold-webfont.ttf\") format(\"truetype\"); }\n\n/*! sanitize.css v3.0.0 | CC0 1.0 Public Domain | github.com/10up/sanitize.css */\n/*\n * Normalization\n */\naudio:not([controls]) {\n  display: none; }\n\nbutton {\n  overflow: visible;\n  -webkit-appearance: button; }\n\ndetails {\n  display: block; }\n\nhtml {\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  overflow-y: scroll;\n  -webkit-text-size-adjust: 100%; }\n\ninput {\n  -webkit-border-radius: 0; }\n  input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"] {\n    -webkit-appearance: button; }\n  input[type=\"number\"] {\n    width: auto; }\n  input[type=\"search\"] {\n    -webkit-appearance: textfield; }\n    input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration {\n      -webkit-appearance: none; }\n\nmain {\n  display: block; }\n\npre {\n  overflow: auto; }\n\nprogress {\n  display: inline-block; }\n\nsmall {\n  font-size: 0.81818rem; }\n\nsummary {\n  display: block; }\n\nsvg:not(:root) {\n  overflow: hidden; }\n\ntemplate {\n  display: none; }\n\ntextarea {\n  overflow: auto; }\n\n[hidden] {\n  display: none; }\n\n/*\n * Universal inheritance\n */\n*,\n::before,\n::after {\n  box-sizing: inherit; }\n\n* {\n  font-size: inherit;\n  line-height: inherit; }\n\n::before,\n::after {\n  text-decoration: inherit;\n  vertical-align: inherit; }\n\n/*\n * Opinionated defaults\n */\n*,\n::before,\n::after {\n  border-style: solid;\n  border-width: 0; }\n\n* {\n  background-repeat: no-repeat;\n  margin: 0;\n  padding: 0; }\n\n:root {\n  background-color: #fff;\n  box-sizing: border-box;\n  color: #1b4654;\n  cursor: default;\n  font: 137.5% / 1.40909em \"CenturyOldStyle\", \"Baskerville\", \"Palatino\", \"Cambria\", \"Georgia\", \"serif\";\n  text-rendering: auto; }\n\na {\n  text-decoration: underline; }\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle; }\n\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent; }\n\nbutton,\ninput,\nselect,\ntextarea {\n  color: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit; }\n\nbutton,\n[type=\"button\"],\n[type=\"date\"],\n[type=\"datetime\"],\n[type=\"datetime-local\"],\n[type=\"email\"],\n[type=\"month\"],\n[type=\"number\"],\n[type=\"password\"],\n[type=\"reset\"],\n[type=\"search\"],\n[type=\"submit\"],\n[type=\"tel\"],\n[type=\"text\"],\n[type=\"time\"],\n[type=\"url\"],\n[type=\"week\"],\nselect,\ntextarea {\n  min-height: 1.40909em; }\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: \"SourceCodePro\", \"Consolas\", \"Menlo\", \"Monaco\", \"Lucida Console\", \"Liberation Mono\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Courier New\", \"monospace\", \"serif\", monospace; }\n\nnav ol,\nnav ul {\n  list-style: none; }\n\nselect {\n  -moz-appearance: none;\n  -webkit-appearance: none; }\n  select::-ms-expand {\n    display: none; }\n  select::-ms-value {\n    color: currentColor; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntextarea {\n  resize: vertical; }\n\n::-moz-selection {\n  background-color: #c75000;\n  color: #fff;\n  text-shadow: none; }\n\n::selection {\n  background-color: #c75000;\n  color: #fff;\n  text-shadow: none; }\n\n[aria-busy=\"true\"] {\n  cursor: progress; }\n\n[aria-controls] {\n  cursor: pointer; }\n\n[aria-disabled] {\n  cursor: default; }\n\n[hidden][aria-hidden=\"false\"] {\n  clip: rect(0 0 0 0);\n  display: inherit;\n  position: absolute; }\n  [hidden][aria-hidden=\"false\"]:focus {\n    clip: auto; }\n\n:root {\n  font-size: calc(115% + 0.25vw); }\n\n[href]:link, [href]:visited {\n  color: #c75000;\n  text-decoration: none; }\n\n[href]:hover, [href]:focus, [href]:active {\n  color: #b34800;\n  text-decoration: underline; }\n\nimg,\nobject,\nvideo {\n  height: auto;\n  max-width: 100%; }\n\npre {\n  background-color: #ebecec;\n  border-radius: 0.35227rem;\n  box-shadow: 0 0 0.35227rem #b8bdbf inset;\n  padding: 0.70455rem; }\n\npre,\ncode {\n  font-size: 0.72727rem;\n  line-height: 1.05682rem; }\n\n[data-sassdoc='project-title'] {\n  font-size: 2.72727rem;\n  line-height: 2.81818rem;\n  font-style: italic;\n  font-weight: normal; }\n  [data-sassdoc='project-title'] [href]:link, [data-sassdoc='project-title'] [href]:visited {\n    color: inherit; }\n  [data-sassdoc='project-title'] [href]:hover, [data-sassdoc='project-title'] [href]:focus, [data-sassdoc='project-title'] [href]:active {\n    color: #c75000; }\n\n[data-sassdoc='page-title'] {\n  font-size: 1.95455rem;\n  line-height: 2.11364rem;\n  margin-bottom: 0.70455rem;\n  text-transform: capitalize; }\n\n[data-sassdoc='item-title'] {\n  font-size: 1.40909rem;\n  line-height: 1.40909rem;\n  font-weight: normal;\n  margin-bottom: 0.70455rem; }\n\n[data-sassdoc='nav-title'] {\n  margin: 0.70455rem 0; }\n  [data-sassdoc='nav-title'] [href]:link, [data-sassdoc='nav-title'] [href]:visited {\n    color: inherit; }\n  [data-sassdoc='nav-title'] [href]:hover, [data-sassdoc='nav-title'] [href]:focus, [data-sassdoc='nav-title'] [href]:active {\n    color: #c75000; }\n\nhtml,\nbody {\n  overflow-x: hidden; }\n\nbody {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.70455rem; }\n\n[data-sassdoc-region] {\n  padding: 0.70455rem; }\n\n[data-sassdoc-region='banner'] {\n  margin-bottom: 1.40909rem;\n  width: 100%; }\n\n[data-sassdoc='project-version'] {\n  font-family: \"SourceSansPro\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\";\n  font-size: 1rem;\n  line-height: 1.40909rem;\n  color: #b8bdbf;\n  font-style: normal;\n  font-weight: normal; }\n\n[data-sassdoc-region='nav'] {\n  flex: 1 1 10rem; }\n\n[data-sassdoc-nav]:link, [data-sassdoc-nav]:visited {\n  color: #1b4654;\n  display: block;\n  font-style: italic;\n  text-transform: capitalize; }\n\n[data-sassdoc-nav]:hover, [data-sassdoc-nav]:focus, [data-sassdoc-nav]:active {\n  color: #c75000; }\n\n[data-sassdoc-nav='is-active']:link, [data-sassdoc-nav='is-active']:visited {\n  color: #c75000;\n  text-decoration: none; }\n\n[data-sassdoc-region='main'] {\n  flex: 15 1 24rem;\n  overflow: hidden; }\n\n[data-sassdoc-item] {\n  margin: 2.81818rem 0; }\n\n[data-sassdoc='item-description'] {\n  margin-bottom: 0.70455rem; }\n\n[data-sassdoc-page='index'] h1,\n[data-sassdoc-page='index'] h2,\n[data-sassdoc-page='index'] h3,\n[data-sassdoc-page='index'] h4 {\n  margin-bottom: 0.70455rem; }\n\n[data-sassdoc-page='index'] h1 {\n  font-size: 1.95455rem;\n  line-height: 2.11364rem; }\n\n[data-sassdoc-page='index'] h2 {\n  font-size: 1.40909rem;\n  line-height: 1.40909rem; }\n\n[data-sassdoc-page='index'] p {\n  margin-bottom: 1.40909rem; }\n","// Color Settings\n// ==============\n\n@import '../../node_modules/accoutrement-color/sass/color';\n\n\n// Brand Colors\n// ------------\n/// We use bright primary colors for the main brand,\n/// everything else is based on these colors.\n/// @group colors\n$brand-colors: (\n  'brand-orange': hsl(24, 100%, 62%),\n  'brand-blue': hsl(195, 85%, 62%),\n  'brand-pink': hsl(330, 85%, 62%),\n);\n\n\n// Accent Colors\n// -------------\n/// We have a set of secondary accent colors\n/// to help flesh out the palette.\n/// @group colors\n$accent-colors: (\n  'lightest': #fff,\n  'lighter': 'brand-blue' ('tint': 80%, 'desaturate': 80%),\n  'light': 'brand-blue' ('tint': 30%, 'desaturate': 80%),\n  'dark': 'brand-blue' ('shade': 65%),\n  'go': hsl(75, 65%, 62%),\n  'yield': hsl(45, 85%, 62%),\n  'stop': hsl(0, 85%, 62%),\n);\n\n\n// Base Colors\n// -----------\n/// A merged map of the brand and accent colors.\n/// @access private\n$base-colors: map-merge($brand-colors, $accent-colors);\n\n\n// Colors\n// ------\n/// Specific uses of the color palette across the site.\n/// @access private\n$colors: map-merge(\n  $base-colors, (\n    'contrast-light': 'lightest',\n    'contrast-dark': 'dark',\n    'background': 'lightest',\n    'text': 'dark',\n    'callout': 'lighter',\n    'shadow': 'light',\n    'action': 'brand-orange' ('darken': 23%),\n    'focus': 'action' ('shade': 10%),\n    'active': 'action',\n    'accent': 'brand-pink' ('darken': 14%),\n  )\n);\n","// Color Utilities\n// ===============\n\n\n// Tint\n// ----\n/// Mix a color with `white` to get a lighter tint.\n///\n/// @group util\n///\n/// @param {String | list} $color -\n///   The name of a color in your palette,\n///   with optional adjustments in the form of `(<function-name>: <args>)`.\n/// @param {Percentage} $percentage -\n///   The percentage of white to mix in.\n///   Higher percentages will result in a lighter tint.\n/// @return {Color} -\n///   A calculated css-ready color-value based on your global color palette.\n@function tint(\n  $color,\n  $percentage\n) {\n  $color: color($color);\n\n  @return mix(#fff, $color, $percentage);\n}\n\n\n// Shade\n// -----\n/// Mix a color with `black` to get a darker shade.\n///\n/// @group util\n///\n/// @param {String | list} $color -\n///   The name of a color in your palette,\n///   with optional adjustments in the form of `(<function-name>: <args>)`.\n/// @param {Percentage} $percentage -\n///   The percentage of black to mix in.\n///   Higher percentages will result in a darker shade.\n/// @return {Color} -\n///   A calculated css-ready color-value based on your global color palette.\n@function shade(\n  $color,\n  $percentage\n) {\n  $color: color($color);\n\n  @return mix(#000, $color, $percentage);\n}\n","// Font Settings\n// =============\n\n@import '../../node_modules/accoutrement-strings/sass/strings';\n@import '../../node_modules/accoutrement-fonts/sass/fonts';\n\n\n// Font Formats\n// ------------\n/// @access private\n$font-formats: 'woff' 'ttf';\n\n\n// Fonts\n// -----\n/// A map of the fonts we use,\n/// their variants, font-stacks, and webfont paths.\n/// @group typography\n$fonts: (\n  'body': (\n    'name': 'CenturyOldStyle',\n    'stack': ('Baskerville', 'Palatino', 'Cambria', 'Georgia', 'serif'),\n    'normal': 'serif/CenturyOldStyle-regular',\n    'italic': 'serif/CenturyOldStyle-italic',\n    'bold': 'serif/CenturyOldStyle-bold',\n  ),\n\n  'sans': (\n    'name': 'SourceSansPro',\n    'stack': ('Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'),\n    'regular': 'sans/sourcesanspro-regular-webfont',\n    'italic': 'sans/sourcesanspro-italic-webfont',\n    'bold': 'sans/sourcesanspro-bold-webfont',\n    'bold italic': 'sans/sourcesanspro-bolditalic-webfont',\n  ),\n\n  'code': (\n    'name': 'SourceCodePro',\n    'stack': ('Consolas', 'Menlo', 'Monaco', 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', 'monospace', 'serif'),\n    'regular': 'code/sourcecodepro-regular-webfont',\n    'bold': 'code/sourcecodepro-bold-webfont',\n  ),\n);\n","// Sanitize\n// ========\n// https://github.com/10up/sanitize.css\n\n\n$root-background-color: color('background');\n$root-color: color('text');\n$root-font-family: font-family('body');\n$root-font-size: percentage($base-size / $_browser-default-font-size);\n$root-line-height: size('rhythm', em);\n$root-text-rendering: auto;\n$anchor-text-decoration: underline;\n$monospace-font-family: font-family('code');\n$selection-background-color: color('action');\n$selection-color: contrast('action');\n$small-font-size: size('small');\n\n\n@import '../node_modules/sanitize.css/sanitize.scss';\n","// Color Config\n// ============\n// Configure and access your color palette.\n\n\n// Color Palette\n// -------------\n/// Define your color palette with a `name`, `value`,\n/// and optional `adjustments`.\n/// Colors can reference other colors in the map,\n/// and adjust them using sass color functions\n/// using a `(<function-name>: <args>)` syntax.\n/// Adjustment functions are called in this format:\n/// `function-name($color-value, $args...)`.\n///\n/// @group config\n///\n/// @example scss - sample color palette\n///   $colors: (\n///     'name': <value> (<function-name>: <args>),\n///\n///     'brand-pink': hsl(330, 85%, 62%),\n///     'brand-light': #fff,\n///     'brand-dark': #222,\n///\n///     'background': 'brand-light',\n///     'text': 'brand-dark',\n///     'link': 'brand-pink',\n///     'focus': 'link' ('darken': 15%),\n///   );\n$colors: () !default;\n\n\n// Color\n// -----\n/// Access any color in your palette,\n/// using the same syntax as the `$colors` map\n///\n/// @group config\n///\n/// @param {String | List} $color -\n///   The name of a color in your palette,\n///   with optional adjustments in the form of `(<function-name>: <args>)`.\n/// @return {Color} -\n///   A calculated css-ready color-value based on your global color palette.\n@function color(\n  $color\n) {\n  // Parse arguments\n  $color: map-get($colors, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n\n  // Recursive check\n  $color: if(map-has-key($colors, $base), color($base), $base);\n\n  // Adjustments\n  @each $function, $value in $adjust {\n    @if function-exists($function) {\n      // @@@ this works around a libsass bug...\n      $call: join(($function, $color), $value);\n      $color: call($call...);\n    } @else {\n      @warn '#{$function} is not a valid color function.';\n    }\n  }\n\n  @return $color;\n}\n","// Root\n// ====\n\n\n:root {\n  font-size: calc(115% + 0.25vw);\n}\n\n\n// Links\n// -----\n\n$link: '&:link, &:visited';\n$focus: '&:hover, &:focus, &:active';\n\n[href] {\n  #{$link} {\n    color: color('action');\n    text-decoration: none;\n  }\n\n  #{$focus} {\n    color: color('focus');\n    text-decoration: underline;\n  }\n}\n\n\n// Media\n// -----\n\nimg,\nobject,\nvideo {\n  height: auto;\n  max-width: 100%;\n}\n\n\n// Code\n// ----\n\npre {\n  background-color: color('callout');\n  border-radius: size('half-shim');\n  box-shadow: 0 0 size('half-shim') color('shadow') inset;\n  padding: size('shim');\n}\n\npre,\ncode {\n  @include font-size('smaller', 0.75);\n}\n","// Scale Settings\n// ==============\n\n@import '../../node_modules/accoutrement-scale/sass/scale';\n\n\n$base-size: 22px;\n$ratio: 1.4;\n\n$sizes: (\n  'large': 28px,\n  'medium': 24px,\n  'normal': 0,\n  'rhythm': 1,\n  'small': 18px,\n  'smaller': 16px,\n\n  'h1': 3,\n  'h2': 2,\n  'h3': 1,\n\n  'gutter': 'rhythm',\n  'page': 40rem,\n);\n\n$sizes: map-merge(\n  $sizes,\n  (\n    'spacer': size('gutter')*2,\n    'shim': size('gutter') * 0.5,\n    'half-shim': size('gutter') * 0.25,\n  )\n);\n","// Scales\n// ======\n\n@import 'units';\n@import 'math';\n\n\n// Size\n// ----\n@function size(\n  $size,\n  $unit: $rhythm-unit\n) {\n  $size: _get-size($size);\n  $from-unit: unit($size);\n\n  @if type-of($size) == number {\n    @if unitless($size) {\n      $_ratio: _get-ratio($ratio);\n      @if $_ratio == 'linear' {\n        $size: $base-size * $size;\n      } @else {\n        $size: round($base-size * pow($_ratio, $size));\n      }\n    }\n\n    @if $unit and not index('ch' 'vw' 'vh' 'vmin', $from-unit) {\n      $size: convert-length($size, $unit);\n    }\n  }\n\n  @return $size;\n}\n\n\n// Negative\n// --------\n@function negative(\n  $size\n) {\n  @return 0 - size($size);\n}\n\n\n// Font Size\n// ---------\n@mixin font-size(\n  $size: normal,\n  $lines: false\n) {\n  font-size: size($size);\n  line-height: if($lines, $lines, _get-lines($size)) * size(rhythm);\n}\n\n\n// Root Size\n// ---------\n@function root-size(\n  $size\n) {\n  $size: size($size, em);\n\n  @return $base-size / $_browser-default-font-size * $size;\n}\n\n\n// Square\n// ------\n@mixin square($size) {\n  $size: size($size);\n\n  height: $size;\n  width: $size;\n}\n\n\n// Baseline\n// --------\n@mixin baseline(\n  $base-size: $base-size,\n  $ratio: $ratio\n) {\n  font-size: percentage($base-size / $_browser-default-font-size);\n  line-height: size(rhythm, em);\n}\n\n\n// Get Size\n// --------\n@function _get-size(\n  $size\n) {\n  $size: map-get($sizes, $size) or $size;\n\n  @if map-has-key($sizes, $size) {\n    $size: _get-size($size);\n  }\n\n  @return $size;\n}\n\n\n// Get Ratio\n// ---------\n@function _get-ratio(\n  $ratio: $ratio\n) {\n  $ratio: map-get($_ratio-options, $ratio) or $ratio;\n\n  @if map-has-key($_ratio-options, $ratio) {\n    $ratio: _get-ratio($ratio);\n  }\n\n  @return $ratio;\n}\n\n\n// Get Lines\n// ---------\n@function _get-lines(\n  $size: normal,\n  $rhythm: rhythm\n) {\n  $font-size: size($size, px);\n  $line-height: size($rhythm, px);\n\n  @return ceil(2 * $font-size / $line-height) / 2;\n}\n","// Headings\n// ========\n\n[data-sassdoc='project-title'] {\n  @include font-size('h1');\n  font-style: italic;\n  font-weight: normal;\n\n  [href] {\n    #{$link} {\n      color: inherit;\n    }\n\n    #{$focus} {\n      color: color('action');\n    }\n  }\n}\n\n[data-sassdoc='page-title'] {\n  @include font-size('h2');\n  margin-bottom: size('shim');\n  text-transform: capitalize;\n}\n\n[data-sassdoc='item-title'] {\n  @include font-size('h3');\n  font-weight: normal;\n  margin-bottom: size('shim');\n}\n\n[data-sassdoc='nav-title'] {\n  margin: size('shim') 0;\n\n  [href] {\n    #{$link} {\n      color: inherit;\n    }\n\n    #{$focus} {\n      color: color('action');\n    }\n  }\n}\n","// Root Layout\n// ===========\n\nhtml,\nbody {\n  overflow-x: hidden;\n}\n\n\nbody {\n  display: flex;\n  flex-wrap: wrap;\n  padding: size('shim');\n}\n","// Layout Regions\n// ==============\n\n\n[data-sassdoc-region] {\n  padding: size('shim');\n}\n\n\n// Banner\n// ------\n[data-sassdoc-region='banner'] {\n  margin-bottom: size('gutter');\n  width: 100%;\n}\n\n[data-sassdoc='project-version'] {\n  @include font-family('sans');\n  @include font-size('normal');\n  color: color('light');\n  font-style: normal;\n  font-weight: normal;\n}\n\n\n// Navigation\n// ----------\n[data-sassdoc-region='nav'] {\n  flex: 1 1 10rem;\n}\n\n[data-sassdoc-nav] {\n  #{$link} {\n    color: color('text');\n    display: block;\n    font-style: italic;\n    text-transform: capitalize;\n  }\n\n  #{$focus} {\n    color: color('action');\n  }\n}\n\n[data-sassdoc-nav='is-active'] {\n  #{$link} {\n    color: color('active');\n    text-decoration: none;\n  }\n}\n\n\n// Page\n// ----\n[data-sassdoc-region='main'] {\n  flex: 15 1 24rem;\n  overflow: hidden;\n}\n","// Item Styles\n// ===========\n\n[data-sassdoc-item] {\n  margin: size('spacer') 0;\n}\n\n[data-sassdoc='item-description'] {\n  margin-bottom: size('shim');\n}\n","// Index Styles\n// ============\n\n[data-sassdoc-page='index'] {\n  h1,\n  h2,\n  h3,\n  h4 {\n    margin-bottom: size('shim');\n  }\n\n  h1 {\n    @include font-size('h2');\n  }\n\n  h2 {\n    @include font-size('h3');\n  }\n\n  p {\n    margin-bottom: size('gutter');\n  }\n}\n"],"sourceRoot":"/source/"}