{% import 'utility.macros.j2' as utility %}


{# Display full examples with input, compiled output, and rendered html #}
{% macro display(examples_list, id) %}
  {% set group = ['examples', id]|join('_') %}

  {{ code_tabs(
    examples_list=examples_list,
    group=group
    ) }}

  {{ code_panels(
    examples_list=examples_list,
    group=group
    ) }}

  {{ render(examples_list) }}
{% endmacro %}


{# Render examples #}
{% macro render(examples_list) %}
  {% for example in examples_list %}
    {% if example.rendered and example.type != 'scss' %}
      <iframe class="render-example" srcdoc="{{ example.iframed }}" width="100%" height="0"></iframe>
    {% endif %}
  {% endfor %}
{% endmacro %}


{# Display a single block of example code #}
{% macro code(language, code, description=false) %}
  <div data-sassdoc-example="{{ language }}">
    <div data-sassdoc="example-header">
      <span data-sassdoc="example-language">
        {{ language }}
      </span>

      {% if description %}
        <span data-sassdoc='example-description'>
          {{ description|striptags }}
        </span>
      {% endif %}
    </div>
    {{ utility.code_block(language=language, content=code|escape|safe) }}
  </div>
{% endmacro %}


{# Tabbed element controls (see `static/js/app/base.js`) #}
{% macro tab(id, group, content=none, active=false) %}
  {%- set content = caller() if caller else content -%}
  <a href="#panel-{{ id }}" data-sassdoc="example-tab" id="tab-{{ id }}" role="tab" data-tab-group="{{ group }}" data-contents="{{ id }}" aria-controls="panel-{{ id }}"{% if active %} aria-selected="true" tabindex="0"{% else %} tabindex="-1"{% endif %}>
    {{ content }}
  </a>
{% endmacro %}


{# Tabbed elements (see `static/js/app/base.js`) #}
{% macro tab_panel(id, group, content=none, active=false, class=none) %}
  {%- set content = caller() if caller else content -%}
  <div data-sassdoc="example-panel" id="panel-{{ id }}" role="tabpanel" data-tab-group="{{ group }}" aria-labelledby="tab-{{ id }}" aria-hidden="{{ 'false' if active else 'true' }}" {{ utility.attr_if('data-sassdoc-example-panel', class) }}>
    {{ content }}
  </div>
{% endmacro %}


{# Generate tabs for organizing code blocks #}
{% macro code_tabs(examples_list, group) %}
  {% set lang_types = {
    'njk': 'markup',
    'html': 'markup',
    'j2': 'markup',
    'css': 'style',
    'scss': 'style',
    'sass': 'style',
    'js': 'interaction',
    'javascript': 'interaction'
  } %}

  <div data-sassdoc="example-tabs">
    {% for example in examples_list %}
      {% if not (example.description|striptags == 'compiled') %}
        {{ tab(
          id=[group, example.type]|join('_'),
          group=group,
          content=lang_types[example.type],
          active=true if loop.first else false
          ) }}
      {% endif %}
    {% endfor %}
  </div>
{% endmacro %}


{# Generate panels for organizing code blocks #}
{% macro code_panels(examples_list, group) %}
  {% set render_types = {
    'njk': 'html',
    'scss': 'css',
    'sass': 'css'
  } %}

  {% for example in examples_list %}
    {% if not (example.description|striptags == 'compiled') %}
      {# Get compiled language and code, if available from `rendered` or `next` #}
      {% set rendered = example.rendered if (example.rendered and render_types[example.type]) else none %}
      {% set rendered_type = render_types[example.type] if rendered else none %}
      {% set next = examples_list[loop.index] %}
      {% set next = next if (next.description|striptags == 'compiled') else none %}
      {% set next_type = next.type if next else none %}
      {% set next_code = next.code if next else none %}
      {% set compiled_type = rendered_type or next_type %}
      {% set compiled_code = rendered or next_code %}

      {% call tab_panel(
        id=[group, example.type]|join('_'),
        group=group,
        active=true if loop.first else false
        ) %}

        {{ code(
          language=example.type,
          code=example.code,
          description=example.description
          ) }}

        {% if compiled_code %}
          {{ code(
            language=compiled_type,
            code=compiled_code,
            description='compiled'
            ) }}
        {% endif %}
      {% endcall %}
    {% endif %}
  {% endfor %}
{% endmacro %}
