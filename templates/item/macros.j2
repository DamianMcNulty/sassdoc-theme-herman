{% import 'utility.macros.j2' as utility %}


{% macro heading(item, type, id, display=none) %}
  {% set item_name = format_name(item, type) %}
  {% set display_type = format_type(type) %}

  <header data-item-section="header">
    <h2 class="item-title">
      {% if display_type %}
        <span class="item-type">{{ display_type }}</span>
      {% endif %}

      <a href="#{{ id }}" class="item-name">{{ item_name }}</a>

      {% if item.type %}
        <span class="value-type">({{ item.type }})</span>
      {% endif %}

      {% if item.access == 'private' %}
        <span class="item-note">[private]</span>
      {% endif %}
    </h2>

    {{ alias(
      is_alias=item.alias,
      has_alias=item.aliased,
      type=type,
      display=display
      ) }}
  </header>
{% endmacro %}


{% macro alias(is_alias, has_alias, type, display=none) %}
  {% if is_alias or has_alias %}
    {% set alias_intro = 'alias for' if is_alias else 'aliased as' %}
    {% set items = is_alias or has_alias %}

    <p class="alias">
      {{ alias_intro }}

      {% if (items.length > 1) %}
        {% for item in items %}
          {{ alias_link(
            item=item,
            type=type,
            link_alias=display['alias']
            ) }}{% if not loop.last %},{% endif %}
        {% endfor %}
      {% else %}
        {{ alias_link(
          item=items,
          type=type,
          link_alias=display['alias']
          ) }}
      {% endif %}
    </p>
  {% endif %}
{% endmacro %}


{% macro alias_link(item, type, link_alias) %}
  {% set alias_text = format_name(item, type) %}
  {% set alias_url = get_link(item, type) if link_alias else none %}
  {% set alias_url = alias_url if (alias_url != '') else none %}
  {{ utility.link_if(
    content=alias_text,
    url=alias_url,
    attrs={'class': 'alias-title'}
    ) }}
{% endmacro %}


{# This works great if we know the group,
   or the referenced item is on the same page #}
{% macro get_link(name, type, group=none) -%}
  {% set group = [group, 'html']|join('.') if group else none %}
  {{ group }}#{{ type }}--{{ name }}
{%- endmacro %}


{% macro format_name(item, type) -%}
  {%- set item_name = item.context.name if item.context else item -%}
  {%- set item_name = [item_name, '()']|join if (type == 'mixin' or type == 'function') else item_name -%}
  {%- set item_name = ['$', item_name]|join if (type == 'variable') else item_name -%}
  {{ item_name }}
{%- endmacro %}


{% macro format_type(type) -%}
  {%- set display_type = ['@', type]|join if ((type == 'mixin') or (type == 'function')) else type -%}
  {%- set display_type = none if ((type == 'variable') or (type == 'css')) else display_type -%}
  {{ display_type }}
{%- endmacro %}


{% macro source(item, type) %}
  {%- if not ((type == 'mixin') or (type == 'function')) -%}
    {% set code = scss_variable(item) if (type == 'variable') else none %}
    {% set code = scss_css(item) if (type == 'css') else code %}

    <div data-item-section="source">
      {{ utility.code_block(language='scss', content=code|escape|safe) }}
    </div>
  {%- endif -%}
{% endmacro %}


{% macro summary(content) %}
  {% if content %}
    <div data-item-section="summary">
      <h3 class="item-subtitle">Description</h3>
      {{ content|safe }}
    </div>
  {% endif %}
{% endmacro %}


{% macro scss_variable(item) -%}
${{ item.context.name }}: {{ item.context.value }}{% if item.context.scope != 'private' %} !{{ item.context.scope }}{% endif %};
{%- endmacro %}


{%- macro scss_css(item) -%}
{{ item.context.name }} {
  {{ item.context.value }}
}
{%- endmacro -%}
